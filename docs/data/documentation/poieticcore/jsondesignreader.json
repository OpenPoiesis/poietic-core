{
  "abstract" : [
    {
      "text" : "Object for reading foreign designs represented as JSON.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/PoieticCore\/documentation\/PoieticCore"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/JSONDesignReader"
  },
  "kind" : "symbol",
  "metadata" : {
    "externalID" : "s:11PoieticCore16JSONDesignReaderC",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "class"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "JSONDesignReader"
      }
    ],
    "modules" : [
      {
        "name" : "PoieticCore"
      }
    ],
    "navigatorTitle" : [
      {
        "kind" : "identifier",
        "text" : "JSONDesignReader"
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Class",
    "symbolKind" : "class",
    "title" : "JSONDesignReader"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "macOS"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "final"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "keyword",
              "text" : "class"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "JSONDesignReader"
            }
          ]
        }
      ],
      "kind" : "declarations"
    },
    {
      "content" : [
        {
          "anchor" : "overview",
          "level" : 2,
          "text" : "Overview",
          "type" : "heading"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "Hand-writing foreign frames in JSON is discouraged, as they might become",
                  "type" : "text"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "text" : "complex very quickly. It is not the purpose of this toolkit to",
                  "type" : "text"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "text" : "process and maintain raw human-written textual representation of designs.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "Note",
          "style" : "note",
          "type" : "aside"
        },
        {
          "inlineContent" : [
            {
              "text" : "The top-level structure of the design is a dictionary with the following keys:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "items" : [
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "code" : "format_version",
                      "type" : "codeVoice"
                    },
                    {
                      "text" : " ",
                      "type" : "text"
                    },
                    {
                      "inlineContent" : [
                        {
                          "text" : "(recommended, string)",
                          "type" : "text"
                        }
                      ],
                      "type" : "emphasis"
                    },
                    {
                      "text" : ": Version of the JSON encoding format. Currently",
                      "type" : "text"
                    },
                    {
                      "text" : " ",
                      "type" : "text"
                    },
                    {
                      "code" : "\"0.4.0\"",
                      "type" : "codeVoice"
                    },
                    {
                      "text" : ".",
                      "type" : "text"
                    },
                    {
                      "text" : " ",
                      "type" : "text"
                    },
                    {
                      "text" : "See ",
                      "type" : "text"
                    },
                    {
                      "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/JSONDesignReader\/CurrentFormatVersion",
                      "isActive" : true,
                      "type" : "reference"
                    },
                    {
                      "text" : ".",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            },
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "code" : "metamodel",
                      "type" : "codeVoice"
                    },
                    {
                      "text" : ": Name of the metamodel the design contents conforms to. See ",
                      "type" : "text"
                    },
                    {
                      "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/Metamodel",
                      "isActive" : true,
                      "type" : "reference"
                    },
                    {
                      "text" : ".",
                      "type" : "text"
                    },
                    {
                      "text" : " ",
                      "type" : "text"
                    },
                    {
                      "text" : "If not present, the default metamodel by the tool\/application at hand is assumed. It is",
                      "type" : "text"
                    },
                    {
                      "text" : " ",
                      "type" : "text"
                    },
                    {
                      "text" : "always preferred to include the metamodel name.",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            },
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "code" : "metamodel_version",
                      "type" : "codeVoice"
                    },
                    {
                      "text" : ": Version of the metamodel. If not provided, then the latest version",
                      "type" : "text"
                    },
                    {
                      "text" : " ",
                      "type" : "text"
                    },
                    {
                      "text" : "should be assumed by the application\/tool.",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            },
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "code" : "snapshots",
                      "type" : "codeVoice"
                    },
                    {
                      "text" : ": All object version snapshots, referenced by frames. See ",
                      "type" : "text"
                    },
                    {
                      "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/RawSnapshot",
                      "isActive" : true,
                      "type" : "reference"
                    },
                    {
                      "text" : ".",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            },
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "code" : "frames",
                      "type" : "codeVoice"
                    },
                    {
                      "text" : ": Design frames contained within. See ",
                      "type" : "text"
                    },
                    {
                      "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/RawFrame",
                      "isActive" : true,
                      "type" : "reference"
                    },
                    {
                      "text" : ".",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            },
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "code" : "user_references",
                      "type" : "codeVoice"
                    },
                    {
                      "text" : ": User defined references to any identifiable entity within the design.",
                      "type" : "text"
                    },
                    {
                      "text" : " ",
                      "type" : "text"
                    },
                    {
                      "text" : "See ",
                      "type" : "text"
                    },
                    {
                      "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/RawNamedReference",
                      "isActive" : true,
                      "type" : "reference"
                    },
                    {
                      "text" : ".",
                      "type" : "text"
                    },
                    {
                      "text" : " ",
                      "type" : "text"
                    },
                    {
                      "text" : "Named frames (",
                      "type" : "text"
                    },
                    {
                      "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/Design\/frame(name:)",
                      "isActive" : true,
                      "type" : "reference"
                    },
                    {
                      "text" : ") are stored in the user references as well.",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            },
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "code" : "system_references",
                      "type" : "codeVoice"
                    },
                    {
                      "text" : ": References used by the system (same structure as ",
                      "type" : "text"
                    },
                    {
                      "code" : "user_references",
                      "type" : "codeVoice"
                    },
                    {
                      "text" : ").",
                      "type" : "text"
                    },
                    {
                      "text" : " ",
                      "type" : "text"
                    },
                    {
                      "text" : "For example the current design frame is stored as a system reference.",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            },
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "code" : "user_lists",
                      "type" : "codeVoice"
                    },
                    {
                      "text" : ": User defined lists of references to any identifiable entity within the design. See ",
                      "type" : "text"
                    },
                    {
                      "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/RawNamedList",
                      "isActive" : true,
                      "type" : "reference"
                    },
                    {
                      "text" : ".",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            },
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "code" : "system_lists",
                      "type" : "codeVoice"
                    },
                    {
                      "text" : ": Reference lists used by the system (same structure as ",
                      "type" : "text"
                    },
                    {
                      "code" : "user_references",
                      "type" : "codeVoice"
                    },
                    {
                      "text" : ").",
                      "type" : "text"
                    },
                    {
                      "text" : " ",
                      "type" : "text"
                    },
                    {
                      "text" : "For example undo and redo history is stored in the system lists.",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            }
          ],
          "type" : "unorderedList"
        },
        {
          "anchor" : "Snapshots",
          "level" : 2,
          "text" : "Snapshots",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "For detailed information see ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/RawSnapshot",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : ".",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "The JSON representation of a snapshot object is a dictionary with the following",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "keys and their corresponding values:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "items" : [
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "code" : "type",
                      "type" : "codeVoice"
                    },
                    {
                      "text" : " ",
                      "type" : "text"
                    },
                    {
                      "inlineContent" : [
                        {
                          "text" : "(required)",
                          "type" : "text"
                        }
                      ],
                      "type" : "emphasis"
                    },
                    {
                      "text" : ": Name of the object type. The type must exist in the metamodel that the",
                      "type" : "text"
                    },
                    {
                      "text" : " ",
                      "type" : "text"
                    },
                    {
                      "text" : "design conforms to.",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            },
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "code" : "id",
                      "type" : "codeVoice"
                    },
                    {
                      "text" : " ",
                      "type" : "text"
                    },
                    {
                      "inlineContent" : [
                        {
                          "text" : "(recommended)",
                          "type" : "text"
                        }
                      ],
                      "type" : "emphasis"
                    },
                    {
                      "text" : ": Object ID, if not provided, one will be generated during",
                      "type" : "text"
                    },
                    {
                      "text" : " ",
                      "type" : "text"
                    },
                    {
                      "text" : "loading, but the object can not be referenced to within structural references",
                      "type" : "text"
                    },
                    {
                      "text" : " ",
                      "type" : "text"
                    },
                    {
                      "text" : "(edges, parent\/child). Can be an int or a string.",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            },
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "code" : "snapshot_id",
                      "type" : "codeVoice"
                    },
                    {
                      "text" : " ",
                      "type" : "text"
                    },
                    {
                      "inlineContent" : [
                        {
                          "text" : "(recommended)",
                          "type" : "text"
                        }
                      ],
                      "type" : "emphasis"
                    },
                    {
                      "text" : ": snapshot ID, if not provided, one will be",
                      "type" : "text"
                    },
                    {
                      "text" : " ",
                      "type" : "text"
                    },
                    {
                      "text" : "generated during loading. Can be an int or a string.",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            },
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "code" : "structure",
                      "type" : "codeVoice"
                    },
                    {
                      "inlineContent" : [
                        {
                          "text" : "(recommended)",
                          "type" : "text"
                        }
                      ],
                      "type" : "emphasis"
                    },
                    {
                      "text" : ": Structure type: ",
                      "type" : "text"
                    },
                    {
                      "code" : "node",
                      "type" : "codeVoice"
                    },
                    {
                      "text" : ", ",
                      "type" : "text"
                    },
                    {
                      "code" : "edge",
                      "type" : "codeVoice"
                    },
                    {
                      "text" : ", ",
                      "type" : "text"
                    },
                    {
                      "code" : "unstructured",
                      "type" : "codeVoice"
                    },
                    {
                      "text" : ". See ",
                      "type" : "text"
                    },
                    {
                      "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/RawStructure",
                      "isActive" : true,
                      "type" : "reference"
                    },
                    {
                      "text" : ".",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            },
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "code" : "origin",
                      "type" : "codeVoice"
                    },
                    {
                      "text" : " (structural): If the structure is an edge, the property references its origin object ID.",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            },
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "code" : "target",
                      "type" : "codeVoice"
                    },
                    {
                      "text" : " (structural): If the structure is an edge, the property references its target object ID.",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            },
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "code" : "parent",
                      "type" : "codeVoice"
                    },
                    {
                      "text" : " (optional): reference to object’s parent object ID.",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            },
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "code" : "attributes",
                      "type" : "codeVoice"
                    },
                    {
                      "text" : ": a dictionary where keys are attribute names and values are",
                      "type" : "text"
                    },
                    {
                      "text" : " ",
                      "type" : "text"
                    },
                    {
                      "text" : "variants. See below how variants are encoded.",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            }
          ],
          "type" : "unorderedList"
        },
        {
          "anchor" : "Variants",
          "level" : 2,
          "text" : "Variants",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "Variant values are encoded as dictionaries with two keys. Required key is ",
              "type" : "text"
            },
            {
              "code" : "type",
              "type" : "codeVoice"
            },
            {
              "text" : " which",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "denotes the variant type. The other key depends on the variant type:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "items" : [
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "text" : "Variant atom types ",
                      "type" : "text"
                    },
                    {
                      "code" : "bool",
                      "type" : "codeVoice"
                    },
                    {
                      "text" : ", ",
                      "type" : "text"
                    },
                    {
                      "code" : "int",
                      "type" : "codeVoice"
                    },
                    {
                      "text" : ", ",
                      "type" : "text"
                    },
                    {
                      "code" : "float",
                      "type" : "codeVoice"
                    },
                    {
                      "text" : ", ",
                      "type" : "text"
                    },
                    {
                      "code" : "string",
                      "type" : "codeVoice"
                    },
                    {
                      "text" : ", ",
                      "type" : "text"
                    },
                    {
                      "code" : "point",
                      "type" : "codeVoice"
                    },
                    {
                      "text" : ": value is under the ",
                      "type" : "text"
                    },
                    {
                      "code" : "value",
                      "type" : "codeVoice"
                    },
                    {
                      "text" : " key.",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            },
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "text" : "Variant array types ",
                      "type" : "text"
                    },
                    {
                      "code" : "bool_array",
                      "type" : "codeVoice"
                    },
                    {
                      "text" : ", ",
                      "type" : "text"
                    },
                    {
                      "code" : "int_array",
                      "type" : "codeVoice"
                    },
                    {
                      "text" : ", ",
                      "type" : "text"
                    },
                    {
                      "code" : "float_array",
                      "type" : "codeVoice"
                    },
                    {
                      "text" : ", ",
                      "type" : "text"
                    },
                    {
                      "code" : "string_array",
                      "type" : "codeVoice"
                    },
                    {
                      "text" : ", ",
                      "type" : "text"
                    },
                    {
                      "code" : "point_array",
                      "type" : "codeVoice"
                    },
                    {
                      "text" : ":",
                      "type" : "text"
                    },
                    {
                      "text" : " ",
                      "type" : "text"
                    },
                    {
                      "text" : "value is under the ",
                      "type" : "text"
                    },
                    {
                      "code" : "items",
                      "type" : "codeVoice"
                    },
                    {
                      "text" : " key.",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            }
          ],
          "type" : "unorderedList"
        },
        {
          "inlineContent" : [
            {
              "text" : "Validation and requirements:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "items" : [
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "text" : "For array variants all items must be of the same type.",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            },
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "text" : "For int or float variants or arrays of ints or floats, any int or float convertible value is",
                      "type" : "text"
                    },
                    {
                      "text" : " ",
                      "type" : "text"
                    },
                    {
                      "text" : "accepted. If the value is not exactly convertible, the value is invalid.",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            },
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "text" : "Point is represented as a two-item array of numeric values. Empty, one item or array with more",
                      "type" : "text"
                    },
                    {
                      "text" : " ",
                      "type" : "text"
                    },
                    {
                      "text" : "items is considered invalid.",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            },
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "text" : "Array of points is an array of two-item arrays of numeric values.",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            }
          ],
          "type" : "unorderedList"
        },
        {
          "inlineContent" : [
            {
              "text" : "Examples:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "alignments" : [
            "unset",
            "unset",
            "left",
            "left"
          ],
          "header" : "row",
          "rows" : [
            [
              [
                {
                  "inlineContent" : [
                    {
                      "text" : "JSON value",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                }
              ],
              [
                {
                  "inlineContent" : [
                    {
                      "text" : "Variant",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                }
              ],
              [
                {
                  "inlineContent" : [
                    {
                      "text" : "Example",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                }
              ],
              [
                {
                  "inlineContent" : [
                    {
                      "text" : "Note",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            ],
            [
              [
                {
                  "inlineContent" : [
                    {
                      "code" : "{\"type\": \"bool\", \"value\": true}",
                      "type" : "codeVoice"
                    }
                  ],
                  "type" : "paragraph"
                }
              ],
              [
                {
                  "inlineContent" : [
                    {
                      "text" : "bool",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                }
              ],
              [
                {
                  "inlineContent" : [
                    {
                      "code" : "true",
                      "type" : "codeVoice"
                    }
                  ],
                  "type" : "paragraph"
                }
              ],
              [
                {
                  "inlineContent" : [

                  ],
                  "type" : "paragraph"
                }
              ]
            ],
            [
              [
                {
                  "inlineContent" : [
                    {
                      "code" : "{\"type\": \"int\", \"value\": 10}",
                      "type" : "codeVoice"
                    }
                  ],
                  "type" : "paragraph"
                }
              ],
              [
                {
                  "inlineContent" : [
                    {
                      "text" : "int",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                }
              ],
              [
                {
                  "inlineContent" : [
                    {
                      "text" : "10",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                }
              ],
              [
                {
                  "inlineContent" : [
                    {
                      "text" : "Any convertible JSON numeric value is allowed.",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            ],
            [
              [
                {
                  "inlineContent" : [
                    {
                      "code" : "{\"type\": \"float\", \"value\": 1.5}",
                      "type" : "codeVoice"
                    }
                  ],
                  "type" : "paragraph"
                }
              ],
              [
                {
                  "inlineContent" : [
                    {
                      "text" : "float",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                }
              ],
              [
                {
                  "inlineContent" : [
                    {
                      "text" : "1.5",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                }
              ],
              [
                {
                  "inlineContent" : [
                    {
                      "text" : "Any convertible JSON numeric value is allowed.",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            ],
            [
              [
                {
                  "inlineContent" : [
                    {
                      "code" : "{\"type\": \"point\", \"value\": [10, 20]}",
                      "type" : "codeVoice"
                    }
                  ],
                  "type" : "paragraph"
                }
              ],
              [
                {
                  "inlineContent" : [
                    {
                      "text" : "point",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                }
              ],
              [
                {
                  "inlineContent" : [
                    {
                      "text" : "Point(x: 10.0, y: 20.0)",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                }
              ],
              [
                {
                  "inlineContent" : [
                    {
                      "text" : "Must be an array of exactly two numbers.",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            ],
            [
              [
                {
                  "inlineContent" : [
                    {
                      "code" : "{\"type\": \"int_array\", \"items\": [10, 20, 30]}",
                      "type" : "codeVoice"
                    }
                  ],
                  "type" : "paragraph"
                }
              ],
              [
                {
                  "inlineContent" : [
                    {
                      "text" : "array of ints",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                }
              ],
              [
                {
                  "inlineContent" : [
                    {
                      "code" : "[10, 20, 30]",
                      "type" : "codeVoice"
                    }
                  ],
                  "type" : "paragraph"
                }
              ],
              [
                {
                  "inlineContent" : [
                    {
                      "text" : "All items must be of the same type.",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            ],
            [
              [
                {
                  "inlineContent" : [
                    {
                      "code" : "{\"type\": \"point_array\", \"items\": [[10, 20], [30, 40]]}",
                      "type" : "codeVoice"
                    }
                  ],
                  "type" : "paragraph"
                }
              ],
              [
                {
                  "inlineContent" : [
                    {
                      "text" : "array of ints",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                }
              ],
              [
                {
                  "inlineContent" : [
                    {
                      "code" : "[Point(x:10, y:20), Point(x:30, y:40)]",
                      "type" : "codeVoice"
                    }
                  ],
                  "type" : "paragraph"
                }
              ],
              [
                {
                  "inlineContent" : [

                  ],
                  "type" : "paragraph"
                }
              ]
            ]
          ],
          "type" : "table"
        }
      ],
      "kind" : "content"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "seeAlsoSections" : [
    {
      "anchor" : "Reading-and-Loading",
      "generated" : true,
      "identifiers" : [
        "doc:\/\/PoieticCore\/documentation\/PoieticCore\/DesignLoader",
        "doc:\/\/PoieticCore\/documentation\/PoieticCore\/DesignLoaderError",
        "doc:\/\/PoieticCore\/documentation\/PoieticCore\/RawFrameError",
        "doc:\/\/PoieticCore\/documentation\/PoieticCore\/RawSnapshotError",
        "doc:\/\/PoieticCore\/documentation\/PoieticCore\/RawIdentityError",
        "doc:\/\/PoieticCore\/documentation\/PoieticCore\/RawDesignReaderError"
      ],
      "title" : "Reading and Loading"
    }
  ],
  "topicSections" : [
    {
      "anchor" : "Initializers",
      "generated" : true,
      "identifiers" : [
        "doc:\/\/PoieticCore\/documentation\/PoieticCore\/JSONDesignReader\/init(variantCoding:)"
      ],
      "title" : "Initializers"
    },
    {
      "anchor" : "Instance-Properties",
      "generated" : true,
      "identifiers" : [
        "doc:\/\/PoieticCore\/documentation\/PoieticCore\/JSONDesignReader\/variantCoding"
      ],
      "title" : "Instance Properties"
    },
    {
      "anchor" : "Instance-Methods",
      "generated" : true,
      "identifiers" : [
        "doc:\/\/PoieticCore\/documentation\/PoieticCore\/JSONDesignReader\/read(data:)",
        "doc:\/\/PoieticCore\/documentation\/PoieticCore\/JSONDesignReader\/read(data:version:)",
        "doc:\/\/PoieticCore\/documentation\/PoieticCore\/JSONDesignReader\/read(fileAtURL:)"
      ],
      "title" : "Instance Methods"
    },
    {
      "anchor" : "Type-Properties",
      "generated" : true,
      "identifiers" : [
        "doc:\/\/PoieticCore\/documentation\/PoieticCore\/JSONDesignReader\/CurrentFormatVersion"
      ],
      "title" : "Type Properties"
    }
  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/poieticcore\/jsondesignreader"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://PoieticCore/documentation/PoieticCore": {
  "abstract" : [
    {
      "text" : "Core library for creating applications for systems thinking and simulation.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "PoieticCore",
  "type" : "topic",
  "url" : "\/documentation\/poieticcore"
},
"doc://PoieticCore/documentation/PoieticCore/Design/frame(name:)": {
  "abstract" : [
    {
      "text" : "Get a frame from the list of named frames.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "frame"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "name"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:11PoieticCore11DesignFrameC",
      "text" : "DesignFrame"
    },
    {
      "kind" : "text",
      "text" : "?"
    }
  ],
  "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/Design\/frame(name:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "frame(name:)",
  "type" : "topic",
  "url" : "\/documentation\/poieticcore\/design\/frame(name:)"
},
"doc://PoieticCore/documentation/PoieticCore/DesignLoader": {
  "abstract" : [
    {
      "text" : "Object that loads raw representation of design or design entities into a design.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "DesignLoader"
    }
  ],
  "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/DesignLoader",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "DesignLoader"
    }
  ],
  "role" : "symbol",
  "title" : "DesignLoader",
  "type" : "topic",
  "url" : "\/documentation\/poieticcore\/designloader"
},
"doc://PoieticCore/documentation/PoieticCore/DesignLoaderError": {
  "abstract" : [
    {
      "text" : "Error thrown by the design loader.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "DesignLoaderError"
    }
  ],
  "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/DesignLoaderError",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "DesignLoaderError"
    }
  ],
  "role" : "symbol",
  "title" : "DesignLoaderError",
  "type" : "topic",
  "url" : "\/documentation\/poieticcore\/designloadererror"
},
"doc://PoieticCore/documentation/PoieticCore/IdentityReservation": {
  "abstract" : [
    {
      "text" : "Identity reservation provides functionality to reserve IDs within a single transaction.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "IdentityReservation"
    }
  ],
  "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/IdentityReservation",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "IdentityReservation"
    }
  ],
  "role" : "symbol",
  "title" : "IdentityReservation",
  "type" : "topic",
  "url" : "\/documentation\/poieticcore\/identityreservation"
},
"doc://PoieticCore/documentation/PoieticCore/JSONDesignReader": {
  "abstract" : [
    {
      "text" : "Object for reading foreign designs represented as JSON.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "JSONDesignReader"
    }
  ],
  "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/JSONDesignReader",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "JSONDesignReader"
    }
  ],
  "role" : "symbol",
  "title" : "JSONDesignReader",
  "type" : "topic",
  "url" : "\/documentation\/poieticcore\/jsondesignreader"
},
"doc://PoieticCore/documentation/PoieticCore/JSONDesignReader/CurrentFormatVersion": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "static"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "let"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "CurrentFormatVersion"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:11PoieticCore15SemanticVersionV",
      "text" : "SemanticVersion"
    }
  ],
  "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/JSONDesignReader\/CurrentFormatVersion",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "CurrentFormatVersion",
  "type" : "topic",
  "url" : "\/documentation\/poieticcore\/jsondesignreader\/currentformatversion"
},
"doc://PoieticCore/documentation/PoieticCore/JSONDesignReader/init(variantCoding:)": {
  "abstract" : [
    {
      "text" : "Create a frame reader.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "variantCoding"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:11PoieticCore7VariantO",
      "text" : "Variant"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:11PoieticCore7VariantO10CodingTypeO",
      "text" : "CodingType"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/JSONDesignReader\/init(variantCoding:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init(variantCoding:)",
  "type" : "topic",
  "url" : "\/documentation\/poieticcore\/jsondesignreader\/init(variantcoding:)"
},
"doc://PoieticCore/documentation/PoieticCore/JSONDesignReader/read(data:)": {
  "abstract" : [
    {
      "text" : "Read a raw design from JSON data.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "read"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "data"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10Foundation4DataV",
      "text" : "Data"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:11PoieticCore20RawDesignReaderErrorO",
      "text" : "RawDesignReaderError"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:11PoieticCore9RawDesignC",
      "text" : "RawDesign"
    }
  ],
  "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/JSONDesignReader\/read(data:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "read(data:)",
  "type" : "topic",
  "url" : "\/documentation\/poieticcore\/jsondesignreader\/read(data:)"
},
"doc://PoieticCore/documentation/PoieticCore/JSONDesignReader/read(data:version:)": {
  "abstract" : [
    {
      "text" : "Read a raw design from JSON data using an adapter for a non-current version.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "read"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "data"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10Foundation4DataV",
      "text" : "Data"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "version"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:11PoieticCore20RawDesignReaderErrorO",
      "text" : "RawDesignReaderError"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:11PoieticCore9RawDesignC",
      "text" : "RawDesign"
    }
  ],
  "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/JSONDesignReader\/read(data:version:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "read(data:version:)",
  "type" : "topic",
  "url" : "\/documentation\/poieticcore\/jsondesignreader\/read(data:version:)"
},
"doc://PoieticCore/documentation/PoieticCore/JSONDesignReader/read(fileAtURL:)": {
  "abstract" : [
    {
      "text" : "Read a raw design from a JSON file at given URL.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "read"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "fileAtURL"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10Foundation3URLV",
      "text" : "URL"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:11PoieticCore20RawDesignReaderErrorO",
      "text" : "RawDesignReaderError"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:11PoieticCore9RawDesignC",
      "text" : "RawDesign"
    }
  ],
  "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/JSONDesignReader\/read(fileAtURL:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "read(fileAtURL:)",
  "type" : "topic",
  "url" : "\/documentation\/poieticcore\/jsondesignreader\/read(fileaturl:)"
},
"doc://PoieticCore/documentation/PoieticCore/JSONDesignReader/variantCoding": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "let"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "variantCoding"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:11PoieticCore7VariantO",
      "text" : "Variant"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:11PoieticCore7VariantO10CodingTypeO",
      "text" : "CodingType"
    }
  ],
  "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/JSONDesignReader\/variantCoding",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "variantCoding",
  "type" : "topic",
  "url" : "\/documentation\/poieticcore\/jsondesignreader\/variantcoding"
},
"doc://PoieticCore/documentation/PoieticCore/Metamodel": {
  "abstract" : [
    {
      "text" : "Object describing a model.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Metamodel"
    }
  ],
  "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/Metamodel",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Metamodel"
    }
  ],
  "role" : "symbol",
  "title" : "Metamodel",
  "type" : "topic",
  "url" : "\/documentation\/poieticcore\/metamodel"
},
"doc://PoieticCore/documentation/PoieticCore/RawDesignReaderError": {
  "abstract" : [
    {
      "text" : "Error raised by the design readers.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "RawDesignReaderError"
    }
  ],
  "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/RawDesignReaderError",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "RawDesignReaderError"
    }
  ],
  "role" : "symbol",
  "title" : "RawDesignReaderError",
  "type" : "topic",
  "url" : "\/documentation\/poieticcore\/rawdesignreadererror"
},
"doc://PoieticCore/documentation/PoieticCore/RawFrame": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "RawFrame"
    }
  ],
  "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/RawFrame",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "RawFrame"
    }
  ],
  "role" : "symbol",
  "title" : "RawFrame",
  "type" : "topic",
  "url" : "\/documentation\/poieticcore\/rawframe"
},
"doc://PoieticCore/documentation/PoieticCore/RawFrameError": {
  "abstract" : [
    {
      "text" : "Error thrown by the design loader when there is an issue with a raw frame.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "RawFrameError"
    }
  ],
  "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/RawFrameError",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "RawFrameError"
    }
  ],
  "role" : "symbol",
  "title" : "RawFrameError",
  "type" : "topic",
  "url" : "\/documentation\/poieticcore\/rawframeerror"
},
"doc://PoieticCore/documentation/PoieticCore/RawIdentityError": {
  "abstract" : [
    {
      "text" : "Error thrown by the ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/IdentityReservation",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "RawIdentityError"
    }
  ],
  "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/RawIdentityError",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "RawIdentityError"
    }
  ],
  "role" : "symbol",
  "title" : "RawIdentityError",
  "type" : "topic",
  "url" : "\/documentation\/poieticcore\/rawidentityerror"
},
"doc://PoieticCore/documentation/PoieticCore/RawNamedList": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "RawNamedList"
    }
  ],
  "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/RawNamedList",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "RawNamedList"
    }
  ],
  "role" : "symbol",
  "title" : "RawNamedList",
  "type" : "topic",
  "url" : "\/documentation\/poieticcore\/rawnamedlist"
},
"doc://PoieticCore/documentation/PoieticCore/RawNamedReference": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "RawNamedReference"
    }
  ],
  "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/RawNamedReference",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "RawNamedReference"
    }
  ],
  "role" : "symbol",
  "title" : "RawNamedReference",
  "type" : "topic",
  "url" : "\/documentation\/poieticcore\/rawnamedreference"
},
"doc://PoieticCore/documentation/PoieticCore/RawSnapshot": {
  "abstract" : [
    {
      "text" : "Raw representation of a snapshot.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "RawSnapshot"
    }
  ],
  "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/RawSnapshot",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "RawSnapshot"
    }
  ],
  "role" : "symbol",
  "title" : "RawSnapshot",
  "type" : "topic",
  "url" : "\/documentation\/poieticcore\/rawsnapshot"
},
"doc://PoieticCore/documentation/PoieticCore/RawSnapshotError": {
  "abstract" : [
    {
      "text" : "Error thrown by the design loader when there is an issue with an object snapshot.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "RawSnapshotError"
    }
  ],
  "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/RawSnapshotError",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "RawSnapshotError"
    }
  ],
  "role" : "symbol",
  "title" : "RawSnapshotError",
  "type" : "topic",
  "url" : "\/documentation\/poieticcore\/rawsnapshoterror"
},
"doc://PoieticCore/documentation/PoieticCore/RawStructure": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "RawStructure"
    }
  ],
  "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/RawStructure",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "RawStructure"
    }
  ],
  "role" : "symbol",
  "title" : "RawStructure",
  "type" : "topic",
  "url" : "\/documentation\/poieticcore\/rawstructure"
}
}
}