{
  "abstract" : [
    {
      "text" : "Encode the Variant into the encoder.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/PoieticCore\/documentation\/PoieticCore",
        "doc:\/\/PoieticCore\/documentation\/PoieticCore\/Variant"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/Variant\/encode(to:)"
  },
  "kind" : "symbol",
  "metadata" : {
    "extendedModule" : "PoieticCore",
    "externalID" : "s:11PoieticCore7VariantO6encode2toys7Encoder_p_tKF",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "encode"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "externalParam",
        "text" : "to"
      },
      {
        "kind" : "text",
        "text" : ": any "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:s7EncoderP",
        "text" : "Encoder"
      },
      {
        "kind" : "text",
        "text" : ") "
      },
      {
        "kind" : "keyword",
        "text" : "throws"
      }
    ],
    "modules" : [
      {
        "name" : "PoieticCore"
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Instance Method",
    "symbolKind" : "method",
    "title" : "encode(to:)"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "macOS"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "func"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "encode"
            },
            {
              "kind" : "text",
              "text" : "("
            },
            {
              "kind" : "externalParam",
              "text" : "to"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "internalParam",
              "text" : "encoder"
            },
            {
              "kind" : "text",
              "text" : ": any "
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:s7EncoderP",
              "text" : "Encoder"
            },
            {
              "kind" : "text",
              "text" : ") "
            },
            {
              "kind" : "keyword",
              "text" : "throws"
            }
          ]
        }
      ],
      "kind" : "declarations"
    },
    {
      "content" : [
        {
          "anchor" : "discussion",
          "level" : 2,
          "text" : "Discussion",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "There are two ways how the variant is encoded. One way stores the type",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "explicitly in addition to the data, the other tries to convert the",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "variant to one of the decoderâ€™s coding type.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "Default is encoding it as an array where the first element is the type",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "and the second element is the variant content.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "The data type is encoded as one of the ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/ValueType\/typeCode",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " values.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "Example: An integer value ",
              "type" : "text"
            },
            {
              "code" : "10",
              "type" : "codeVoice"
            },
            {
              "text" : " would be encoded in JSON as ",
              "type" : "text"
            },
            {
              "code" : "[\"i\", 10]",
              "type" : "codeVoice"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "by default. If coalesced encoding is requested then it will be encoded",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "just as a number ",
              "type" : "text"
            },
            {
              "code" : "10",
              "type" : "codeVoice"
            },
            {
              "text" : ".",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "To enable coalescing, set the ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/Variant\/CodingType",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " to ",
              "type" : "text"
            },
            {
              "code" : "true",
              "type" : "codeVoice"
            },
            {
              "text" : ":",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "    let encoder = JSONEncoder()",
            "    encoder.userInfo[Variant.CoalescedCodingTypeKey] = true"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "",
                  "type" : "text"
                },
                {
                  "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/Variant\/init(from:)",
                  "isActive" : true,
                  "type" : "reference"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "See Also",
          "style" : "note",
          "type" : "aside"
        }
      ],
      "kind" : "content"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/poieticcore\/variant\/encode(to:)"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://PoieticCore/documentation/PoieticCore": {
  "abstract" : [
    {
      "text" : "Core library for creating applications for systems thinking and simulation.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "PoieticCore",
  "type" : "topic",
  "url" : "\/documentation\/poieticcore"
},
"doc://PoieticCore/documentation/PoieticCore/ValueType/typeCode": {
  "abstract" : [
    {
      "text" : "Code used for encoding of a variant value of the type.",
      "type" : "text"
    }
  ],
  "deprecated" : true,
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "typeCode"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    }
  ],
  "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/ValueType\/typeCode",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "typeCode",
  "type" : "topic",
  "url" : "\/documentation\/poieticcore\/valuetype\/typecode"
},
"doc://PoieticCore/documentation/PoieticCore/Variant": {
  "abstract" : [
    {
      "text" : "Variant holds a value of different core data types.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Variant"
    }
  ],
  "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/Variant",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Variant"
    }
  ],
  "role" : "symbol",
  "title" : "Variant",
  "type" : "topic",
  "url" : "\/documentation\/poieticcore\/variant"
},
"doc://PoieticCore/documentation/PoieticCore/Variant/CodingType": {
  "abstract" : [
    {
      "text" : "Specifier of the variant encoding method.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "CodingType"
    }
  ],
  "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/Variant\/CodingType",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "CodingType"
    }
  ],
  "role" : "symbol",
  "title" : "Variant.CodingType",
  "type" : "topic",
  "url" : "\/documentation\/poieticcore\/variant\/codingtype"
},
"doc://PoieticCore/documentation/PoieticCore/Variant/encode(to:)": {
  "abstract" : [
    {
      "text" : "Encode the Variant into the encoder.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "encode"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "to"
    },
    {
      "kind" : "text",
      "text" : ": any "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s7EncoderP",
      "text" : "Encoder"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    }
  ],
  "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/Variant\/encode(to:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "encode(to:)",
  "type" : "topic",
  "url" : "\/documentation\/poieticcore\/variant\/encode(to:)"
},
"doc://PoieticCore/documentation/PoieticCore/Variant/init(from:)": {
  "abstract" : [
    {
      "text" : "Read a variant from a decoder.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "from"
    },
    {
      "kind" : "text",
      "text" : ": any "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s7DecoderP",
      "text" : "Decoder"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    }
  ],
  "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/Variant\/init(from:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init(from:)",
  "type" : "topic",
  "url" : "\/documentation\/poieticcore\/variant\/init(from:)"
}
}
}