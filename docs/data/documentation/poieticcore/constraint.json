{
  "abstract" : [
    {
      "text" : "An object representing a constraint rule for checking whether a design",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "is valid within a given problem domain.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/PoieticCore\/documentation\/PoieticCore"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/Constraint"
  },
  "kind" : "symbol",
  "metadata" : {
    "externalID" : "s:11PoieticCore10ConstraintC",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "class"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "Constraint"
      }
    ],
    "modules" : [
      {
        "name" : "PoieticCore"
      }
    ],
    "navigatorTitle" : [
      {
        "kind" : "identifier",
        "text" : "Constraint"
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Class",
    "symbolKind" : "class",
    "title" : "Constraint"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "macOS"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "final"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "keyword",
              "text" : "class"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "Constraint"
            }
          ]
        }
      ],
      "kind" : "declarations"
    },
    {
      "content" : [
        {
          "anchor" : "overview",
          "level" : 2,
          "text" : "Overview",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "Constraints have a ",
              "type" : "text"
            },
            {
              "inlineContent" : [
                {
                  "text" : "match",
                  "type" : "text"
                }
              ],
              "type" : "emphasis"
            },
            {
              "text" : " predicate and a ",
              "type" : "text"
            },
            {
              "inlineContent" : [
                {
                  "text" : "requirement",
                  "type" : "text"
                }
              ],
              "type" : "emphasis"
            },
            {
              "text" : ". The match",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "predicate selects objects that will be checked together",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "against the constraint requirement.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "anchor" : "Examples",
          "level" : 2,
          "text" : "Examples",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "Constraint “Flow must drain (from) a stock, no other kind of node”:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "let constraint = Constraint(",
            "    name: \"flow_fill_is_stock\",",
            "    match: EdgePredicate(IsTypePredicate(ObjectType.Fills)),",
            "    requirement: AllSatisfy(",
            "        EdgePredicate(",
            "            origin: IsTypePredicate(ObjectType.Flow),",
            "            target: IsTypePredicate(ObjectType.Stock)",
            "        )",
            "    )",
            ")"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        },
        {
          "inlineContent" : [
            {
              "text" : "Constraint “Graphical function must not have more than one incoming parameters”:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "let constraint = Constraint(",
            "    name: \"one_parameter_for_graphical_function\",",
            "    match: IsTypePredicate(ObjectType.GraphicalFunction),",
            "    requirement: UniqueNeighbourRequirement(",
            "        IsTypePredicate(ObjectType.Parameter),",
            "        direction: .incoming,",
            "        required: false",
            "    )",
            ")"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        }
      ],
      "kind" : "content"
    }
  ],
  "relationshipsSections" : [
    {
      "identifiers" : [
        "doc:\/\/PoieticCore\/s8SendableP"
      ],
      "kind" : "relationships",
      "title" : "Conforms To",
      "type" : "conformsTo"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "seeAlsoSections" : [
    {
      "anchor" : "Constraints",
      "generated" : true,
      "identifiers" : [
        "doc:\/\/PoieticCore\/documentation\/PoieticCore\/ConstraintChecker",
        "doc:\/\/PoieticCore\/documentation\/PoieticCore\/DesignIssue",
        "doc:\/\/PoieticCore\/documentation\/PoieticCore\/DesignIssueCollection",
        "doc:\/\/PoieticCore\/documentation\/PoieticCore\/DesignIssueConvertible",
        "doc:\/\/PoieticCore\/documentation\/PoieticCore\/ObjectTypeError",
        "doc:\/\/PoieticCore\/documentation\/PoieticCore\/RejectAll",
        "doc:\/\/PoieticCore\/documentation\/PoieticCore\/AcceptAll",
        "doc:\/\/PoieticCore\/documentation\/PoieticCore\/ConstraintViolation",
        "doc:\/\/PoieticCore\/documentation\/PoieticCore\/UniqueProperty",
        "doc:\/\/PoieticCore\/documentation\/PoieticCore\/ConstraintRequirement"
      ],
      "title" : "Constraints"
    }
  ],
  "topicSections" : [
    {
      "anchor" : "Initializers",
      "generated" : true,
      "identifiers" : [
        "doc:\/\/PoieticCore\/documentation\/PoieticCore\/Constraint\/init(name:abstract:match:requirement:)"
      ],
      "title" : "Initializers"
    },
    {
      "anchor" : "Instance-Properties",
      "generated" : true,
      "identifiers" : [
        "doc:\/\/PoieticCore\/documentation\/PoieticCore\/Constraint\/abstract",
        "doc:\/\/PoieticCore\/documentation\/PoieticCore\/Constraint\/match",
        "doc:\/\/PoieticCore\/documentation\/PoieticCore\/Constraint\/name",
        "doc:\/\/PoieticCore\/documentation\/PoieticCore\/Constraint\/requirement"
      ],
      "title" : "Instance Properties"
    },
    {
      "anchor" : "Instance-Methods",
      "generated" : true,
      "identifiers" : [
        "doc:\/\/PoieticCore\/documentation\/PoieticCore\/Constraint\/check(_:)"
      ],
      "title" : "Instance Methods"
    }
  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/poieticcore\/constraint"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://PoieticCore/documentation/PoieticCore": {
  "abstract" : [
    {
      "text" : "Core library for creating applications for systems thinking and simulation.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "PoieticCore",
  "type" : "topic",
  "url" : "\/documentation\/poieticcore"
},
"doc://PoieticCore/documentation/PoieticCore/AcceptAll": {
  "abstract" : [
    {
      "text" : "A constraint requirement that is used to specify object (edges or nodes)",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "that are required. If the constraint requirement is used, then it",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "matches all objects defined by constraint predicate and accepts them all.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "AcceptAll"
    }
  ],
  "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/AcceptAll",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "AcceptAll"
    }
  ],
  "role" : "symbol",
  "title" : "AcceptAll",
  "type" : "topic",
  "url" : "\/documentation\/poieticcore\/acceptall"
},
"doc://PoieticCore/documentation/PoieticCore/Constraint": {
  "abstract" : [
    {
      "text" : "An object representing a constraint rule for checking whether a design",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "is valid within a given problem domain.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Constraint"
    }
  ],
  "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/Constraint",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Constraint"
    }
  ],
  "role" : "symbol",
  "title" : "Constraint",
  "type" : "topic",
  "url" : "\/documentation\/poieticcore\/constraint"
},
"doc://PoieticCore/documentation/PoieticCore/Constraint/abstract": {
  "abstract" : [
    {
      "text" : "Human-readable description of the constraint. The recommended content",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "can be:",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "let"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "abstract"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : "?"
    }
  ],
  "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/Constraint\/abstract",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "abstract",
  "type" : "topic",
  "url" : "\/documentation\/poieticcore\/constraint\/abstract"
},
"doc://PoieticCore/documentation/PoieticCore/Constraint/check(_:)": {
  "abstract" : [
    {
      "text" : "Check the frame for the constraint and return a list of nodes that",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "violate the constraint",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "check"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "keyword",
      "text" : "some"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:11PoieticCore5FrameP",
      "text" : "Frame"
    },
    {
      "kind" : "text",
      "text" : ") -> ["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:11PoieticCore8ObjectIDV",
      "text" : "ObjectID"
    },
    {
      "kind" : "text",
      "text" : "]"
    }
  ],
  "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/Constraint\/check(_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "check(_:)",
  "type" : "topic",
  "url" : "\/documentation\/poieticcore\/constraint\/check(_:)"
},
"doc://PoieticCore/documentation/PoieticCore/Constraint/init(name:abstract:match:requirement:)": {
  "abstract" : [
    {
      "text" : "Creates an edge constraint.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "name"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "abstract"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : "?, "
    },
    {
      "kind" : "externalParam",
      "text" : "match"
    },
    {
      "kind" : "text",
      "text" : ": any "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:11PoieticCore9PredicateP",
      "text" : "Predicate"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "requirement"
    },
    {
      "kind" : "text",
      "text" : ": any "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:11PoieticCore21ConstraintRequirementP",
      "text" : "ConstraintRequirement"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/Constraint\/init(name:abstract:match:requirement:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init(name:abstract:match:requirement:)",
  "type" : "topic",
  "url" : "\/documentation\/poieticcore\/constraint\/init(name:abstract:match:requirement:)"
},
"doc://PoieticCore/documentation/PoieticCore/Constraint/match": {
  "abstract" : [
    {
      "text" : "A predicate that matches all edges to be considered for this constraint.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "let"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "match"
    },
    {
      "kind" : "text",
      "text" : ": any "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:11PoieticCore9PredicateP",
      "text" : "Predicate"
    }
  ],
  "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/Constraint\/match",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "match",
  "type" : "topic",
  "url" : "\/documentation\/poieticcore\/constraint\/match"
},
"doc://PoieticCore/documentation/PoieticCore/Constraint/name": {
  "abstract" : [
    {
      "text" : "Identifier of the constraint.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "let"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "name"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    }
  ],
  "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/Constraint\/name",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "name",
  "type" : "topic",
  "url" : "\/documentation\/poieticcore\/constraint\/name"
},
"doc://PoieticCore/documentation/PoieticCore/Constraint/requirement": {
  "abstract" : [
    {
      "text" : "A requirement that needs to be satisfied for the matched objects.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "let"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "requirement"
    },
    {
      "kind" : "text",
      "text" : ": any "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:11PoieticCore21ConstraintRequirementP",
      "text" : "ConstraintRequirement"
    }
  ],
  "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/Constraint\/requirement",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "requirement",
  "type" : "topic",
  "url" : "\/documentation\/poieticcore\/constraint\/requirement"
},
"doc://PoieticCore/documentation/PoieticCore/ConstraintChecker": {
  "abstract" : [
    {
      "text" : "An object that checks constraints, including object types, of a frame.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ConstraintChecker"
    }
  ],
  "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/ConstraintChecker",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ConstraintChecker"
    }
  ],
  "role" : "symbol",
  "title" : "ConstraintChecker",
  "type" : "topic",
  "url" : "\/documentation\/poieticcore\/constraintchecker"
},
"doc://PoieticCore/documentation/PoieticCore/ConstraintRequirement": {
  "abstract" : [
    {
      "text" : "Definition of a constraint satisfaction requirement.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ConstraintRequirement"
    }
  ],
  "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/ConstraintRequirement",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ConstraintRequirement"
    }
  ],
  "role" : "symbol",
  "title" : "ConstraintRequirement",
  "type" : "topic",
  "url" : "\/documentation\/poieticcore\/constraintrequirement"
},
"doc://PoieticCore/documentation/PoieticCore/ConstraintViolation": {
  "abstract" : [
    {
      "text" : "Error thrown when a constraint violation was found.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ConstraintViolation"
    }
  ],
  "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/ConstraintViolation",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ConstraintViolation"
    }
  ],
  "role" : "symbol",
  "title" : "ConstraintViolation",
  "type" : "topic",
  "url" : "\/documentation\/poieticcore\/constraintviolation"
},
"doc://PoieticCore/documentation/PoieticCore/DesignIssue": {
  "abstract" : [
    {
      "text" : "Representation of an issue in the design caused by the user.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "DesignIssue"
    }
  ],
  "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/DesignIssue",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "DesignIssue"
    }
  ],
  "role" : "symbol",
  "title" : "DesignIssue",
  "type" : "topic",
  "url" : "\/documentation\/poieticcore\/designissue"
},
"doc://PoieticCore/documentation/PoieticCore/DesignIssueCollection": {
  "abstract" : [
    {
      "text" : "Collection of design issues.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "DesignIssueCollection"
    }
  ],
  "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/DesignIssueCollection",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "DesignIssueCollection"
    }
  ],
  "role" : "symbol",
  "title" : "DesignIssueCollection",
  "type" : "topic",
  "url" : "\/documentation\/poieticcore\/designissuecollection"
},
"doc://PoieticCore/documentation/PoieticCore/DesignIssueConvertible": {
  "abstract" : [
    {
      "text" : "Protocol for errors that can be converted to a design issue.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "DesignIssueConvertible"
    }
  ],
  "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/DesignIssueConvertible",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "DesignIssueConvertible"
    }
  ],
  "role" : "symbol",
  "title" : "DesignIssueConvertible",
  "type" : "topic",
  "url" : "\/documentation\/poieticcore\/designissueconvertible"
},
"doc://PoieticCore/documentation/PoieticCore/ObjectTypeError": {
  "abstract" : [
    {
      "text" : "Type error detail produced when checking object types against a metamodel.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ObjectTypeError"
    }
  ],
  "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/ObjectTypeError",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ObjectTypeError"
    }
  ],
  "role" : "symbol",
  "title" : "ObjectTypeError",
  "type" : "topic",
  "url" : "\/documentation\/poieticcore\/objecttypeerror"
},
"doc://PoieticCore/documentation/PoieticCore/RejectAll": {
  "abstract" : [
    {
      "text" : "A constraint requirement that is used to specify object (edges or nodes)",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "that are prohibited. If the constraint requirement is used, then it",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "matches all objects defined by constraint predicate and rejects them all.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "RejectAll"
    }
  ],
  "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/RejectAll",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "RejectAll"
    }
  ],
  "role" : "symbol",
  "title" : "RejectAll",
  "type" : "topic",
  "url" : "\/documentation\/poieticcore\/rejectall"
},
"doc://PoieticCore/documentation/PoieticCore/UniqueProperty": {
  "abstract" : [
    {
      "text" : "A constraint requirement that a specified property of the objects must",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "be unique within the checked group of checked objects.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "UniqueProperty"
    }
  ],
  "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/UniqueProperty",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "UniqueProperty"
    }
  ],
  "role" : "symbol",
  "title" : "UniqueProperty",
  "type" : "topic",
  "url" : "\/documentation\/poieticcore\/uniqueproperty"
},
"doc://PoieticCore/s8SendableP": {
  "identifier" : "doc:\/\/PoieticCore\/s8SendableP",
  "title" : "Swift.Sendable",
  "type" : "unresolvable"
}
}
}