{
  "abstract" : [
    {
      "text" : "Creates a constraint requirement for edges to assure that the origin,",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "target and\/or the edge itself are of a specific type.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/PoieticCore\/documentation\/PoieticCore",
        "doc:\/\/PoieticCore\/documentation\/PoieticCore\/MetamodelAndTypes",
        "doc:\/\/PoieticCore\/documentation\/PoieticCore\/EdgeEndpointRequirement"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/EdgeEndpointRequirement\/init(origin:target:edge:)"
  },
  "kind" : "symbol",
  "metadata" : {
    "externalID" : "s:11PoieticCore23EdgeEndpointRequirementC6origin6target4edgeAcA15IsTypePredicateVSg_A2Itcfc",
    "fragments" : [
      {
        "kind" : "identifier",
        "text" : "init"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "externalParam",
        "text" : "origin"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:11PoieticCore15IsTypePredicateV",
        "text" : "IsTypePredicate"
      },
      {
        "kind" : "text",
        "text" : "?, "
      },
      {
        "kind" : "externalParam",
        "text" : "target"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:11PoieticCore15IsTypePredicateV",
        "text" : "IsTypePredicate"
      },
      {
        "kind" : "text",
        "text" : "?, "
      },
      {
        "kind" : "externalParam",
        "text" : "edge"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:11PoieticCore15IsTypePredicateV",
        "text" : "IsTypePredicate"
      },
      {
        "kind" : "text",
        "text" : "?)"
      }
    ],
    "modules" : [
      {
        "name" : "PoieticCore"
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Initializer",
    "symbolKind" : "init",
    "title" : "init(origin:target:edge:)"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "macOS"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "init"
            },
            {
              "kind" : "text",
              "text" : "("
            },
            {
              "kind" : "externalParam",
              "text" : "origin"
            },
            {
              "kind" : "text",
              "text" : ": "
            },
            {
              "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/IsTypePredicate",
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:11PoieticCore15IsTypePredicateV",
              "text" : "IsTypePredicate"
            },
            {
              "kind" : "text",
              "text" : "? = nil, "
            },
            {
              "kind" : "externalParam",
              "text" : "target"
            },
            {
              "kind" : "text",
              "text" : ": "
            },
            {
              "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/IsTypePredicate",
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:11PoieticCore15IsTypePredicateV",
              "text" : "IsTypePredicate"
            },
            {
              "kind" : "text",
              "text" : "? = nil, "
            },
            {
              "kind" : "externalParam",
              "text" : "edge"
            },
            {
              "kind" : "text",
              "text" : ": "
            },
            {
              "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/IsTypePredicate",
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:11PoieticCore15IsTypePredicateV",
              "text" : "IsTypePredicate"
            },
            {
              "kind" : "text",
              "text" : "? = nil)"
            }
          ]
        }
      ],
      "kind" : "declarations"
    },
    {
      "kind" : "parameters",
      "parameters" : [
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "Predicate that matches types of edge’s origin.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "origin"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "Predicate that matches types of edge’s target.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "target"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "Predicate that matches the edge’s type.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "edge"
        }
      ]
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/poieticcore\/edgeendpointrequirement\/init(origin:target:edge:)"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://PoieticCore/documentation/PoieticCore": {
  "abstract" : [
    {
      "text" : "Core library for creating applications for systems thinking and simulation.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "PoieticCore",
  "type" : "topic",
  "url" : "\/documentation\/poieticcore"
},
"doc://PoieticCore/documentation/PoieticCore/EdgeEndpointRequirement": {
  "abstract" : [
    {
      "text" : "Requirement that the edge origin, edge target and the edge itself matches",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "given labels.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "EdgeEndpointRequirement"
    }
  ],
  "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/EdgeEndpointRequirement",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "EdgeEndpointRequirement"
    }
  ],
  "role" : "symbol",
  "title" : "EdgeEndpointRequirement",
  "type" : "topic",
  "url" : "\/documentation\/poieticcore\/edgeendpointrequirement"
},
"doc://PoieticCore/documentation/PoieticCore/EdgeEndpointRequirement/init(origin:target:edge:)": {
  "abstract" : [
    {
      "text" : "Creates a constraint requirement for edges to assure that the origin,",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "target and\/or the edge itself are of a specific type.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "origin"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:11PoieticCore15IsTypePredicateV",
      "text" : "IsTypePredicate"
    },
    {
      "kind" : "text",
      "text" : "?, "
    },
    {
      "kind" : "externalParam",
      "text" : "target"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:11PoieticCore15IsTypePredicateV",
      "text" : "IsTypePredicate"
    },
    {
      "kind" : "text",
      "text" : "?, "
    },
    {
      "kind" : "externalParam",
      "text" : "edge"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:11PoieticCore15IsTypePredicateV",
      "text" : "IsTypePredicate"
    },
    {
      "kind" : "text",
      "text" : "?)"
    }
  ],
  "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/EdgeEndpointRequirement\/init(origin:target:edge:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init(origin:target:edge:)",
  "type" : "topic",
  "url" : "\/documentation\/poieticcore\/edgeendpointrequirement\/init(origin:target:edge:)"
},
"doc://PoieticCore/documentation/PoieticCore/IsTypePredicate": {
  "abstract" : [
    {
      "text" : "Predicate to test whether an object is of one or multiple given types.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "IsTypePredicate"
    }
  ],
  "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/IsTypePredicate",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "IsTypePredicate"
    }
  ],
  "role" : "symbol",
  "title" : "IsTypePredicate",
  "type" : "topic",
  "url" : "\/documentation\/poieticcore\/istypepredicate"
},
"doc://PoieticCore/documentation/PoieticCore/MetamodelAndTypes": {
  "abstract" : [
    {
      "text" : "Metamodel defines types of the design objects and constraints that the design",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "must satisfy to be considered valid within a modelled problem domain.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/MetamodelAndTypes",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "Metamodel and Types",
  "type" : "topic",
  "url" : "\/documentation\/poieticcore\/metamodelandtypes"
}
}
}