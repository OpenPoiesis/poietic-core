{
  "abstract" : [
    {
      "text" : "A collection of key-value pairs that store data used for exchange with",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "external environment such as database.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/PoieticCore\/documentation\/PoieticCore",
        "doc:\/\/PoieticCore\/documentation\/PoieticCore\/ForeignInterfaces"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/ForeignRecord"
  },
  "kind" : "symbol",
  "metadata" : {
    "externalID" : "s:11PoieticCore13ForeignRecordV",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "struct"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "ForeignRecord"
      }
    ],
    "modules" : [
      {
        "name" : "PoieticCore"
      }
    ],
    "navigatorTitle" : [
      {
        "kind" : "identifier",
        "text" : "ForeignRecord"
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Structure",
    "symbolKind" : "struct",
    "title" : "ForeignRecord"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "macOS"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "struct"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "ForeignRecord"
            }
          ]
        }
      ],
      "kind" : "declarations"
    }
  ],
  "relationshipsSections" : [
    {
      "identifiers" : [
        "doc:\/\/PoieticCore\/s8CopyableP",
        "doc:\/\/PoieticCore\/Se",
        "doc:\/\/PoieticCore\/SE",
        "doc:\/\/PoieticCore\/SQ",
        "doc:\/\/PoieticCore\/ST"
      ],
      "kind" : "relationships",
      "title" : "Conforms To",
      "type" : "conformsTo"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "seeAlsoSections" : [
    {
      "anchor" : "Foreign-Value",
      "generated" : true,
      "identifiers" : [
        "doc:\/\/PoieticCore\/documentation\/PoieticCore\/AttributeKey",
        "doc:\/\/PoieticCore\/documentation\/PoieticCore\/KeyedAttributes",
        "doc:\/\/PoieticCore\/documentation\/PoieticCore\/ForeignRecordError",
        "doc:\/\/PoieticCore\/documentation\/PoieticCore\/VariantCodingError"
      ],
      "title" : "Foreign Value"
    }
  ],
  "topicSections" : [
    {
      "anchor" : "Initializers",
      "generated" : true,
      "identifiers" : [
        "doc:\/\/PoieticCore\/documentation\/PoieticCore\/ForeignRecord\/init()",
        "doc:\/\/PoieticCore\/documentation\/PoieticCore\/ForeignRecord\/init(_:)"
      ],
      "title" : "Initializers"
    },
    {
      "anchor" : "Instance-Properties",
      "generated" : true,
      "identifiers" : [
        "doc:\/\/PoieticCore\/documentation\/PoieticCore\/ForeignRecord\/allKeys",
        "doc:\/\/PoieticCore\/documentation\/PoieticCore\/ForeignRecord\/dictionary"
      ],
      "title" : "Instance Properties"
    },
    {
      "anchor" : "Instance-Methods",
      "generated" : true,
      "identifiers" : [
        "doc:\/\/PoieticCore\/documentation\/PoieticCore\/ForeignRecord\/IDValue(for:)",
        "doc:\/\/PoieticCore\/documentation\/PoieticCore\/ForeignRecord\/IDValueIfPresent(for:)",
        "doc:\/\/PoieticCore\/documentation\/PoieticCore\/ForeignRecord\/boolValue(for:)",
        "doc:\/\/PoieticCore\/documentation\/PoieticCore\/ForeignRecord\/boolValueIfPresent(for:)",
        "doc:\/\/PoieticCore\/documentation\/PoieticCore\/ForeignRecord\/contains(_:)",
        "doc:\/\/PoieticCore\/documentation\/PoieticCore\/ForeignRecord\/doubleValue(for:)",
        "doc:\/\/PoieticCore\/documentation\/PoieticCore\/ForeignRecord\/doubleValueIfPresent(for:)",
        "doc:\/\/PoieticCore\/documentation\/PoieticCore\/ForeignRecord\/intValue(for:)",
        "doc:\/\/PoieticCore\/documentation\/PoieticCore\/ForeignRecord\/intValueIfPresent(for:)",
        "doc:\/\/PoieticCore\/documentation\/PoieticCore\/ForeignRecord\/stringValue(for:)",
        "doc:\/\/PoieticCore\/documentation\/PoieticCore\/ForeignRecord\/stringValueIfPresent(for:)"
      ],
      "title" : "Instance Methods"
    },
    {
      "anchor" : "Subscripts",
      "generated" : true,
      "identifiers" : [
        "doc:\/\/PoieticCore\/documentation\/PoieticCore\/ForeignRecord\/subscript(_:)"
      ],
      "title" : "Subscripts"
    },
    {
      "anchor" : "Default-Implementations",
      "generated" : true,
      "identifiers" : [
        "doc:\/\/PoieticCore\/documentation\/PoieticCore\/ForeignRecord\/Decodable-Implementations",
        "doc:\/\/PoieticCore\/documentation\/PoieticCore\/ForeignRecord\/Encodable-Implementations",
        "doc:\/\/PoieticCore\/documentation\/PoieticCore\/ForeignRecord\/Equatable-Implementations",
        "doc:\/\/PoieticCore\/documentation\/PoieticCore\/ForeignRecord\/Sequence-Implementations"
      ],
      "title" : "Default Implementations"
    }
  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/poieticcore\/foreignrecord"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://PoieticCore/SE": {
  "identifier" : "doc:\/\/PoieticCore\/SE",
  "title" : "Swift.Encodable",
  "type" : "unresolvable"
},
"doc://PoieticCore/SQ": {
  "identifier" : "doc:\/\/PoieticCore\/SQ",
  "title" : "Swift.Equatable",
  "type" : "unresolvable"
},
"doc://PoieticCore/ST": {
  "identifier" : "doc:\/\/PoieticCore\/ST",
  "title" : "Swift.Sequence",
  "type" : "unresolvable"
},
"doc://PoieticCore/Se": {
  "identifier" : "doc:\/\/PoieticCore\/Se",
  "title" : "Swift.Decodable",
  "type" : "unresolvable"
},
"doc://PoieticCore/documentation/PoieticCore": {
  "abstract" : [
    {
      "text" : "Core library for creating applications for systems thinking and simulation.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "PoieticCore",
  "type" : "topic",
  "url" : "\/documentation\/poieticcore"
},
"doc://PoieticCore/documentation/PoieticCore/AttributeKey": {
  "abstract" : [
    {
      "text" : "Type for object attribute key.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "typealias"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "AttributeKey"
    }
  ],
  "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/AttributeKey",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "AttributeKey"
    }
  ],
  "role" : "symbol",
  "title" : "AttributeKey",
  "type" : "topic",
  "url" : "\/documentation\/poieticcore\/attributekey"
},
"doc://PoieticCore/documentation/PoieticCore/ForeignInterfaces": {
  "abstract" : [
    {
      "text" : "Structures and functionality for interfacing with other systems.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/ForeignInterfaces",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "Foreign Interfaces",
  "type" : "topic",
  "url" : "\/documentation\/poieticcore\/foreigninterfaces"
},
"doc://PoieticCore/documentation/PoieticCore/ForeignRecord": {
  "abstract" : [
    {
      "text" : "A collection of key-value pairs that store data used for exchange with",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "external environment such as database.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ForeignRecord"
    }
  ],
  "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/ForeignRecord",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ForeignRecord"
    }
  ],
  "role" : "symbol",
  "title" : "ForeignRecord",
  "type" : "topic",
  "url" : "\/documentation\/poieticcore\/foreignrecord"
},
"doc://PoieticCore/documentation/PoieticCore/ForeignRecord/Decodable-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/ForeignRecord\/Decodable-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "Decodable Implementations",
  "type" : "topic",
  "url" : "\/documentation\/poieticcore\/foreignrecord\/decodable-implementations"
},
"doc://PoieticCore/documentation/PoieticCore/ForeignRecord/Encodable-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/ForeignRecord\/Encodable-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "Encodable Implementations",
  "type" : "topic",
  "url" : "\/documentation\/poieticcore\/foreignrecord\/encodable-implementations"
},
"doc://PoieticCore/documentation/PoieticCore/ForeignRecord/Equatable-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/ForeignRecord\/Equatable-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "Equatable Implementations",
  "type" : "topic",
  "url" : "\/documentation\/poieticcore\/foreignrecord\/equatable-implementations"
},
"doc://PoieticCore/documentation/PoieticCore/ForeignRecord/IDValue(for:)": {
  "abstract" : [
    {
      "text" : "Try to get an object ID value from the foreign value.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "IDValue"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "for"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:11PoieticCore18ForeignRecordErrorO",
      "text" : "ForeignRecordError"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:11PoieticCore8ObjectIDV",
      "text" : "ObjectID"
    }
  ],
  "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/ForeignRecord\/IDValue(for:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "IDValue(for:)",
  "type" : "topic",
  "url" : "\/documentation\/poieticcore\/foreignrecord\/idvalue(for:)"
},
"doc://PoieticCore/documentation/PoieticCore/ForeignRecord/IDValueIfPresent(for:)": {
  "abstract" : [
    {
      "text" : "Try to get an object ID value from the foreign value, if the record",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "has the key. If not then ",
      "type" : "text"
    },
    {
      "code" : "nil",
      "type" : "codeVoice"
    },
    {
      "text" : " is returned.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "IDValueIfPresent"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "for"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:11PoieticCore18ForeignRecordErrorO",
      "text" : "ForeignRecordError"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:11PoieticCore8ObjectIDV",
      "text" : "ObjectID"
    },
    {
      "kind" : "text",
      "text" : "?"
    }
  ],
  "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/ForeignRecord\/IDValueIfPresent(for:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "IDValueIfPresent(for:)",
  "type" : "topic",
  "url" : "\/documentation\/poieticcore\/foreignrecord\/idvalueifpresent(for:)"
},
"doc://PoieticCore/documentation/PoieticCore/ForeignRecord/Sequence-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/ForeignRecord\/Sequence-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "Sequence Implementations",
  "type" : "topic",
  "url" : "\/documentation\/poieticcore\/foreignrecord\/sequence-implementations"
},
"doc://PoieticCore/documentation/PoieticCore/ForeignRecord/allKeys": {
  "abstract" : [
    {
      "text" : "Return list of all keys of the record.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "allKeys"
    },
    {
      "kind" : "text",
      "text" : ": ["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : "]"
    }
  ],
  "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/ForeignRecord\/allKeys",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "allKeys",
  "type" : "topic",
  "url" : "\/documentation\/poieticcore\/foreignrecord\/allkeys"
},
"doc://PoieticCore/documentation/PoieticCore/ForeignRecord/boolValue(for:)": {
  "abstract" : [
    {
      "text" : "Try to get a boolean value from the foreign value.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "boolValue"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "for"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:11PoieticCore18ForeignRecordErrorO",
      "text" : "ForeignRecordError"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    }
  ],
  "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/ForeignRecord\/boolValue(for:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "boolValue(for:)",
  "type" : "topic",
  "url" : "\/documentation\/poieticcore\/foreignrecord\/boolvalue(for:)"
},
"doc://PoieticCore/documentation/PoieticCore/ForeignRecord/boolValueIfPresent(for:)": {
  "abstract" : [
    {
      "text" : "Try to get a bool value from the foreign value, if the record",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "has the key. If not then ",
      "type" : "text"
    },
    {
      "code" : "nil",
      "type" : "codeVoice"
    },
    {
      "text" : " is returned.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "boolValueIfPresent"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "for"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:11PoieticCore18ForeignRecordErrorO",
      "text" : "ForeignRecordError"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    },
    {
      "kind" : "text",
      "text" : "?"
    }
  ],
  "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/ForeignRecord\/boolValueIfPresent(for:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "boolValueIfPresent(for:)",
  "type" : "topic",
  "url" : "\/documentation\/poieticcore\/foreignrecord\/boolvalueifpresent(for:)"
},
"doc://PoieticCore/documentation/PoieticCore/ForeignRecord/contains(_:)": {
  "abstract" : [
    {
      "text" : "Returns ",
      "type" : "text"
    },
    {
      "code" : "true",
      "type" : "codeVoice"
    },
    {
      "text" : " if the foreign record contains the given key.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "contains"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    }
  ],
  "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/ForeignRecord\/contains(_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "contains(_:)",
  "type" : "topic",
  "url" : "\/documentation\/poieticcore\/foreignrecord\/contains(_:)"
},
"doc://PoieticCore/documentation/PoieticCore/ForeignRecord/dictionary": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "dictionary"
    },
    {
      "kind" : "text",
      "text" : ": ["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : " : "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:11PoieticCore7VariantO",
      "text" : "Variant"
    },
    {
      "kind" : "text",
      "text" : "]"
    }
  ],
  "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/ForeignRecord\/dictionary",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "dictionary",
  "type" : "topic",
  "url" : "\/documentation\/poieticcore\/foreignrecord\/dictionary"
},
"doc://PoieticCore/documentation/PoieticCore/ForeignRecord/doubleValue(for:)": {
  "abstract" : [
    {
      "text" : "Try to get a double value from the foreign value.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "doubleValue"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "for"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:11PoieticCore18ForeignRecordErrorO",
      "text" : "ForeignRecordError"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sd",
      "text" : "Double"
    }
  ],
  "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/ForeignRecord\/doubleValue(for:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "doubleValue(for:)",
  "type" : "topic",
  "url" : "\/documentation\/poieticcore\/foreignrecord\/doublevalue(for:)"
},
"doc://PoieticCore/documentation/PoieticCore/ForeignRecord/doubleValueIfPresent(for:)": {
  "abstract" : [
    {
      "text" : "Try to get a double value from the foreign value, if the record",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "has the key. If not then ",
      "type" : "text"
    },
    {
      "code" : "nil",
      "type" : "codeVoice"
    },
    {
      "text" : " is returned.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "doubleValueIfPresent"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "for"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:11PoieticCore18ForeignRecordErrorO",
      "text" : "ForeignRecordError"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sd",
      "text" : "Double"
    },
    {
      "kind" : "text",
      "text" : "?"
    }
  ],
  "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/ForeignRecord\/doubleValueIfPresent(for:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "doubleValueIfPresent(for:)",
  "type" : "topic",
  "url" : "\/documentation\/poieticcore\/foreignrecord\/doublevalueifpresent(for:)"
},
"doc://PoieticCore/documentation/PoieticCore/ForeignRecord/init()": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "()"
    }
  ],
  "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/ForeignRecord\/init()",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init()",
  "type" : "topic",
  "url" : "\/documentation\/poieticcore\/foreignrecord\/init()"
},
"doc://PoieticCore/documentation/PoieticCore/ForeignRecord/init(_:)": {
  "abstract" : [
    {
      "text" : "Create a foreign record from a dictionary.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "(["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : " : "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:11PoieticCore7VariantO",
      "text" : "Variant"
    },
    {
      "kind" : "text",
      "text" : "])"
    }
  ],
  "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/ForeignRecord\/init(_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init(_:)",
  "type" : "topic",
  "url" : "\/documentation\/poieticcore\/foreignrecord\/init(_:)"
},
"doc://PoieticCore/documentation/PoieticCore/ForeignRecord/intValue(for:)": {
  "abstract" : [
    {
      "text" : "Try to get a integer value from the foreign value.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "intValue"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "for"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:11PoieticCore18ForeignRecordErrorO",
      "text" : "ForeignRecordError"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    }
  ],
  "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/ForeignRecord\/intValue(for:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "intValue(for:)",
  "type" : "topic",
  "url" : "\/documentation\/poieticcore\/foreignrecord\/intvalue(for:)"
},
"doc://PoieticCore/documentation/PoieticCore/ForeignRecord/intValueIfPresent(for:)": {
  "abstract" : [
    {
      "text" : "Try to get an integer value from the foreign value, if the record",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "has the key. If not then ",
      "type" : "text"
    },
    {
      "code" : "nil",
      "type" : "codeVoice"
    },
    {
      "text" : " is returned.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "intValueIfPresent"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "for"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:11PoieticCore18ForeignRecordErrorO",
      "text" : "ForeignRecordError"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    },
    {
      "kind" : "text",
      "text" : "?"
    }
  ],
  "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/ForeignRecord\/intValueIfPresent(for:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "intValueIfPresent(for:)",
  "type" : "topic",
  "url" : "\/documentation\/poieticcore\/foreignrecord\/intvalueifpresent(for:)"
},
"doc://PoieticCore/documentation/PoieticCore/ForeignRecord/stringValue(for:)": {
  "abstract" : [
    {
      "text" : "Try to get a string value from the foreign value.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "stringValue"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "for"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:11PoieticCore18ForeignRecordErrorO",
      "text" : "ForeignRecordError"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    }
  ],
  "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/ForeignRecord\/stringValue(for:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "stringValue(for:)",
  "type" : "topic",
  "url" : "\/documentation\/poieticcore\/foreignrecord\/stringvalue(for:)"
},
"doc://PoieticCore/documentation/PoieticCore/ForeignRecord/stringValueIfPresent(for:)": {
  "abstract" : [
    {
      "text" : "Try to get a string value from the foreign value, if the record",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "has the key. If not then ",
      "type" : "text"
    },
    {
      "code" : "nil",
      "type" : "codeVoice"
    },
    {
      "text" : " is returned.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "stringValueIfPresent"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "for"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:11PoieticCore18ForeignRecordErrorO",
      "text" : "ForeignRecordError"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : "?"
    }
  ],
  "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/ForeignRecord\/stringValueIfPresent(for:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "stringValueIfPresent(for:)",
  "type" : "topic",
  "url" : "\/documentation\/poieticcore\/foreignrecord\/stringvalueifpresent(for:)"
},
"doc://PoieticCore/documentation/PoieticCore/ForeignRecord/subscript(_:)": {
  "abstract" : [
    {
      "text" : "Get a value for a key, if is present in the record. Otherwise",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "returns ",
      "type" : "text"
    },
    {
      "code" : "nil",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "subscript"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:11PoieticCore7VariantO",
      "text" : "Variant"
    },
    {
      "kind" : "text",
      "text" : "?"
    }
  ],
  "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/ForeignRecord\/subscript(_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "subscript(_:)",
  "type" : "topic",
  "url" : "\/documentation\/poieticcore\/foreignrecord\/subscript(_:)"
},
"doc://PoieticCore/documentation/PoieticCore/ForeignRecordError": {
  "abstract" : [
    {
      "text" : "An error thrown when there is an issue with retrieving or converting",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "a foreign value.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ForeignRecordError"
    }
  ],
  "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/ForeignRecordError",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ForeignRecordError"
    }
  ],
  "role" : "symbol",
  "title" : "ForeignRecordError",
  "type" : "topic",
  "url" : "\/documentation\/poieticcore\/foreignrecorderror"
},
"doc://PoieticCore/documentation/PoieticCore/KeyedAttributes": {
  "abstract" : [
    {
      "text" : "A protocol for objects that provide their attributes by keys.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "KeyedAttributes"
    }
  ],
  "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/KeyedAttributes",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "KeyedAttributes"
    }
  ],
  "role" : "symbol",
  "title" : "KeyedAttributes",
  "type" : "topic",
  "url" : "\/documentation\/poieticcore\/keyedattributes"
},
"doc://PoieticCore/documentation/PoieticCore/VariantCodingError": {
  "abstract" : [
    {
      "text" : "Error thrown when trying to decode a variant",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "VariantCodingError"
    }
  ],
  "identifier" : "doc:\/\/PoieticCore\/documentation\/PoieticCore\/VariantCodingError",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "VariantCodingError"
    }
  ],
  "role" : "symbol",
  "title" : "VariantCodingError",
  "type" : "topic",
  "url" : "\/documentation\/poieticcore\/variantcodingerror"
},
"doc://PoieticCore/s8CopyableP": {
  "identifier" : "doc:\/\/PoieticCore\/s8CopyableP",
  "title" : "Swift.Copyable",
  "type" : "unresolvable"
}
}
}