{
  "includedArchiveIdentifiers" : [
    "PoieticCore"
  ],
  "interfaceLanguages" : {
    "swift" : [
      {
        "children" : [
          {
            "title" : "Essentials",
            "type" : "groupMarker"
          },
          {
            "children" : [
              {
                "title" : "Object",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objectsnapshot\/children",
                    "title" : "var children: ChildrenSet",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objectsnapshot\/components",
                    "title" : "var components: ComponentSet",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objectsnapshot\/id",
                    "title" : "var id: ObjectID",
                    "type" : "property"
                  },
                  {
                    "children" : [
                      {
                        "children" : [
                          {
                            "path" : "\/documentation\/poieticcore\/objectsnapshot\/name-3pft8",
                            "title" : "var name: String?",
                            "type" : "property"
                          }
                        ],
                        "title" : "ObjectSnapshot Implementations",
                        "type" : "groupMarker"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/objectsnapshot\/name",
                    "title" : "var name: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objectsnapshot\/parent",
                    "title" : "var parent: ObjectID?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objectsnapshot\/position",
                    "title" : "var position: Point?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objectsnapshot\/snapshotid",
                    "title" : "var snapshotID: SnapshotID",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objectsnapshot\/structure",
                    "title" : "var structure: Structure",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objectsnapshot\/type",
                    "title" : "var type: ObjectType",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objectsnapshot\/check(conformsto:)",
                    "title" : "func check(conformsTo: Trait) throws(ObjectTypeErrorCollection)",
                    "type" : "method"
                  },
                  {
                    "title" : "Subscripts",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objectsnapshot\/subscript(_:)-59fi3",
                    "title" : "subscript(String) -> Variant?",
                    "type" : "subscript"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objectsnapshot\/subscript(_:)-7h4bw",
                    "title" : "subscript<T>(T.Type) -> T?",
                    "type" : "subscript"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/objectsnapshot",
                "title" : "ObjectSnapshot",
                "type" : "protocol"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/designobject\/init(id:snapshotid:type:structure:parent:children:attributes:components:)",
                    "title" : "init(id: ObjectID, snapshotID: SnapshotID, type: ObjectType, structure: Structure, parent: ObjectID?, children: [ObjectID], attributes: [String : Variant], components: [any Component])",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/designobject\/attributekeys",
                    "title" : "var attributeKeys: [AttributeKey]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/designobject\/attributes",
                    "title" : "var attributes: [String : Variant]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/designobject\/children",
                    "title" : "var children: ChildrenSet",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/designobject\/components",
                    "title" : "var components: ComponentSet",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/designobject\/description",
                    "title" : "var description: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/designobject\/id",
                    "title" : "var id: ObjectID",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/designobject\/parent",
                    "title" : "var parent: ObjectID?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/designobject\/prettydescription",
                    "title" : "var prettyDescription: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/designobject\/snapshotid",
                    "title" : "var snapshotID: ObjectID",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/designobject\/structure",
                    "title" : "var structure: Structure",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/designobject\/type",
                    "title" : "var type: ObjectType",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/designobject\/attribute(forkey:)",
                    "title" : "func attribute(forKey: String) -> Variant?",
                    "type" : "method"
                  },
                  {
                    "title" : "Subscripts",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/designobject\/subscript(_:)-5r1lr",
                    "title" : "subscript<T>(T.Type) -> T?",
                    "type" : "subscript"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/designobject\/subscript(_:)-91oje",
                    "title" : "subscript(String) -> Variant?",
                    "type" : "subscript"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/designobject\/name",
                        "title" : "var name: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/designobject\/position",
                        "title" : "var position: Point?",
                        "type" : "property"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/designobject\/check(conformsto:)",
                        "title" : "func check(conformsTo: Trait) throws(ObjectTypeErrorCollection)",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/designobject\/objectsnapshot-implementations",
                    "title" : "ObjectSnapshot Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/designobject",
                "title" : "DesignObject",
                "type" : "class"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objectid\/==(_:_:)",
                    "title" : "static func == (ObjectID, ObjectID) -> Bool",
                    "type" : "op"
                  },
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objectid\/init(_:)-5we4e",
                    "title" : "init(UInt64)",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objectid\/init(_:)-7s2c7",
                    "title" : "init?(String)",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objectid\/init(from:)",
                    "title" : "init(from: any Decoder) throws",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objectid\/init(integerliteral:)",
                    "title" : "init(integerLiteral: ObjectID.IntegerLiteralType)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objectid\/description",
                    "title" : "var description: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objectid\/intvalue",
                    "title" : "var intValue: UInt64",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objectid\/stringvalue",
                    "title" : "var stringValue: String",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objectid\/encode(to:)",
                    "title" : "func encode(to: any Encoder) throws",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objectid\/hash(into:)",
                    "title" : "func hash(into: inout Hasher)",
                    "type" : "method"
                  },
                  {
                    "title" : "Type Aliases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objectid\/integerliteraltype",
                    "title" : "ObjectID.IntegerLiteralType",
                    "type" : "typealias"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/objectid\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/objectid\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/objectid",
                "title" : "ObjectID",
                "type" : "struct"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/structure\/edge(_:_:)",
                    "title" : "case edge(ObjectID, ObjectID)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/structure\/node",
                    "title" : "case node",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/structure\/orderedset(_:_:)",
                    "title" : "case orderedSet(ObjectID, OrderedSet<ObjectID>)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/structure\/unstructured",
                    "title" : "case unstructured",
                    "type" : "case"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/structure\/description",
                    "title" : "var description: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/structure\/type",
                    "title" : "var type: StructuralType",
                    "type" : "property"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/structure\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/structure\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/structure",
                "title" : "Structure",
                "type" : "enum"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/structuraltype\/edge",
                    "title" : "case edge",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/structuraltype\/node",
                    "title" : "case node",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/structuraltype\/orderedset",
                    "title" : "case orderedSet",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/structuraltype\/unstructured",
                    "title" : "case unstructured",
                    "type" : "case"
                  },
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/structuraltype\/init(rawvalue:)",
                    "title" : "init?(rawValue: String)",
                    "type" : "init"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/structuraltype\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/structuraltype\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/structuraltype\/init(from:)",
                        "title" : "init(from: any Decoder) throws",
                        "type" : "init"
                      },
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/structuraltype\/hashvalue",
                        "title" : "var hashValue: Int",
                        "type" : "property"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/structuraltype\/encode(to:)",
                        "title" : "func encode(to: any Encoder) throws",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/structuraltype\/hash(into:)",
                        "title" : "func hash(into: inout Hasher)",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/structuraltype\/rawrepresentable-implementations",
                    "title" : "RawRepresentable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/structuraltype",
                "title" : "StructuralType",
                "type" : "enum"
              },
              {
                "path" : "\/documentation\/poieticcore\/snapshotid",
                "title" : "SnapshotID",
                "type" : "typealias"
              },
              {
                "path" : "\/documentation\/poieticcore\/childrenset",
                "title" : "ChildrenSet",
                "type" : "typealias"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/selection\/init()",
                    "title" : "init()",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/selection\/init(_:)",
                    "title" : "init([ObjectID])",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/selection\/endindex",
                    "title" : "var endIndex: Selection.Index",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/selection\/ids",
                    "title" : "var ids: [ObjectID]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/selection\/isempty",
                    "title" : "var isEmpty: Bool",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/selection\/startindex",
                    "title" : "var startIndex: Selection.Index",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/selection\/append(_:)-63ue4",
                    "title" : "func append(ObjectID)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/selection\/append(_:)-9khdp",
                    "title" : "func append([ObjectID])",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/selection\/index(after:)",
                    "title" : "func index(after: Selection.Index) -> Selection.Index",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/selection\/removeall()",
                    "title" : "func removeAll()",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/selection\/replaceall(_:)",
                    "title" : "func replaceAll([ObjectID])",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/selection\/toggle(_:)",
                    "title" : "func toggle(ObjectID)",
                    "type" : "method"
                  },
                  {
                    "title" : "Subscripts",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/selection\/subscript(_:)",
                    "title" : "subscript(Selection.Index) -> ObjectID",
                    "type" : "subscript"
                  },
                  {
                    "title" : "Type Aliases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/selection\/index",
                    "title" : "Selection.Index",
                    "type" : "typealias"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/selection\/count",
                        "title" : "var count: Int",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/selection\/first",
                        "title" : "var first: Self.Element?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/selection\/indices",
                        "title" : "var indices: DefaultIndices<Self>",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/selection\/underestimatedcount",
                        "title" : "var underestimatedCount: Int",
                        "type" : "property"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/selection\/distance(from:to:)",
                        "title" : "func distance(from: Self.Index, to: Self.Index) -> Int",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/selection\/drop(while:)",
                        "title" : "func drop(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/selection\/dropfirst(_:)",
                        "title" : "func dropFirst(Int) -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/selection\/droplast(_:)",
                        "title" : "func dropLast(Int) -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/selection\/firstindex(of:)",
                        "title" : "func firstIndex(of: Self.Element) -> Self.Index?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/selection\/firstindex(where:)",
                        "title" : "func firstIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/selection\/firstrange(of:)",
                        "title" : "func firstRange<C>(of: C) -> Range<Self.Index>?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/selection\/formindex(_:offsetby:)",
                        "title" : "func formIndex(inout Self.Index, offsetBy: Int)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/selection\/formindex(_:offsetby:limitedby:)",
                        "title" : "func formIndex(inout Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/selection\/formindex(after:)",
                        "title" : "func formIndex(after: inout Self.Index)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/selection\/index(_:offsetby:)",
                        "title" : "func index(Self.Index, offsetBy: Int) -> Self.Index",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/selection\/index(_:offsetby:limitedby:)",
                        "title" : "func index(Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Self.Index?",
                        "type" : "method"
                      },
                      {
                        "deprecated" : true,
                        "path" : "\/documentation\/poieticcore\/selection\/index(of:)",
                        "title" : "func index(of: Self.Element) -> Self.Index?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/selection\/indices(of:)",
                        "title" : "func indices(of: Self.Element) -> RangeSet<Self.Index>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/selection\/indices(where:)",
                        "title" : "func indices(where: (Self.Element) throws -> Bool) rethrows -> RangeSet<Self.Index>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/selection\/makeiterator()",
                        "title" : "func makeIterator() -> IndexingIterator<Self>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/selection\/map(_:)-4dd7h",
                        "title" : "func map<T, E>((Self.Element) throws(E) -> T) throws(E) -> [T]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/selection\/prefix(_:)",
                        "title" : "func prefix(Int) -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/selection\/prefix(through:)",
                        "title" : "func prefix(through: Self.Index) -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/selection\/prefix(upto:)",
                        "title" : "func prefix(upTo: Self.Index) -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/selection\/prefix(while:)",
                        "title" : "func prefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/selection\/randomelement()",
                        "title" : "func randomElement() -> Self.Element?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/selection\/randomelement(using:)",
                        "title" : "func randomElement<T>(using: inout T) -> Self.Element?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/selection\/ranges(of:)",
                        "title" : "func ranges<C>(of: C) -> [Range<Self.Index>]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/selection\/removingsubranges(_:)",
                        "title" : "func removingSubranges(RangeSet<Self.Index>) -> DiscontiguousSlice<Self>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/selection\/split(maxsplits:omittingemptysubsequences:whereseparator:)",
                        "title" : "func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [Self.SubSequence]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/selection\/split(separator:maxsplits:omittingemptysubsequences:)",
                        "title" : "func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [Self.SubSequence]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/selection\/suffix(_:)",
                        "title" : "func suffix(Int) -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/selection\/suffix(from:)",
                        "title" : "func suffix(from: Self.Index) -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/selection\/trimmingprefix(_:)",
                        "title" : "func trimmingPrefix<Prefix>(Prefix) -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/selection\/trimmingprefix(while:)",
                        "title" : "func trimmingPrefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/selection\/collection-implementations",
                    "title" : "Collection Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/selection\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/selection\/==(_:_:)",
                        "title" : "static func == (Selection, Selection) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/selection\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/selection\/lazy",
                        "title" : "var lazy: LazySequence<Self>",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/selection\/publisher",
                        "title" : "var publisher: Publishers.Sequence<Self, Never>",
                        "type" : "property"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/selection\/allsatisfy(_:)",
                        "title" : "func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/selection\/compactmap(_:)",
                        "title" : "func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/selection\/compare(_:_:)",
                        "title" : "func compare<Comparator>(Comparator.Compared, Comparator.Compared) -> ComparisonResult",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/selection\/contains(_:)",
                        "title" : "func contains(Self.Element) -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/selection\/contains(where:)",
                        "title" : "func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/selection\/count(where:)",
                        "title" : "func count<E>(where: (Self.Element) throws(E) -> Bool) throws(E) -> Int",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/selection\/elementsequal(_:)",
                        "title" : "func elementsEqual<OtherSequence>(OtherSequence) -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/selection\/elementsequal(_:by:)",
                        "title" : "func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/selection\/enumerated()",
                        "title" : "func enumerated() -> EnumeratedSequence<Self>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/selection\/filter(_:)",
                        "title" : "func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/selection\/first(where:)",
                        "title" : "func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/selection\/flatmap(_:)-268yo",
                        "title" : "func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]",
                        "type" : "method"
                      },
                      {
                        "deprecated" : true,
                        "path" : "\/documentation\/poieticcore\/selection\/flatmap(_:)-5kqnr",
                        "title" : "func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/selection\/foreach(_:)",
                        "title" : "func forEach((Self.Element) throws -> Void) rethrows",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/selection\/formatted(_:)",
                        "title" : "func formatted<S>(S) -> S.FormatOutput",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/selection\/lexicographicallyprecedes(_:by:)",
                        "title" : "func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/selection\/map(_:)-30y2x",
                        "title" : "func map<T, E>((Self.Element) throws(E) -> T) throws(E) -> [T]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/selection\/max(by:)",
                        "title" : "func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/selection\/min(by:)",
                        "title" : "func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/selection\/reduce(_:_:)",
                        "title" : "func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/selection\/reduce(into:_:)",
                        "title" : "func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/selection\/reversed()",
                        "title" : "func reversed() -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/selection\/shuffled()",
                        "title" : "func shuffled() -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/selection\/shuffled(using:)",
                        "title" : "func shuffled<T>(using: inout T) -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/selection\/sorted(by:)",
                        "title" : "func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/selection\/sorted(using:)-2elgt",
                        "title" : "func sorted<S, Comparator>(using: S) -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/selection\/sorted(using:)-8rrto",
                        "title" : "func sorted<Comparator>(using: Comparator) -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/selection\/starts(with:)",
                        "title" : "func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/selection\/starts(with:by:)",
                        "title" : "func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/selection\/withcontiguousstorageifavailable(_:)",
                        "title" : "func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/selection\/sequence-implementations",
                    "title" : "Sequence Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/selection\/init(_:)-575k3",
                        "title" : "init<S>(S)",
                        "type" : "init"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/selection\/init(arrayliteral:)",
                        "title" : "init(arrayLiteral: Self.Element...)",
                        "type" : "init"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/selection\/formintersection(_:)",
                        "title" : "func formIntersection(Selection)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/selection\/formsymmetricdifference(_:)",
                        "title" : "func formSymmetricDifference(Selection)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/selection\/formunion(_:)",
                        "title" : "func formUnion(Selection)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/selection\/insert(_:)",
                        "title" : "func insert(ObjectID) -> (inserted: Bool, memberAfterInsert: ObjectID)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/selection\/intersection(_:)",
                        "title" : "func intersection(Selection) -> Self",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/selection\/isdisjoint(with:)",
                        "title" : "func isDisjoint(with: Self) -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/selection\/isstrictsubset(of:)",
                        "title" : "func isStrictSubset(of: Self) -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/selection\/isstrictsuperset(of:)",
                        "title" : "func isStrictSuperset(of: Self) -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/selection\/issubset(of:)",
                        "title" : "func isSubset(of: Self) -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/selection\/issuperset(of:)",
                        "title" : "func isSuperset(of: Self) -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/selection\/remove(_:)",
                        "title" : "func remove(ObjectID) -> ObjectID?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/selection\/subtract(_:)",
                        "title" : "func subtract(Self)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/selection\/subtracting(_:)",
                        "title" : "func subtracting(Self) -> Self",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/selection\/symmetricdifference(_:)",
                        "title" : "func symmetricDifference(Selection) -> Self",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/selection\/union(_:)",
                        "title" : "func union(Selection) -> Self",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/selection\/update(with:)",
                        "title" : "func update(with: ObjectID) -> ObjectID?",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/selection\/setalgebra-implementations",
                    "title" : "SetAlgebra Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/selection",
                "title" : "Selection",
                "type" : "class"
              },
              {
                "title" : "Design and Version Frames",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/frame\/design",
                    "title" : "var design: Design",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/frame\/id",
                    "title" : "var id: FrameID",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/frame\/snapshots",
                    "title" : "var snapshots: [DesignObject]",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "children" : [
                          {
                            "path" : "\/documentation\/poieticcore\/frame\/brokenreferences()-2p5lh",
                            "title" : "func brokenReferences() -> [ObjectID]",
                            "type" : "method"
                          }
                        ],
                        "title" : "Frame Implementations",
                        "type" : "groupMarker"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/frame\/brokenreferences()",
                    "title" : "func brokenReferences() -> [ObjectID]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/frame\/brokenreferences(snapshot:)",
                    "title" : "func brokenReferences(snapshot: DesignObject) -> [ObjectID]",
                    "type" : "method"
                  },
                  {
                    "children" : [
                      {
                        "children" : [
                          {
                            "path" : "\/documentation\/poieticcore\/frame\/contained(_:)-64aau",
                            "title" : "func contained([ObjectID]) -> [ObjectID]",
                            "type" : "method"
                          }
                        ],
                        "title" : "Frame Implementations",
                        "type" : "groupMarker"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/frame\/contained(_:)",
                    "title" : "func contained([ObjectID]) -> [ObjectID]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/frame\/contains(_:)",
                    "title" : "func contains(ObjectID) -> Bool",
                    "type" : "method"
                  },
                  {
                    "children" : [
                      {
                        "children" : [
                          {
                            "path" : "\/documentation\/poieticcore\/frame\/distinctattribute(_:ids:)-71vhu",
                            "title" : "func distinctAttribute(String, ids: [ObjectID]) -> Set<Variant>",
                            "type" : "method"
                          }
                        ],
                        "title" : "Frame Implementations",
                        "type" : "groupMarker"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/frame\/distinctattribute(_:ids:)",
                    "title" : "func distinctAttribute(String, ids: [ObjectID]) -> Set<Variant>",
                    "type" : "method"
                  },
                  {
                    "children" : [
                      {
                        "children" : [
                          {
                            "path" : "\/documentation\/poieticcore\/frame\/distincttypes(_:)-9dh95",
                            "title" : "func distinctTypes([ObjectID]) -> [ObjectType]",
                            "type" : "method"
                          }
                        ],
                        "title" : "Frame Implementations",
                        "type" : "groupMarker"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/frame\/distincttypes(_:)",
                    "title" : "func distinctTypes([ObjectID]) -> [ObjectType]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/frame\/filter(_:)-2e0ak",
                    "title" : "func filter((DesignObject) -> Bool) -> [DesignObject]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/frame\/filter(_:)-3joen",
                    "title" : "func filter(any Predicate) -> [DesignObject]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/frame\/filter(trait:)",
                    "title" : "func filter(trait: Trait) -> [DesignObject]",
                    "type" : "method"
                  },
                  {
                    "children" : [
                      {
                        "children" : [
                          {
                            "path" : "\/documentation\/poieticcore\/frame\/filter(type:)-7kgck",
                            "title" : "func filter(type: ObjectType) -> [DesignObject]",
                            "type" : "method"
                          }
                        ],
                        "title" : "Frame Implementations",
                        "type" : "groupMarker"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/frame\/filter(type:)",
                    "title" : "func filter(type: ObjectType) -> [DesignObject]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/frame\/filteredges(_:)",
                    "title" : "func filterEdges((Self.Edge) -> Bool) -> [Self.Edge]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/frame\/first(trait:)",
                    "title" : "func first(trait: Trait) -> DesignObject?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/frame\/first(type:)",
                    "title" : "func first(type: ObjectType) -> DesignObject?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/frame\/first(where:)",
                    "title" : "func first(where: (DesignObject) -> Bool) -> DesignObject?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/frame\/missing(_:)",
                    "title" : "func missing([ObjectID]) -> [ObjectID]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/frame\/object(_:)",
                    "title" : "func object(ObjectID) -> DesignObject",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/frame\/object(named:)",
                    "title" : "func object(named: String) -> DesignObject?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/frame\/object(stringreference:)",
                    "title" : "func object(stringReference: String) -> DesignObject?",
                    "type" : "method"
                  },
                  {
                    "children" : [
                      {
                        "children" : [
                          {
                            "path" : "\/documentation\/poieticcore\/frame\/sharedtraits(_:)-5g1rh",
                            "title" : "func sharedTraits([ObjectID]) -> [Trait]",
                            "type" : "method"
                          }
                        ],
                        "title" : "Frame Implementations",
                        "type" : "groupMarker"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/frame\/sharedtraits(_:)",
                    "title" : "func sharedTraits([ObjectID]) -> [Trait]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/frame\/top()",
                    "title" : "func top() -> [DesignObject]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/frame\/validatestructure()",
                    "title" : "func validateStructure() throws(StructuralIntegrityError)",
                    "type" : "method"
                  },
                  {
                    "title" : "Subscripts",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "children" : [
                          {
                            "path" : "\/documentation\/poieticcore\/frame\/subscript(_:)-5rjx7",
                            "title" : "subscript(ObjectID) -> DesignObject",
                            "type" : "subscript"
                          }
                        ],
                        "title" : "Frame Implementations",
                        "type" : "groupMarker"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/frame\/subscript(_:)",
                    "title" : "subscript(ObjectID) -> DesignObject",
                    "type" : "subscript"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/frame",
                "title" : "Frame",
                "type" : "protocol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/designframe\/design",
                    "title" : "let design: Design",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/designframe\/edgeids",
                    "title" : "var edgeIDs: [ObjectID]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/designframe\/edges",
                    "title" : "var edges: [DesignFrame.Edge]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/designframe\/id",
                    "title" : "let id: FrameID",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/designframe\/nodeids",
                    "title" : "var nodeIDs: [ObjectID]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/designframe\/nodes",
                    "title" : "var nodes: [DesignObject]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/designframe\/snapshots",
                    "title" : "var snapshots: [DesignObject]",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/designframe\/contained(_:)",
                    "title" : "func contained([ObjectID]) -> [ObjectID]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/designframe\/contains(_:)-39h7b",
                    "title" : "func contains(DesignObject) -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/designframe\/contains(_:)-3okr5",
                    "title" : "func contains(ObjectID) -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/designframe\/contains(edge:)",
                    "title" : "func contains(edge: ObjectID) -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/designframe\/contains(node:)",
                    "title" : "func contains(node: DesignFrame.NodeID) -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/designframe\/edge(_:)",
                    "title" : "func edge(DesignFrame.EdgeID) -> DesignFrame.Edge",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/designframe\/incoming(_:)",
                    "title" : "func incoming(DesignFrame.NodeID) -> [DesignFrame.Edge]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/designframe\/node(_:)",
                    "title" : "func node(DesignFrame.NodeID) -> DesignFrame.Node",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/designframe\/object(_:)",
                    "title" : "func object(ObjectID) -> DesignObject",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/designframe\/outgoing(_:)",
                    "title" : "func outgoing(DesignFrame.NodeID) -> [DesignFrame.Edge]",
                    "type" : "method"
                  },
                  {
                    "title" : "Type Aliases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/designframe\/snapshot",
                    "title" : "DesignFrame.Snapshot",
                    "type" : "typealias"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/designframe\/brokenreferences()",
                        "title" : "func brokenReferences() -> [ObjectID]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/designframe\/brokenreferences(snapshot:)",
                        "title" : "func brokenReferences(snapshot: DesignObject) -> [ObjectID]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/designframe\/distinctattribute(_:ids:)",
                        "title" : "func distinctAttribute(String, ids: [ObjectID]) -> Set<Variant>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/designframe\/distincttypes(_:)",
                        "title" : "func distinctTypes([ObjectID]) -> [ObjectType]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/designframe\/filter(_:)-203dv",
                        "title" : "func filter((DesignObject) -> Bool) -> [DesignObject]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/designframe\/filter(_:)-46hcr",
                        "title" : "func filter(any Predicate) -> [DesignObject]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/designframe\/filter(trait:)",
                        "title" : "func filter(trait: Trait) -> [DesignObject]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/designframe\/filter(type:)",
                        "title" : "func filter(type: ObjectType) -> [DesignObject]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/designframe\/filteredges(_:)",
                        "title" : "func filterEdges((Self.Edge) -> Bool) -> [Self.Edge]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/designframe\/first(trait:)",
                        "title" : "func first(trait: Trait) -> DesignObject?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/designframe\/first(type:)",
                        "title" : "func first(type: ObjectType) -> DesignObject?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/designframe\/first(where:)",
                        "title" : "func first(where: (DesignObject) -> Bool) -> DesignObject?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/designframe\/missing(_:)",
                        "title" : "func missing([ObjectID]) -> [ObjectID]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/designframe\/object(named:)",
                        "title" : "func object(named: String) -> DesignObject?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/designframe\/object(stringreference:)",
                        "title" : "func object(stringReference: String) -> DesignObject?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/designframe\/sharedtraits(_:)",
                        "title" : "func sharedTraits([ObjectID]) -> [Trait]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/designframe\/top()",
                        "title" : "func top() -> [DesignObject]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/designframe\/validatestructure()",
                        "title" : "func validateStructure() throws(StructuralIntegrityError)",
                        "type" : "method"
                      },
                      {
                        "title" : "Subscripts",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/designframe\/subscript(_:)",
                        "title" : "subscript(ObjectID) -> DesignObject",
                        "type" : "subscript"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/designframe\/frame-implementations",
                    "title" : "Frame Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/designframe\/cycles()",
                        "title" : "func cycles() -> [Self.Edge]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/designframe\/topologicalsort()",
                        "title" : "func topologicalSort() -> [Self.NodeID]?",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/designframe\/graphprotocol-implementations",
                    "title" : "GraphProtocol Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/designframe",
                "title" : "DesignFrame",
                "type" : "class"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/validatedframe\/design",
                    "title" : "var design: Design",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/validatedframe\/edgeids",
                    "title" : "var edgeIDs: [ObjectID]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/validatedframe\/id",
                    "title" : "var id: FrameID",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/validatedframe\/metamodel",
                    "title" : "let metamodel: Metamodel",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/validatedframe\/snapshots",
                    "title" : "var snapshots: [DesignObject]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/validatedframe\/wrapped",
                    "title" : "let wrapped: DesignFrame",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/validatedframe\/contains(_:)",
                    "title" : "func contains(ObjectID) -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/validatedframe\/incoming(_:)",
                    "title" : "func incoming(ValidatedFrame.NodeID) -> [ValidatedFrame.Edge]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/validatedframe\/object(_:)",
                    "title" : "func object(ObjectID) -> DesignObject",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/validatedframe\/outgoing(_:)",
                    "title" : "func outgoing(ValidatedFrame.NodeID) -> [EdgeObject]",
                    "type" : "method"
                  },
                  {
                    "title" : "Type Aliases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/validatedframe\/snapshot",
                    "title" : "ValidatedFrame.Snapshot",
                    "type" : "typealias"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/validatedframe\/edges",
                        "title" : "var edges: [EdgeObject]",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/validatedframe\/nodeids",
                        "title" : "var nodeIDs: [ObjectID]",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/validatedframe\/nodes",
                        "title" : "var nodes: [DesignObject]",
                        "type" : "property"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/validatedframe\/brokenreferences()",
                        "title" : "func brokenReferences() -> [ObjectID]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/validatedframe\/brokenreferences(snapshot:)",
                        "title" : "func brokenReferences(snapshot: DesignObject) -> [ObjectID]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/validatedframe\/contained(_:)",
                        "title" : "func contained([ObjectID]) -> [ObjectID]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/validatedframe\/contains(edge:)",
                        "title" : "func contains(edge: ObjectID) -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/validatedframe\/contains(node:)",
                        "title" : "func contains(node: ObjectID) -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/validatedframe\/distinctattribute(_:ids:)",
                        "title" : "func distinctAttribute(String, ids: [ObjectID]) -> Set<Variant>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/validatedframe\/distincttypes(_:)",
                        "title" : "func distinctTypes([ObjectID]) -> [ObjectType]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/validatedframe\/edge(_:)",
                        "title" : "func edge(ObjectID) -> Self.Edge",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/validatedframe\/filter(_:)-1hlfj",
                        "title" : "func filter((DesignObject) -> Bool) -> [DesignObject]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/validatedframe\/filter(_:)-3wuoq",
                        "title" : "func filter(any Predicate) -> [DesignObject]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/validatedframe\/filter(trait:)",
                        "title" : "func filter(trait: Trait) -> [DesignObject]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/validatedframe\/filter(type:)",
                        "title" : "func filter(type: ObjectType) -> [DesignObject]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/validatedframe\/filteredges(_:)",
                        "title" : "func filterEdges((Self.Edge) -> Bool) -> [Self.Edge]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/validatedframe\/first(trait:)",
                        "title" : "func first(trait: Trait) -> DesignObject?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/validatedframe\/first(type:)",
                        "title" : "func first(type: ObjectType) -> DesignObject?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/validatedframe\/first(where:)",
                        "title" : "func first(where: (DesignObject) -> Bool) -> DesignObject?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/validatedframe\/missing(_:)",
                        "title" : "func missing([ObjectID]) -> [ObjectID]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/validatedframe\/node(_:)",
                        "title" : "func node(ObjectID) -> Self.Node",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/validatedframe\/object(named:)",
                        "title" : "func object(named: String) -> DesignObject?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/validatedframe\/object(stringreference:)",
                        "title" : "func object(stringReference: String) -> DesignObject?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/validatedframe\/sharedtraits(_:)",
                        "title" : "func sharedTraits([ObjectID]) -> [Trait]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/validatedframe\/top()",
                        "title" : "func top() -> [DesignObject]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/validatedframe\/validatestructure()",
                        "title" : "func validateStructure() throws(StructuralIntegrityError)",
                        "type" : "method"
                      },
                      {
                        "title" : "Subscripts",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/validatedframe\/subscript(_:)",
                        "title" : "subscript(ObjectID) -> DesignObject",
                        "type" : "subscript"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/validatedframe\/frame-implementations",
                    "title" : "Frame Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/validatedframe\/cycles()",
                        "title" : "func cycles() -> [Self.Edge]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/validatedframe\/topologicalsort()",
                        "title" : "func topologicalSort() -> [Self.NodeID]?",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/validatedframe\/graphprotocol-implementations",
                    "title" : "GraphProtocol Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/validatedframe",
                "title" : "ValidatedFrame",
                "type" : "struct"
              },
              {
                "path" : "\/documentation\/poieticcore\/frameid",
                "title" : "FrameID",
                "type" : "typealias"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/framevalidationerror\/init(violations:objecterrors:edgeruleviolations:)",
                    "title" : "init(violations: [ConstraintViolation], objectErrors: [ObjectID : [ObjectTypeError]], edgeRuleViolations: [ObjectID : [EdgeRuleViolation]])",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/framevalidationerror\/edgeruleviolations",
                    "title" : "let edgeRuleViolations: [ObjectID : [EdgeRuleViolation]]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/framevalidationerror\/objecterrors",
                    "title" : "let objectErrors: [ObjectID : [ObjectTypeError]]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/framevalidationerror\/violations",
                    "title" : "let violations: [ConstraintViolation]",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/framevalidationerror\/asdesignissuecollection()",
                    "title" : "func asDesignIssueCollection() -> DesignIssueCollection",
                    "type" : "method"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/framevalidationerror\/localizeddescription",
                        "title" : "var localizedDescription: String",
                        "type" : "property"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/framevalidationerror\/error-implementations",
                    "title" : "Error Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/framevalidationerror",
                "title" : "FrameValidationError",
                "type" : "struct"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/structuralintegrityerror\/brokenchild",
                    "title" : "case brokenChild",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/structuralintegrityerror\/brokenparent",
                    "title" : "case brokenParent",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/structuralintegrityerror\/brokenstructurereference",
                    "title" : "case brokenStructureReference",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/structuralintegrityerror\/edgeendpointnotanode",
                    "title" : "case edgeEndpointNotANode",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/structuralintegrityerror\/parentchildcycle",
                    "title" : "case parentChildCycle",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/structuralintegrityerror\/parentchildmismatch",
                    "title" : "case parentChildMismatch",
                    "type" : "case"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/structuralintegrityerror\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/structuralintegrityerror\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/structuralintegrityerror\/localizeddescription",
                        "title" : "var localizedDescription: String",
                        "type" : "property"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/structuralintegrityerror\/error-implementations",
                    "title" : "Error Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/structuralintegrityerror",
                "title" : "StructuralIntegrityError",
                "type" : "enum"
              },
              {
                "children" : [
                  {
                    "title" : "Structures",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/snapshotstorage\/refcountcell\/refcount",
                        "title" : "var refCount: Int",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/snapshotstorage\/refcountcell\/snapshot",
                        "title" : "let snapshot: DesignObject",
                        "type" : "property"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/snapshotstorage\/refcountcell",
                    "title" : "SnapshotStorage.RefCountCell",
                    "type" : "struct"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/snapshotstorage\/snapshotreference\/index",
                        "title" : "let index: SnapshotStorage.RefcountedObjectArray.Index",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/snapshotstorage\/snapshotreference\/snapshot",
                        "title" : "let snapshot: DesignObject",
                        "type" : "property"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/snapshotstorage\/snapshotreference",
                    "title" : "SnapshotStorage.SnapshotReference",
                    "type" : "struct"
                  },
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/snapshotstorage\/init()",
                    "title" : "init()",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/snapshotstorage\/snapshots",
                    "title" : "var snapshots: some Collection<DesignObject>",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/snapshotstorage\/contains(_:)",
                    "title" : "func contains(ObjectID) -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/snapshotstorage\/insertorretain(_:)",
                    "title" : "func insertOrRetain(DesignObject)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/snapshotstorage\/referencecount(_:)",
                    "title" : "func referenceCount(ObjectID) -> Int?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/snapshotstorage\/release(_:)",
                    "title" : "func release(ObjectID)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/snapshotstorage\/snapshot(_:)",
                    "title" : "func snapshot(ObjectID) -> DesignObject?",
                    "type" : "method"
                  },
                  {
                    "title" : "Subscripts",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/snapshotstorage\/subscript(_:)-8mmnh",
                    "title" : "subscript(ObjectID) -> DesignObject?",
                    "type" : "subscript"
                  },
                  {
                    "title" : "Type Aliases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/snapshotstorage\/refcountedobjectarray",
                    "title" : "SnapshotStorage.RefcountedObjectArray",
                    "type" : "typealias"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/snapshotstorage\/count",
                        "title" : "var count: Int",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/snapshotstorage\/endindex",
                        "title" : "var endIndex: SnapshotStorage.Index",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/snapshotstorage\/first",
                        "title" : "var first: Self.Element?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/snapshotstorage\/indices",
                        "title" : "var indices: DefaultIndices<Self>",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/snapshotstorage\/isempty",
                        "title" : "var isEmpty: Bool",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/snapshotstorage\/startindex",
                        "title" : "var startIndex: SnapshotStorage.Index",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/snapshotstorage\/underestimatedcount",
                        "title" : "var underestimatedCount: Int",
                        "type" : "property"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/snapshotstorage\/distance(from:to:)",
                        "title" : "func distance(from: Self.Index, to: Self.Index) -> Int",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/snapshotstorage\/drop(while:)",
                        "title" : "func drop(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/snapshotstorage\/dropfirst(_:)",
                        "title" : "func dropFirst(Int) -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/snapshotstorage\/droplast(_:)",
                        "title" : "func dropLast(Int) -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/snapshotstorage\/firstindex(where:)",
                        "title" : "func firstIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/snapshotstorage\/formindex(_:offsetby:)",
                        "title" : "func formIndex(inout Self.Index, offsetBy: Int)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/snapshotstorage\/formindex(_:offsetby:limitedby:)",
                        "title" : "func formIndex(inout Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/snapshotstorage\/formindex(after:)",
                        "title" : "func formIndex(after: inout Self.Index)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/snapshotstorage\/index(_:offsetby:)",
                        "title" : "func index(Self.Index, offsetBy: Int) -> Self.Index",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/snapshotstorage\/index(_:offsetby:limitedby:)",
                        "title" : "func index(Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Self.Index?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/snapshotstorage\/index(after:)",
                        "title" : "func index(after: SnapshotStorage.Index) -> SnapshotStorage.Index",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/snapshotstorage\/indices(where:)",
                        "title" : "func indices(where: (Self.Element) throws -> Bool) rethrows -> RangeSet<Self.Index>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/snapshotstorage\/makeiterator()",
                        "title" : "func makeIterator() -> IndexingIterator<Self>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/snapshotstorage\/map(_:)-3l5h7",
                        "title" : "func map<T, E>((Self.Element) throws(E) -> T) throws(E) -> [T]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/snapshotstorage\/prefix(_:)",
                        "title" : "func prefix(Int) -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/snapshotstorage\/prefix(through:)",
                        "title" : "func prefix(through: Self.Index) -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/snapshotstorage\/prefix(upto:)",
                        "title" : "func prefix(upTo: Self.Index) -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/snapshotstorage\/prefix(while:)",
                        "title" : "func prefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/snapshotstorage\/randomelement()",
                        "title" : "func randomElement() -> Self.Element?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/snapshotstorage\/randomelement(using:)",
                        "title" : "func randomElement<T>(using: inout T) -> Self.Element?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/snapshotstorage\/removingsubranges(_:)",
                        "title" : "func removingSubranges(RangeSet<Self.Index>) -> DiscontiguousSlice<Self>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/snapshotstorage\/split(maxsplits:omittingemptysubsequences:whereseparator:)",
                        "title" : "func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [Self.SubSequence]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/snapshotstorage\/suffix(_:)",
                        "title" : "func suffix(Int) -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/snapshotstorage\/suffix(from:)",
                        "title" : "func suffix(from: Self.Index) -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/snapshotstorage\/trimmingprefix(while:)",
                        "title" : "func trimmingPrefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "title" : "Subscripts",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/snapshotstorage\/subscript(_:)-25t0s",
                        "title" : "subscript(RangeSet<Self.Index>) -> DiscontiguousSlice<Self>",
                        "type" : "subscript"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/snapshotstorage\/subscript(_:)-2e2sk",
                        "title" : "subscript((UnboundedRange_) -> ()) -> Self.SubSequence",
                        "type" : "subscript"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/snapshotstorage\/subscript(_:)-41sud",
                        "title" : "subscript<R>(R) -> Self.SubSequence",
                        "type" : "subscript"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/snapshotstorage\/subscript(_:)-5qtlx",
                        "title" : "subscript(SnapshotStorage.Index) -> DesignObject",
                        "type" : "subscript"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/snapshotstorage\/subscript(_:)-92nxk",
                        "title" : "subscript(Range<Self.Index>) -> Slice<Self>",
                        "type" : "subscript"
                      },
                      {
                        "title" : "Type Aliases",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/snapshotstorage\/index",
                        "title" : "SnapshotStorage.Index",
                        "type" : "typealias"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/snapshotstorage\/collection-implementations",
                    "title" : "Collection Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/snapshotstorage\/lazy",
                        "title" : "var lazy: LazySequence<Self>",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/snapshotstorage\/publisher",
                        "title" : "var publisher: Publishers.Sequence<Self, Never>",
                        "type" : "property"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/snapshotstorage\/allsatisfy(_:)",
                        "title" : "func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/snapshotstorage\/compactmap(_:)",
                        "title" : "func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/snapshotstorage\/compare(_:_:)",
                        "title" : "func compare<Comparator>(Comparator.Compared, Comparator.Compared) -> ComparisonResult",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/snapshotstorage\/contains(where:)",
                        "title" : "func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/snapshotstorage\/count(where:)",
                        "title" : "func count<E>(where: (Self.Element) throws(E) -> Bool) throws(E) -> Int",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/snapshotstorage\/elementsequal(_:by:)",
                        "title" : "func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/snapshotstorage\/enumerated()",
                        "title" : "func enumerated() -> EnumeratedSequence<Self>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/snapshotstorage\/filter(_:)",
                        "title" : "func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/snapshotstorage\/first(where:)",
                        "title" : "func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/snapshotstorage\/flatmap(_:)-2olgf",
                        "title" : "func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]",
                        "type" : "method"
                      },
                      {
                        "deprecated" : true,
                        "path" : "\/documentation\/poieticcore\/snapshotstorage\/flatmap(_:)-8o268",
                        "title" : "func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/snapshotstorage\/foreach(_:)",
                        "title" : "func forEach((Self.Element) throws -> Void) rethrows",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/snapshotstorage\/formatted(_:)",
                        "title" : "func formatted<S>(S) -> S.FormatOutput",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/snapshotstorage\/lexicographicallyprecedes(_:by:)",
                        "title" : "func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/snapshotstorage\/map(_:)-6wiqp",
                        "title" : "func map<T, E>((Self.Element) throws(E) -> T) throws(E) -> [T]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/snapshotstorage\/max(by:)",
                        "title" : "func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/snapshotstorage\/min(by:)",
                        "title" : "func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/snapshotstorage\/reduce(_:_:)",
                        "title" : "func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/snapshotstorage\/reduce(into:_:)",
                        "title" : "func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/snapshotstorage\/reversed()",
                        "title" : "func reversed() -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/snapshotstorage\/shuffled()",
                        "title" : "func shuffled() -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/snapshotstorage\/shuffled(using:)",
                        "title" : "func shuffled<T>(using: inout T) -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/snapshotstorage\/sorted(by:)",
                        "title" : "func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/snapshotstorage\/sorted(using:)-19abs",
                        "title" : "func sorted<Comparator>(using: Comparator) -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/snapshotstorage\/sorted(using:)-8zhlo",
                        "title" : "func sorted<S, Comparator>(using: S) -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/snapshotstorage\/starts(with:by:)",
                        "title" : "func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/snapshotstorage\/withcontiguousstorageifavailable(_:)",
                        "title" : "func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?",
                        "type" : "method"
                      },
                      {
                        "title" : "Type Aliases",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/snapshotstorage\/element",
                        "title" : "SnapshotStorage.Element",
                        "type" : "typealias"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/snapshotstorage\/sequence-implementations",
                    "title" : "Sequence Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/snapshotstorage",
                "title" : "SnapshotStorage",
                "type" : "class"
              },
              {
                "title" : "Changes and Versions",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/transientframe\/init(design:id:snapshots:)",
                    "title" : "init(design: Design, id: FrameID, snapshots: [DesignObject]?)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/transientframe\/design",
                    "title" : "let design: Design",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/transientframe\/edgeids",
                    "title" : "var edgeIDs: [ObjectID]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/transientframe\/haschanges",
                    "title" : "var hasChanges: Bool",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/transientframe\/id",
                    "title" : "let id: FrameID",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/transientframe\/mutableobjects",
                    "title" : "var mutableObjects: [MutableObject]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/transientframe\/nodeids",
                    "title" : "var nodeIDs: [ObjectID]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/transientframe\/removedobjects",
                    "title" : "var removedObjects: [ObjectID]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/transientframe\/snapshots",
                    "title" : "var snapshots: [DesignObject]",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/transientframe\/accept()",
                    "title" : "func accept()",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/transientframe\/addchild(_:to:)",
                    "title" : "func addChild(ObjectID, to: ObjectID)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/transientframe\/contains(_:)",
                    "title" : "func contains(ObjectID) -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/transientframe\/contains(snapshotid:)",
                    "title" : "func contains(snapshotID: ObjectID) -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/transientframe\/create(_:id:snapshotid:structure:parent:children:attributes:components:)",
                    "title" : "func create(ObjectType, id: ObjectID?, snapshotID: SnapshotID?, structure: Structure?, parent: ObjectID?, children: [ObjectID], attributes: [String : Variant], components: [any Component]) -> MutableObject",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/transientframe\/createedge(_:origin:target:attributes:)",
                    "title" : "func createEdge(ObjectType, origin: ObjectID, target: ObjectID, attributes: [String : Variant]) -> MutableObject",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/transientframe\/createnode(_:name:attributes:)",
                    "title" : "func createNode(ObjectType, name: String?, attributes: [String : Variant]) -> MutableObject",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/transientframe\/discard()",
                    "title" : "func discard()",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/transientframe\/insert(_:)",
                    "title" : "func insert(DesignObject)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/transientframe\/ismutable(_:)",
                    "title" : "func isMutable(ObjectID) -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/transientframe\/mutate(_:)",
                    "title" : "func mutate(ObjectID) -> MutableObject",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/transientframe\/object(_:)",
                    "title" : "func object(ObjectID) -> DesignObject",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/transientframe\/remove(edge:)",
                    "title" : "func remove(edge: ObjectID)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/transientframe\/remove(node:)",
                    "title" : "func remove(node: ObjectID)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/transientframe\/removecascading(_:)",
                    "title" : "func removeCascading(ObjectID) -> Set<ObjectID>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/transientframe\/removechild(_:from:)",
                    "title" : "func removeChild(ObjectID, from: ObjectID)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/transientframe\/removefromparent(_:)",
                    "title" : "func removeFromParent(ObjectID)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/transientframe\/setparent(_:to:)",
                    "title" : "func setParent(ObjectID, to: ObjectID?)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/transientframe\/unsafeinsert(_:)",
                    "title" : "func unsafeInsert(DesignObject)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/transientframe\/validatestructure(_:)",
                    "title" : "func validateStructure(DesignObject) throws(StructuralIntegrityError)",
                    "type" : "method"
                  },
                  {
                    "title" : "Subscripts",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/transientframe\/subscript(_:)",
                    "title" : "subscript(ObjectID) -> DesignObject",
                    "type" : "subscript"
                  },
                  {
                    "title" : "Enumerations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Enumeration Cases",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/transientframe\/state\/accepted",
                        "title" : "case accepted",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/transientframe\/state\/discarded",
                        "title" : "case discarded",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/transientframe\/state\/transient",
                        "title" : "case transient",
                        "type" : "case"
                      },
                      {
                        "title" : "Default Implementations",
                        "type" : "groupMarker"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Operators",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/poieticcore\/transientframe\/state\/!=(_:_:)",
                            "title" : "static func != (Self, Self) -> Bool",
                            "type" : "op"
                          }
                        ],
                        "path" : "\/documentation\/poieticcore\/transientframe\/state\/equatable-implementations",
                        "title" : "Equatable Implementations",
                        "type" : "symbol"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/transientframe\/state",
                    "title" : "TransientFrame.State",
                    "type" : "enum"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/transientframe\/edges",
                        "title" : "var edges: [EdgeObject]",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/transientframe\/nodes",
                        "title" : "var nodes: [DesignObject]",
                        "type" : "property"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/transientframe\/brokenreferences()",
                        "title" : "func brokenReferences() -> [ObjectID]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/transientframe\/brokenreferences(snapshot:)",
                        "title" : "func brokenReferences(snapshot: DesignObject) -> [ObjectID]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/transientframe\/contained(_:)",
                        "title" : "func contained([ObjectID]) -> [ObjectID]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/transientframe\/contains(edge:)",
                        "title" : "func contains(edge: ObjectID) -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/transientframe\/contains(node:)",
                        "title" : "func contains(node: ObjectID) -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/transientframe\/distinctattribute(_:ids:)",
                        "title" : "func distinctAttribute(String, ids: [ObjectID]) -> Set<Variant>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/transientframe\/distincttypes(_:)",
                        "title" : "func distinctTypes([ObjectID]) -> [ObjectType]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/transientframe\/edge(_:)",
                        "title" : "func edge(ObjectID) -> Self.Edge",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/transientframe\/filter(_:)-32n9i",
                        "title" : "func filter(any Predicate) -> [DesignObject]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/transientframe\/filter(_:)-46p0z",
                        "title" : "func filter((DesignObject) -> Bool) -> [DesignObject]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/transientframe\/filter(trait:)",
                        "title" : "func filter(trait: Trait) -> [DesignObject]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/transientframe\/filter(type:)",
                        "title" : "func filter(type: ObjectType) -> [DesignObject]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/transientframe\/filteredges(_:)",
                        "title" : "func filterEdges((Self.Edge) -> Bool) -> [Self.Edge]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/transientframe\/first(trait:)",
                        "title" : "func first(trait: Trait) -> DesignObject?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/transientframe\/first(type:)",
                        "title" : "func first(type: ObjectType) -> DesignObject?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/transientframe\/first(where:)",
                        "title" : "func first(where: (DesignObject) -> Bool) -> DesignObject?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/transientframe\/missing(_:)",
                        "title" : "func missing([ObjectID]) -> [ObjectID]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/transientframe\/node(_:)",
                        "title" : "func node(ObjectID) -> Self.Node",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/transientframe\/object(named:)",
                        "title" : "func object(named: String) -> DesignObject?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/transientframe\/object(stringreference:)",
                        "title" : "func object(stringReference: String) -> DesignObject?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/transientframe\/sharedtraits(_:)",
                        "title" : "func sharedTraits([ObjectID]) -> [Trait]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/transientframe\/top()",
                        "title" : "func top() -> [DesignObject]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/transientframe\/validatestructure()",
                        "title" : "func validateStructure() throws(StructuralIntegrityError)",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/transientframe\/frame-implementations",
                    "title" : "Frame Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/transientframe\/cycles()",
                        "title" : "func cycles() -> [Self.Edge]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/transientframe\/incoming(_:)",
                        "title" : "func incoming(Self.NodeID) -> [Self.Edge]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/transientframe\/outgoing(_:)",
                        "title" : "func outgoing(Self.NodeID) -> [Self.Edge]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/transientframe\/topologicalsort()",
                        "title" : "func topologicalSort() -> [Self.NodeID]?",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/transientframe\/graphprotocol-implementations",
                    "title" : "GraphProtocol Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/transientframe",
                "title" : "TransientFrame",
                "type" : "class"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/mutableobject\/init(id:snapshotid:type:structure:parent:children:attributes:components:)",
                    "title" : "init(id: ObjectID, snapshotID: SnapshotID, type: ObjectType, structure: Structure, parent: ObjectID?, children: [ObjectID], attributes: [String : Variant], components: [any Component])",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/mutableobject\/attributekeys",
                    "title" : "var attributeKeys: [AttributeKey]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/mutableobject\/attributes",
                    "title" : "var attributes: [String : Variant]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/mutableobject\/changedattributes",
                    "title" : "var changedAttributes: Set<String>",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/mutableobject\/children",
                    "title" : "var children: ChildrenSet",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/mutableobject\/components",
                    "title" : "var components: ComponentSet",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/mutableobject\/hierarchychanged",
                    "title" : "var hierarchyChanged: Bool",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/mutableobject\/id",
                    "title" : "var id: ObjectID",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/mutableobject\/original",
                    "title" : "var original: DesignObject?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/mutableobject\/parent",
                    "title" : "var parent: ObjectID?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/mutableobject\/position",
                    "title" : "var position: Point?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/mutableobject\/snapshotid",
                    "title" : "var snapshotID: ObjectID",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/mutableobject\/structure",
                    "title" : "var structure: Structure",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/mutableobject\/type",
                    "title" : "var type: ObjectType",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/mutableobject\/addchild(_:)",
                    "title" : "func addChild(ObjectID)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/mutableobject\/attribute(forkey:)",
                    "title" : "func attribute(forKey: String) -> Variant?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/mutableobject\/removeattribute(forkey:)",
                    "title" : "func removeAttribute(forKey: String)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/mutableobject\/removechild(_:)",
                    "title" : "func removeChild(ObjectID)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/mutableobject\/setattribute(value:forkey:)",
                    "title" : "func setAttribute(value: Variant, forKey: String)",
                    "type" : "method"
                  },
                  {
                    "title" : "Subscripts",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/mutableobject\/subscript(_:)-2wuh9",
                    "title" : "subscript(String) -> Variant?",
                    "type" : "subscript"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/mutableobject\/subscript(_:)-9hylj",
                    "title" : "subscript<T>(T.Type) -> T?",
                    "type" : "subscript"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/mutableobject\/name",
                        "title" : "var name: String?",
                        "type" : "property"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/mutableobject\/check(conformsto:)",
                        "title" : "func check(conformsTo: Trait) throws(ObjectTypeErrorCollection)",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/mutableobject\/objectsnapshot-implementations",
                    "title" : "ObjectSnapshot Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/mutableobject",
                "title" : "MutableObject",
                "type" : "class"
              },
              {
                "title" : "Value and Variant",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variant\/!=(_:_:)",
                    "title" : "static func != (Variant, Variant) -> Bool",
                    "type" : "op"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variant\/_(_:_:)-1pr71",
                    "title" : "static func > (Variant, Variant) -> Bool",
                    "type" : "op"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variant\/_(_:_:)-8q79x",
                    "title" : "static func < (Variant, Variant) -> Bool",
                    "type" : "op"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variant\/_=(_:_:)-1i27p",
                    "title" : "static func >= (Variant, Variant) -> Bool",
                    "type" : "op"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variant\/_=(_:_:)-81jau",
                    "title" : "static func <= (Variant, Variant) -> Bool",
                    "type" : "op"
                  },
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variant\/array(_:)",
                    "title" : "case array(VariantArray)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variant\/atom(_:)",
                    "title" : "case atom(VariantAtom)",
                    "type" : "case"
                  },
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variant\/init(_:)-14oy2",
                    "title" : "init([String])",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variant\/init(_:)-2qqms",
                    "title" : "init(String)",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variant\/init(_:)-35da5",
                    "title" : "init([Int])",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variant\/init(_:)-3mw6n",
                    "title" : "init(Point)",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variant\/init(_:)-3n1b0",
                    "title" : "init([Double])",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variant\/init(_:)-5fv6f",
                    "title" : "init(Double)",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variant\/init(_:)-6g1v5",
                    "title" : "init([Point])",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variant\/init(_:)-6h10l",
                    "title" : "init([Bool])",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variant\/init(_:)-9746l",
                    "title" : "init(Bool)",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variant\/init(_:)-nogc",
                    "title" : "init(Int)",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variant\/init(any:)",
                    "title" : "init?(any: Any)",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variant\/init(json:)",
                    "title" : "init(json: JSONValue) throws(ForeignValueError)",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variant\/init(type:json:)",
                    "title" : "init?(type: ValueType, json: JSONValue)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variant\/arrayitemtype",
                    "title" : "var arrayItemType: AtomType?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variant\/atomtype",
                    "title" : "var atomType: AtomType?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variant\/atomvalue",
                    "title" : "var atomValue: VariantAtom?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variant\/description",
                    "title" : "var description: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variant\/isarray",
                    "title" : "var isArray: Bool",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variant\/isfinitenumber",
                    "title" : "var isFiniteNumber: Bool",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variant\/isnumeric",
                    "title" : "var isNumeric: Bool",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variant\/iszero",
                    "title" : "var isZero: Bool",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variant\/items",
                    "title" : "var items: [VariantAtom]?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variant\/valuetype",
                    "title" : "var valueType: ValueType",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variant\/asjson()",
                    "title" : "func asJSON() -> JSONValue",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variant\/boolarray()",
                    "title" : "func boolArray() throws(ValueError) -> [Bool]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variant\/boolvalue()",
                    "title" : "func boolValue() throws(ValueError) -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variant\/doublearray()",
                    "title" : "func doubleArray() throws(ValueError) -> [Double]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variant\/doublevalue()",
                    "title" : "func doubleValue() throws(ValueError) -> Double",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variant\/intarray()",
                    "title" : "func intArray() throws(ValueError) -> [Int]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variant\/intvalue()",
                    "title" : "func intValue() throws(ValueError) -> Int",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variant\/isconvertible(to:)",
                    "title" : "func isConvertible(to: ValueType) -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variant\/isrepresentable(as:)",
                    "title" : "func isRepresentable(as: VariableType) -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variant\/isvaguelycomparable(to:)",
                    "title" : "func isVaguelyComparable(to: Variant) -> Bool?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variant\/makearray()",
                    "title" : "func makeArray() -> Variant",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variant\/pointarray()",
                    "title" : "func pointArray() throws(ValueError) -> [Point]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variant\/pointvalue()",
                    "title" : "func pointValue() throws(ValueError) -> Point",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variant\/stringarray()",
                    "title" : "func stringArray() throws(ValueError) -> [String]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variant\/stringvalue()",
                    "title" : "func stringValue() throws(ValueError) -> String",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variant\/vaguelyinascendingorder(after:)",
                    "title" : "func vaguelyInAscendingOrder(after: Variant) -> Bool?",
                    "type" : "method"
                  },
                  {
                    "title" : "Enumerations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Enumeration Cases",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/variant\/codingtype\/coalescing",
                        "title" : "case coalescing",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/variant\/codingtype\/dictionary",
                        "title" : "case dictionary",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/variant\/codingtype\/dictionarywithfallback",
                        "title" : "case dictionaryWithFallback",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/variant\/codingtype\/tuple",
                        "title" : "case tuple",
                        "type" : "case"
                      },
                      {
                        "title" : "Default Implementations",
                        "type" : "groupMarker"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Operators",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/poieticcore\/variant\/codingtype\/!=(_:_:)",
                            "title" : "static func != (Self, Self) -> Bool",
                            "type" : "op"
                          }
                        ],
                        "path" : "\/documentation\/poieticcore\/variant\/codingtype\/equatable-implementations",
                        "title" : "Equatable Implementations",
                        "type" : "symbol"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/variant\/codingtype",
                    "title" : "Variant.CodingType",
                    "type" : "enum"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/variant\/init(from:)",
                        "title" : "init(from: any Decoder) throws",
                        "type" : "init"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/variant\/decodable-implementations",
                    "title" : "Decodable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/variant\/encode(to:)",
                        "title" : "func encode(to: any Encoder) throws",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/variant\/encodable-implementations",
                    "title" : "Encodable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/variant\/!=(_:_:)-pqel",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/variant\/==(_:_:)",
                        "title" : "static func == (Variant, Variant) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/variant\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/variant\/init(booleanliteral:)",
                        "title" : "init(booleanLiteral: Bool)",
                        "type" : "init"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/variant\/expressiblebybooleanliteral-implementations",
                    "title" : "ExpressibleByBooleanLiteral Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/variant\/init(unicodescalarliteral:)",
                        "title" : "init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)",
                        "type" : "init"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/variant\/expressiblebyextendedgraphemeclusterliteral-implementations",
                    "title" : "ExpressibleByExtendedGraphemeClusterLiteral Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/variant\/init(floatliteral:)",
                        "title" : "init(floatLiteral: Double)",
                        "type" : "init"
                      },
                      {
                        "title" : "Type Aliases",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/variant\/floatliteraltype",
                        "title" : "Variant.FloatLiteralType",
                        "type" : "typealias"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/variant\/expressiblebyfloatliteral-implementations",
                    "title" : "ExpressibleByFloatLiteral Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/variant\/init(integerliteral:)",
                        "title" : "init(integerLiteral: Int)",
                        "type" : "init"
                      },
                      {
                        "title" : "Type Aliases",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/variant\/integerliteraltype",
                        "title" : "Variant.IntegerLiteralType",
                        "type" : "typealias"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/variant\/expressiblebyintegerliteral-implementations",
                    "title" : "ExpressibleByIntegerLiteral Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/variant\/init(extendedgraphemeclusterliteral:)",
                        "title" : "init(extendedGraphemeClusterLiteral: Self.StringLiteralType)",
                        "type" : "init"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/variant\/init(stringliteral:)",
                        "title" : "init(stringLiteral: String)",
                        "type" : "init"
                      },
                      {
                        "title" : "Type Aliases",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/variant\/stringliteraltype",
                        "title" : "Variant.StringLiteralType",
                        "type" : "typealias"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/variant\/expressiblebystringliteral-implementations",
                    "title" : "ExpressibleByStringLiteral Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/variant",
                "title" : "Variant",
                "type" : "enum"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variantatom\/!=(_:_:)",
                    "title" : "static func != (VariantAtom, VariantAtom) -> Bool",
                    "type" : "op"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variantatom\/_(_:_:)-2hs9",
                    "title" : "static func < (VariantAtom, VariantAtom) -> Bool",
                    "type" : "op"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variantatom\/_(_:_:)-83cj4",
                    "title" : "static func > (VariantAtom, VariantAtom) -> Bool",
                    "type" : "op"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variantatom\/_=(_:_:)-24llo",
                    "title" : "static func <= (VariantAtom, VariantAtom) -> Bool",
                    "type" : "op"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variantatom\/_=(_:_:)-9l0yf",
                    "title" : "static func >= (VariantAtom, VariantAtom) -> Bool",
                    "type" : "op"
                  },
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variantatom\/bool(_:)",
                    "title" : "case bool(Bool)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variantatom\/double(_:)",
                    "title" : "case double(Double)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variantatom\/int(_:)",
                    "title" : "case int(Int)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variantatom\/point(_:)",
                    "title" : "case point(Point)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variantatom\/string(_:)",
                    "title" : "case string(String)",
                    "type" : "case"
                  },
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variantatom\/init(_:)-36fth",
                    "title" : "init(Point)",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variantatom\/init(_:)-463ws",
                    "title" : "init(String)",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variantatom\/init(_:)-5eu5u",
                    "title" : "init(Bool)",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variantatom\/init(_:)-aul7",
                    "title" : "init(Int)",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variantatom\/init(_:)-xgxt",
                    "title" : "init(Double)",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variantatom\/init(any:)",
                    "title" : "init?(any: Any)",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variantatom\/init(json:)",
                    "title" : "init(json: JSONValue) throws(ForeignValueError)",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variantatom\/init(type:json:)",
                    "title" : "init?(type: AtomType, json: JSONValue)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variantatom\/description",
                    "title" : "var description: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variantatom\/isfinitenumber",
                    "title" : "var isFiniteNumber: Bool",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variantatom\/isnumeric",
                    "title" : "var isNumeric: Bool",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variantatom\/iszero",
                    "title" : "var isZero: Bool",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variantatom\/valuetype",
                    "title" : "var valueType: AtomType",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variantatom\/asjson()",
                    "title" : "func asJSON() -> JSONValue",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variantatom\/boolvalue()",
                    "title" : "func boolValue() throws(ValueError) -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variantatom\/doublevalue()",
                    "title" : "func doubleValue() throws(ValueError) -> Double",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variantatom\/intvalue()",
                    "title" : "func intValue() throws(ValueError) -> Int",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variantatom\/isconvertible(to:)",
                    "title" : "func isConvertible(to: ValueType) -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variantatom\/isvaguelycomparable(to:)",
                    "title" : "func isVaguelyComparable(to: VariantAtom) -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variantatom\/makearray()",
                    "title" : "func makeArray() -> Variant",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variantatom\/pointvalue()",
                    "title" : "func pointValue() throws(ValueError) -> Point",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variantatom\/stringvalue()",
                    "title" : "func stringValue() -> String",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variantatom\/vaguelyinascendingorder(after:)",
                    "title" : "func vaguelyInAscendingOrder(after: VariantAtom) -> Bool?",
                    "type" : "method"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/variantatom\/init(from:)",
                        "title" : "init(from: any Decoder) throws",
                        "type" : "init"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/variantatom\/decodable-implementations",
                    "title" : "Decodable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/variantatom\/!=(_:_:)-9afxr",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/variantatom\/==(_:_:)",
                        "title" : "static func == (VariantAtom, VariantAtom) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/variantatom\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/variantatom",
                "title" : "VariantAtom",
                "type" : "enum"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variantarray\/!=(_:_:)",
                    "title" : "static func != (VariantArray, VariantArray) -> Bool",
                    "type" : "op"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variantarray\/_(_:_:)-4bk3p",
                    "title" : "static func < (VariantArray, VariantArray) throws -> Bool",
                    "type" : "op"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variantarray\/_(_:_:)-65lpi",
                    "title" : "static func > (VariantArray, VariantArray) throws -> Bool",
                    "type" : "op"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variantarray\/_=(_:_:)-5hpwk",
                    "title" : "static func <= (VariantArray, VariantArray) throws -> Bool",
                    "type" : "op"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variantarray\/_=(_:_:)-8cozq",
                    "title" : "static func >= (VariantArray, VariantArray) throws -> Bool",
                    "type" : "op"
                  },
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variantarray\/bool(_:)",
                    "title" : "case bool([Bool])",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variantarray\/double(_:)",
                    "title" : "case double([Double])",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variantarray\/int(_:)",
                    "title" : "case int([Int])",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variantarray\/point(_:)",
                    "title" : "case point([Point])",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variantarray\/string(_:)",
                    "title" : "case string([String])",
                    "type" : "case"
                  },
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variantarray\/init(_:)-1lmbd",
                    "title" : "init([Int])",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variantarray\/init(_:)-3p0qu",
                    "title" : "init([Double])",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variantarray\/init(_:)-5yuvb",
                    "title" : "init([Bool])",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variantarray\/init(_:)-81h9n",
                    "title" : "init([Point])",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variantarray\/init(_:)-9klfb",
                    "title" : "init([String])",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variantarray\/init(any:)",
                    "title" : "init?(any: [Any])",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variantarray\/init(jsonitems:)",
                    "title" : "init(jsonItems: [JSONValue]) throws(ForeignValueError)",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variantarray\/init(type:)",
                    "title" : "init(type: AtomType)",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variantarray\/init(type:jsonitems:)",
                    "title" : "init?(type: AtomType, jsonItems: [JSONValue])",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variantarray\/count",
                    "title" : "var count: Int",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variantarray\/description",
                    "title" : "var description: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variantarray\/first",
                    "title" : "var first: Variant?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variantarray\/itemtype",
                    "title" : "var itemType: AtomType",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variantarray\/items",
                    "title" : "var items: [VariantAtom]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variantarray\/last",
                    "title" : "var last: Variant?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variantarray\/stringitems",
                    "title" : "var stringItems: [String]",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variantarray\/append(_:)",
                    "title" : "func append(VariantAtom) throws(ValueError)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variantarray\/asjson()",
                    "title" : "func asJSON() -> JSONValue",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variantarray\/isconvertible(to:)",
                    "title" : "func isConvertible(to: ValueType) -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variantarray\/pointvalue()",
                    "title" : "func pointValue() throws(ValueError) -> Point",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variantarray\/remove(at:)",
                    "title" : "func remove(at: Int) -> VariantAtom",
                    "type" : "method"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/variantarray\/endindex",
                        "title" : "var endIndex: VariantArray.Index",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/variantarray\/indices",
                        "title" : "var indices: DefaultIndices<Self>",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/variantarray\/isempty",
                        "title" : "var isEmpty: Bool",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/variantarray\/startindex",
                        "title" : "var startIndex: VariantArray.Index",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/variantarray\/underestimatedcount",
                        "title" : "var underestimatedCount: Int",
                        "type" : "property"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/variantarray\/distance(from:to:)",
                        "title" : "func distance(from: Self.Index, to: Self.Index) -> Int",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/variantarray\/drop(while:)",
                        "title" : "func drop(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/variantarray\/dropfirst(_:)",
                        "title" : "func dropFirst(Int) -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/variantarray\/droplast(_:)",
                        "title" : "func dropLast(Int) -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/variantarray\/firstindex(of:)",
                        "title" : "func firstIndex(of: Self.Element) -> Self.Index?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/variantarray\/firstindex(where:)",
                        "title" : "func firstIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/variantarray\/firstrange(of:)",
                        "title" : "func firstRange<C>(of: C) -> Range<Self.Index>?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/variantarray\/formindex(_:offsetby:)",
                        "title" : "func formIndex(inout Self.Index, offsetBy: Int)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/variantarray\/formindex(_:offsetby:limitedby:)",
                        "title" : "func formIndex(inout Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/variantarray\/formindex(after:)",
                        "title" : "func formIndex(after: inout Self.Index)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/variantarray\/index(_:offsetby:)",
                        "title" : "func index(Self.Index, offsetBy: Int) -> Self.Index",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/variantarray\/index(_:offsetby:limitedby:)",
                        "title" : "func index(Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Self.Index?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/variantarray\/index(after:)",
                        "title" : "func index(after: VariantArray.Index) -> VariantArray.Index",
                        "type" : "method"
                      },
                      {
                        "deprecated" : true,
                        "path" : "\/documentation\/poieticcore\/variantarray\/index(of:)",
                        "title" : "func index(of: Self.Element) -> Self.Index?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/variantarray\/indices(of:)",
                        "title" : "func indices(of: Self.Element) -> RangeSet<Self.Index>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/variantarray\/indices(where:)",
                        "title" : "func indices(where: (Self.Element) throws -> Bool) rethrows -> RangeSet<Self.Index>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/variantarray\/makeiterator()",
                        "title" : "func makeIterator() -> IndexingIterator<Self>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/variantarray\/map(_:)-15lnr",
                        "title" : "func map<T, E>((Self.Element) throws(E) -> T) throws(E) -> [T]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/variantarray\/prefix(_:)",
                        "title" : "func prefix(Int) -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/variantarray\/prefix(through:)",
                        "title" : "func prefix(through: Self.Index) -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/variantarray\/prefix(upto:)",
                        "title" : "func prefix(upTo: Self.Index) -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/variantarray\/prefix(while:)",
                        "title" : "func prefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/variantarray\/randomelement()",
                        "title" : "func randomElement() -> Self.Element?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/variantarray\/randomelement(using:)",
                        "title" : "func randomElement<T>(using: inout T) -> Self.Element?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/variantarray\/ranges(of:)",
                        "title" : "func ranges<C>(of: C) -> [Range<Self.Index>]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/variantarray\/removingsubranges(_:)",
                        "title" : "func removingSubranges(RangeSet<Self.Index>) -> DiscontiguousSlice<Self>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/variantarray\/split(maxsplits:omittingemptysubsequences:whereseparator:)",
                        "title" : "func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [Self.SubSequence]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/variantarray\/split(separator:maxsplits:omittingemptysubsequences:)",
                        "title" : "func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [Self.SubSequence]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/variantarray\/suffix(_:)",
                        "title" : "func suffix(Int) -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/variantarray\/suffix(from:)",
                        "title" : "func suffix(from: Self.Index) -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/variantarray\/trimmingprefix(_:)",
                        "title" : "func trimmingPrefix<Prefix>(Prefix) -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/variantarray\/trimmingprefix(while:)",
                        "title" : "func trimmingPrefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "title" : "Type Aliases",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/variantarray\/index",
                        "title" : "VariantArray.Index",
                        "type" : "typealias"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/variantarray\/collection-implementations",
                    "title" : "Collection Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/variantarray\/init(from:)",
                        "title" : "init(from: any Decoder) throws",
                        "type" : "init"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/variantarray\/decodable-implementations",
                    "title" : "Decodable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/variantarray\/!=(_:_:)-2je8q",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/variantarray\/==(_:_:)",
                        "title" : "static func == (VariantArray, VariantArray) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/variantarray\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/variantarray\/movesubranges(_:to:)",
                        "title" : "func moveSubranges(RangeSet<Self.Index>, to: Self.Index) -> Range<Self.Index>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/variantarray\/partition(by:)",
                        "title" : "func partition(by: (Self.Element) throws -> Bool) rethrows -> Self.Index",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/variantarray\/swapat(_:_:)",
                        "title" : "func swapAt(Self.Index, Self.Index)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/variantarray\/withcontiguousmutablestorageifavailable(_:)",
                        "title" : "func withContiguousMutableStorageIfAvailable<R>((inout UnsafeMutableBufferPointer<Self.Element>) throws -> R) rethrows -> R?",
                        "type" : "method"
                      },
                      {
                        "title" : "Subscripts",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/variantarray\/subscript(_:)",
                        "title" : "subscript(Array<Variant>.Index) -> Variant",
                        "type" : "subscript"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/variantarray\/mutablecollection-implementations",
                    "title" : "MutableCollection Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/variantarray\/lazy",
                        "title" : "var lazy: LazySequence<Self>",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/variantarray\/publisher",
                        "title" : "var publisher: Publishers.Sequence<Self, Never>",
                        "type" : "property"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/variantarray\/allsatisfy(_:)",
                        "title" : "func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/variantarray\/compactmap(_:)",
                        "title" : "func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/variantarray\/compare(_:_:)",
                        "title" : "func compare<Comparator>(Comparator.Compared, Comparator.Compared) -> ComparisonResult",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/variantarray\/contains(_:)",
                        "title" : "func contains(Self.Element) -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/variantarray\/contains(where:)",
                        "title" : "func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/variantarray\/count(where:)",
                        "title" : "func count<E>(where: (Self.Element) throws(E) -> Bool) throws(E) -> Int",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/variantarray\/elementsequal(_:)",
                        "title" : "func elementsEqual<OtherSequence>(OtherSequence) -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/variantarray\/elementsequal(_:by:)",
                        "title" : "func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/variantarray\/enumerated()",
                        "title" : "func enumerated() -> EnumeratedSequence<Self>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/variantarray\/filter(_:)",
                        "title" : "func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/variantarray\/first(where:)",
                        "title" : "func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/variantarray\/flatmap(_:)-1jc1b",
                        "title" : "func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]",
                        "type" : "method"
                      },
                      {
                        "deprecated" : true,
                        "path" : "\/documentation\/poieticcore\/variantarray\/flatmap(_:)-lbx",
                        "title" : "func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/variantarray\/foreach(_:)",
                        "title" : "func forEach((Self.Element) throws -> Void) rethrows",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/variantarray\/formatted(_:)",
                        "title" : "func formatted<S>(S) -> S.FormatOutput",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/variantarray\/lexicographicallyprecedes(_:by:)",
                        "title" : "func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/variantarray\/map(_:)-1z31b",
                        "title" : "func map<T, E>((Self.Element) throws(E) -> T) throws(E) -> [T]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/variantarray\/max(by:)",
                        "title" : "func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/variantarray\/min(by:)",
                        "title" : "func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/variantarray\/reduce(_:_:)",
                        "title" : "func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/variantarray\/reduce(into:_:)",
                        "title" : "func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/variantarray\/reversed()",
                        "title" : "func reversed() -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/variantarray\/shuffled()",
                        "title" : "func shuffled() -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/variantarray\/shuffled(using:)",
                        "title" : "func shuffled<T>(using: inout T) -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/variantarray\/sorted(by:)",
                        "title" : "func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/variantarray\/sorted(using:)-1zy3a",
                        "title" : "func sorted<S, Comparator>(using: S) -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/variantarray\/sorted(using:)-8zu3p",
                        "title" : "func sorted<Comparator>(using: Comparator) -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/variantarray\/starts(with:)",
                        "title" : "func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/variantarray\/starts(with:by:)",
                        "title" : "func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/variantarray\/withcontiguousstorageifavailable(_:)",
                        "title" : "func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?",
                        "type" : "method"
                      },
                      {
                        "title" : "Type Aliases",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/variantarray\/element",
                        "title" : "VariantArray.Element",
                        "type" : "typealias"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/variantarray\/sequence-implementations",
                    "title" : "Sequence Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/variantarray",
                "title" : "VariantArray",
                "type" : "enum"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/valuetype\/array(_:)",
                    "title" : "case array(AtomType)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/valuetype\/atom(_:)",
                    "title" : "case atom(AtomType)",
                    "type" : "case"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/valuetype\/codingtype",
                    "title" : "var codingType: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/valuetype\/description",
                    "title" : "var description: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/valuetype\/isarray",
                    "title" : "var isArray: Bool",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/valuetype\/isatom",
                    "title" : "var isAtom: Bool",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/valuetype\/typecode",
                    "title" : "var typeCode: String",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/valuetype\/isconvertible(to:)-7ysj7",
                    "title" : "func isConvertible(to: ValueType) -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/valuetype\/isconvertible(to:)-8jlej",
                    "title" : "func isConvertible(to: VariableType) -> Bool",
                    "type" : "method"
                  },
                  {
                    "title" : "Type Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/valuetype\/bool",
                    "title" : "static let bool: ValueType",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/valuetype\/bools",
                    "title" : "static let bools: ValueType",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/valuetype\/double",
                    "title" : "static let double: ValueType",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/valuetype\/doubles",
                    "title" : "static let doubles: ValueType",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/valuetype\/int",
                    "title" : "static let int: ValueType",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/valuetype\/ints",
                    "title" : "static let ints: ValueType",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/valuetype\/point",
                    "title" : "static let point: ValueType",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/valuetype\/points",
                    "title" : "static let points: ValueType",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/valuetype\/string",
                    "title" : "static let string: ValueType",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/valuetype\/strings",
                    "title" : "static let strings: ValueType",
                    "type" : "property"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/valuetype\/init(from:)",
                        "title" : "init(from: any Decoder) throws",
                        "type" : "init"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/valuetype\/decodable-implementations",
                    "title" : "Decodable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/valuetype\/encode(to:)",
                        "title" : "func encode(to: any Encoder) throws",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/valuetype\/encodable-implementations",
                    "title" : "Encodable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/valuetype\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/valuetype\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/valuetype",
                "title" : "ValueType",
                "type" : "enum"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/valueerror\/arrayexpected",
                    "title" : "case arrayExpected",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/valueerror\/atomexpected",
                    "title" : "case atomExpected",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/valueerror\/conversionfailed(_:_:)",
                    "title" : "case conversionFailed(ValueType, ValueType)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/valueerror\/conversiontoidfailed(_:)",
                    "title" : "case conversionToIDFailed(ValueType)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/valueerror\/notconvertible(_:_:)",
                    "title" : "case notConvertible(ValueType, ValueType)",
                    "type" : "case"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/valueerror\/description",
                    "title" : "var description: String",
                    "type" : "property"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/valueerror\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/valueerror\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/valueerror\/localizeddescription",
                        "title" : "var localizedDescription: String",
                        "type" : "property"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/valueerror\/error-implementations",
                    "title" : "Error Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/valueerror",
                "title" : "ValueError",
                "type" : "enum"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/atomtype\/bool",
                    "title" : "case bool",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/atomtype\/double",
                    "title" : "case double",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/atomtype\/int",
                    "title" : "case int",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/atomtype\/point",
                    "title" : "case point",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/atomtype\/string",
                    "title" : "case string",
                    "type" : "case"
                  },
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/atomtype\/init(rawvalue:)",
                    "title" : "init?(rawValue: String)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/atomtype\/description",
                    "title" : "var description: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/atomtype\/isnumeric",
                    "title" : "var isNumeric: Bool",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/atomtype\/isconvertible(to:)",
                    "title" : "func isConvertible(to: AtomType) -> Bool",
                    "type" : "method"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/atomtype\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/atomtype\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/atomtype\/init(from:)",
                        "title" : "init(from: any Decoder) throws",
                        "type" : "init"
                      },
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/atomtype\/hashvalue",
                        "title" : "var hashValue: Int",
                        "type" : "property"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/atomtype\/encode(to:)",
                        "title" : "func encode(to: any Encoder) throws",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/atomtype\/hash(into:)",
                        "title" : "func hash(into: inout Hasher)",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/atomtype\/rawrepresentable-implementations",
                    "title" : "RawRepresentable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/atomtype",
                "title" : "AtomType",
                "type" : "enum"
              },
              {
                "path" : "\/documentation\/poieticcore\/point",
                "title" : "Point",
                "type" : "typealias"
              },
              {
                "title" : "Component",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/component",
                "title" : "Component",
                "type" : "protocol"
              }
            ],
            "path" : "\/documentation\/poieticcore\/understandingdesign",
            "title" : "Understanding Design Objects and Frames",
            "type" : "symbol"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/design\/init(metamodel:)",
                "title" : "init(metamodel: Metamodel)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/design\/canredo",
                "title" : "var canRedo: Bool",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/design\/canundo",
                "title" : "var canUndo: Bool",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/design\/currentframe",
                "title" : "var currentFrame: DesignFrame?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/design\/currentframeid",
                "title" : "var currentFrameID: FrameID?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/design\/frames",
                "title" : "var frames: [DesignFrame]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/design\/identitymanager",
                "title" : "let identityManager: IdentityManager",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/design\/isempty",
                "title" : "var isEmpty: Bool",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/design\/metamodel",
                "title" : "let metamodel: Metamodel",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/design\/namedframes",
                "title" : "var namedFrames: [String : DesignFrame]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/design\/redoableframes",
                "title" : "var redoableFrames: [FrameID]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/design\/snapshots",
                "title" : "var snapshots: some Collection<DesignObject>",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/design\/undoableframes",
                "title" : "var undoableFrames: [FrameID]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/design\/versionhistory",
                "title" : "var versionHistory: [FrameID]",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/design\/accept(_:appendhistory:)",
                "title" : "func accept(TransientFrame, appendHistory: Bool) throws(StructuralIntegrityError) -> DesignFrame",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/design\/accept(_:replacingname:)",
                "title" : "func accept(TransientFrame, replacingName: String) throws(StructuralIntegrityError) -> DesignFrame",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/design\/checkconstraints(_:)",
                "title" : "func checkConstraints(some Frame) -> [ConstraintViolation]",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/design\/contains(snapshot:)",
                "title" : "func contains(snapshot: ObjectID) -> Bool",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/design\/contains(stableframe:)",
                "title" : "func contains(stableFrame: ObjectID) -> Bool",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/design\/containsframe(_:)",
                "title" : "func containsFrame(FrameID) -> Bool",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/design\/createframe(deriving:id:)",
                "title" : "func createFrame(deriving: DesignFrame?, id: FrameID?) -> TransientFrame",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/design\/discard(_:)",
                "title" : "func discard(TransientFrame)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/design\/frame(_:)",
                "title" : "func frame(FrameID) -> DesignFrame?",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/design\/frame(name:)",
                "title" : "func frame(name: String) -> DesignFrame?",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/design\/redo(to:)",
                "title" : "func redo(to: FrameID?) -> Bool",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/design\/referencecount(_:)",
                "title" : "func referenceCount(ObjectID) -> Int?",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/design\/removeframe(_:)",
                "title" : "func removeFrame(FrameID)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/design\/snapshot(_:)",
                "title" : "func snapshot(ObjectID) -> DesignObject?",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/design\/undo(to:)",
                "title" : "func undo(to: FrameID?) -> Bool",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/design\/validate(_:metamodel:)",
                "title" : "func validate(DesignFrame, metamodel: Metamodel?) throws(FrameValidationError) -> ValidatedFrame",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/poieticcore\/design",
            "title" : "Design",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/designframe\/design",
                "title" : "let design: Design",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/designframe\/edgeids",
                "title" : "var edgeIDs: [ObjectID]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/designframe\/edges",
                "title" : "var edges: [DesignFrame.Edge]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/designframe\/id",
                "title" : "let id: FrameID",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/designframe\/nodeids",
                "title" : "var nodeIDs: [ObjectID]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/designframe\/nodes",
                "title" : "var nodes: [DesignObject]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/designframe\/snapshots",
                "title" : "var snapshots: [DesignObject]",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/designframe\/contained(_:)",
                "title" : "func contained([ObjectID]) -> [ObjectID]",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/designframe\/contains(_:)-39h7b",
                "title" : "func contains(DesignObject) -> Bool",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/designframe\/contains(_:)-3okr5",
                "title" : "func contains(ObjectID) -> Bool",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/designframe\/contains(edge:)",
                "title" : "func contains(edge: ObjectID) -> Bool",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/designframe\/contains(node:)",
                "title" : "func contains(node: DesignFrame.NodeID) -> Bool",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/designframe\/edge(_:)",
                "title" : "func edge(DesignFrame.EdgeID) -> DesignFrame.Edge",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/designframe\/incoming(_:)",
                "title" : "func incoming(DesignFrame.NodeID) -> [DesignFrame.Edge]",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/designframe\/node(_:)",
                "title" : "func node(DesignFrame.NodeID) -> DesignFrame.Node",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/designframe\/object(_:)",
                "title" : "func object(ObjectID) -> DesignObject",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/designframe\/outgoing(_:)",
                "title" : "func outgoing(DesignFrame.NodeID) -> [DesignFrame.Edge]",
                "type" : "method"
              },
              {
                "title" : "Type Aliases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/designframe\/snapshot",
                "title" : "DesignFrame.Snapshot",
                "type" : "typealias"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/designframe\/brokenreferences()",
                    "title" : "func brokenReferences() -> [ObjectID]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/designframe\/brokenreferences(snapshot:)",
                    "title" : "func brokenReferences(snapshot: DesignObject) -> [ObjectID]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/designframe\/distinctattribute(_:ids:)",
                    "title" : "func distinctAttribute(String, ids: [ObjectID]) -> Set<Variant>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/designframe\/distincttypes(_:)",
                    "title" : "func distinctTypes([ObjectID]) -> [ObjectType]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/designframe\/filter(_:)-203dv",
                    "title" : "func filter((DesignObject) -> Bool) -> [DesignObject]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/designframe\/filter(_:)-46hcr",
                    "title" : "func filter(any Predicate) -> [DesignObject]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/designframe\/filter(trait:)",
                    "title" : "func filter(trait: Trait) -> [DesignObject]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/designframe\/filter(type:)",
                    "title" : "func filter(type: ObjectType) -> [DesignObject]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/designframe\/filteredges(_:)",
                    "title" : "func filterEdges((Self.Edge) -> Bool) -> [Self.Edge]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/designframe\/first(trait:)",
                    "title" : "func first(trait: Trait) -> DesignObject?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/designframe\/first(type:)",
                    "title" : "func first(type: ObjectType) -> DesignObject?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/designframe\/first(where:)",
                    "title" : "func first(where: (DesignObject) -> Bool) -> DesignObject?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/designframe\/missing(_:)",
                    "title" : "func missing([ObjectID]) -> [ObjectID]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/designframe\/object(named:)",
                    "title" : "func object(named: String) -> DesignObject?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/designframe\/object(stringreference:)",
                    "title" : "func object(stringReference: String) -> DesignObject?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/designframe\/sharedtraits(_:)",
                    "title" : "func sharedTraits([ObjectID]) -> [Trait]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/designframe\/top()",
                    "title" : "func top() -> [DesignObject]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/designframe\/validatestructure()",
                    "title" : "func validateStructure() throws(StructuralIntegrityError)",
                    "type" : "method"
                  },
                  {
                    "title" : "Subscripts",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/designframe\/subscript(_:)",
                    "title" : "subscript(ObjectID) -> DesignObject",
                    "type" : "subscript"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/designframe\/frame-implementations",
                "title" : "Frame Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/designframe\/cycles()",
                    "title" : "func cycles() -> [Self.Edge]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/designframe\/topologicalsort()",
                    "title" : "func topologicalSort() -> [Self.NodeID]?",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/designframe\/graphprotocol-implementations",
                "title" : "GraphProtocol Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/poieticcore\/designframe",
            "title" : "DesignFrame",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/designobject\/init(id:snapshotid:type:structure:parent:children:attributes:components:)",
                "title" : "init(id: ObjectID, snapshotID: SnapshotID, type: ObjectType, structure: Structure, parent: ObjectID?, children: [ObjectID], attributes: [String : Variant], components: [any Component])",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/designobject\/attributekeys",
                "title" : "var attributeKeys: [AttributeKey]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/designobject\/attributes",
                "title" : "var attributes: [String : Variant]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/designobject\/children",
                "title" : "var children: ChildrenSet",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/designobject\/components",
                "title" : "var components: ComponentSet",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/designobject\/description",
                "title" : "var description: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/designobject\/id",
                "title" : "var id: ObjectID",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/designobject\/parent",
                "title" : "var parent: ObjectID?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/designobject\/prettydescription",
                "title" : "var prettyDescription: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/designobject\/snapshotid",
                "title" : "var snapshotID: ObjectID",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/designobject\/structure",
                "title" : "var structure: Structure",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/designobject\/type",
                "title" : "var type: ObjectType",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/designobject\/attribute(forkey:)",
                "title" : "func attribute(forKey: String) -> Variant?",
                "type" : "method"
              },
              {
                "title" : "Subscripts",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/designobject\/subscript(_:)-5r1lr",
                "title" : "subscript<T>(T.Type) -> T?",
                "type" : "subscript"
              },
              {
                "path" : "\/documentation\/poieticcore\/designobject\/subscript(_:)-91oje",
                "title" : "subscript(String) -> Variant?",
                "type" : "subscript"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/designobject\/name",
                    "title" : "var name: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/designobject\/position",
                    "title" : "var position: Point?",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/designobject\/check(conformsto:)",
                    "title" : "func check(conformsTo: Trait) throws(ObjectTypeErrorCollection)",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/designobject\/objectsnapshot-implementations",
                "title" : "ObjectSnapshot Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/poieticcore\/designobject",
            "title" : "DesignObject",
            "type" : "class"
          },
          {
            "title" : "Problem Domain",
            "type" : "groupMarker"
          },
          {
            "children" : [
              {
                "title" : "Metamodel and Object Types",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/metamodel\/init()",
                    "title" : "init()",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/metamodel\/init(name:version:merging:)",
                    "title" : "init(name: String?, version: SemanticVersion?, merging: Metamodel...)",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/metamodel\/init(name:version:traits:types:edgerules:constraints:)",
                    "title" : "init(name: String?, version: SemanticVersion?, traits: [Trait], types: [ObjectType], edgeRules: [EdgeRule], constraints: [Constraint])",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/metamodel\/constraints",
                    "title" : "let constraints: [Constraint]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/metamodel\/edgerules",
                    "title" : "let edgeRules: [EdgeRule]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/metamodel\/edgetypes",
                    "title" : "var edgeTypes: [ObjectType]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/metamodel\/name",
                    "title" : "let name: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/metamodel\/nodetypes",
                    "title" : "var nodeTypes: [ObjectType]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/metamodel\/traits",
                    "title" : "let traits: [Trait]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/metamodel\/types",
                    "title" : "let types: [ObjectType]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/metamodel\/unstructuredtypes",
                    "title" : "var unstructuredTypes: [ObjectType]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/metamodel\/version",
                    "title" : "let version: SemanticVersion?",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/metamodel\/objecttype(name:)",
                    "title" : "func objectType(name: String) -> ObjectType?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/metamodel\/trait(name:)",
                    "title" : "func trait(name: String) -> Trait?",
                    "type" : "method"
                  },
                  {
                    "title" : "Subscripts",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/metamodel\/subscript(_:)",
                    "title" : "subscript(String) -> ObjectType?",
                    "type" : "subscript"
                  },
                  {
                    "title" : "Type Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/metamodel\/basic",
                    "title" : "static let Basic: Metamodel",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/metamodel",
                "title" : "Metamodel",
                "type" : "class"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objecttype\/init(name:label:structuraltype:traits:abstract:)",
                    "title" : "init(name: String, label: String?, structuralType: StructuralType, traits: [Trait], abstract: String?)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objecttype\/abstract",
                    "title" : "let abstract: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objecttype\/attributekeys",
                    "title" : "var attributeKeys: [AttributeKey]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objecttype\/attributes",
                    "title" : "let attributes: [Attribute]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objecttype\/label",
                    "title" : "let label: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objecttype\/name",
                    "title" : "let name: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objecttype\/structuraltype",
                    "title" : "let structuralType: StructuralType",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objecttype\/traits",
                    "title" : "let traits: [Trait]",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objecttype\/attribute(_:)",
                    "title" : "func attribute(String) -> Attribute?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objecttype\/hasattribute(_:)",
                    "title" : "func hasAttribute(String) -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objecttype\/hastrait(_:)-3cvby",
                    "title" : "func hasTrait(Trait) -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objecttype\/hastrait(_:)-7vxeu",
                    "title" : "func hasTrait(String) -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objecttype\/trait(forattribute:)",
                    "title" : "func trait(forAttribute: String) -> Trait?",
                    "type" : "method"
                  },
                  {
                    "title" : "Type Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objecttype\/bibliographicalreference",
                    "title" : "static let BibliographicalReference: ObjectType",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objecttype\/designinfo",
                    "title" : "static let DesignInfo: ObjectType",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objecttype\/diagramsettings",
                    "title" : "static let DiagramSettings: ObjectType",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objecttype\/group",
                    "title" : "static let Group: ObjectType",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/objecttype",
                "title" : "ObjectType",
                "type" : "class"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/trait\/init(name:label:attributes:abstract:)",
                    "title" : "init(name: String, label: String?, attributes: [Attribute], abstract: String?)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/trait\/abstract",
                    "title" : "let abstract: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/trait\/attributes",
                    "title" : "let attributes: [Attribute]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/trait\/description",
                    "title" : "var description: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/trait\/label",
                    "title" : "let label: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/trait\/name-swift.property",
                    "title" : "let name: String",
                    "type" : "property"
                  },
                  {
                    "title" : "Type Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/trait\/audiencelevel",
                    "title" : "static let AudienceLevel: Trait",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/trait\/bibliographicalreference",
                    "title" : "static let BibliographicalReference: Trait",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/trait\/designinfo",
                    "title" : "static let DesignInfo: Trait",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/trait\/diagramconnector",
                    "title" : "static let DiagramConnector: Trait",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/trait\/diagramnode",
                    "title" : "static let DiagramNode: Trait",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/trait\/diagramview",
                    "title" : "static let DiagramView: Trait",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/trait\/documentation",
                    "title" : "static let Documentation: Trait",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/trait\/keywords",
                    "title" : "static let Keywords: Trait",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/trait\/name-swift.type.property",
                    "title" : "static let Name: Trait",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/trait\/note",
                    "title" : "static let Note: Trait",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/trait\/orderable",
                    "title" : "static let Orderable: Trait",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/trait",
                "title" : "Trait",
                "type" : "class"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/attribute\/init(_:type:default:optional:label:abstract:)",
                    "title" : "init(String, type: VariableType, default: Variant?, optional: Bool, label: String?, abstract: String?)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/attribute\/abstract",
                    "title" : "let abstract: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/attribute\/defaultvalue",
                    "title" : "let defaultValue: Variant?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/attribute\/description",
                    "title" : "var description: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/attribute\/label",
                    "title" : "let label: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/attribute\/name",
                    "title" : "let name: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/attribute\/optional",
                    "title" : "let optional: Bool",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/attribute\/type",
                    "title" : "let type: VariableType",
                    "type" : "property"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/attribute\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/attribute\/==(_:_:)",
                        "title" : "static func == (Attribute, Attribute) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/attribute\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/attribute",
                "title" : "Attribute",
                "type" : "class"
              },
              {
                "title" : "Edge Rules",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/edgerule\/init(type:origin:outgoing:target:incoming:)",
                    "title" : "init(type: ObjectType, origin: (any Predicate)?, outgoing: EdgeCardinality, target: (any Predicate)?, incoming: EdgeCardinality)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/edgerule\/description",
                    "title" : "var description: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/edgerule\/incoming",
                    "title" : "let incoming: EdgeCardinality",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/edgerule\/originpredicate",
                    "title" : "let originPredicate: (any Predicate)?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/edgerule\/outgoing",
                    "title" : "let outgoing: EdgeCardinality",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/edgerule\/targetpredicate",
                    "title" : "let targetPredicate: (any Predicate)?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/edgerule\/type",
                    "title" : "let type: ObjectType",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/edgerule\/match(_:in:)",
                    "title" : "func match(EdgeObject, in: some Frame) -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/edgerule\/match(_:origin:target:in:)",
                    "title" : "func match(ObjectType, origin: DesignObject, target: DesignObject, in: some Frame) -> Bool",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/edgerule",
                "title" : "EdgeRule",
                "type" : "struct"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/edgecardinality\/many",
                    "title" : "case many",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/edgecardinality\/one",
                    "title" : "case one",
                    "type" : "case"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/edgecardinality\/description",
                    "title" : "var description: String",
                    "type" : "property"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/edgecardinality\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/edgecardinality\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/edgecardinality",
                "title" : "EdgeCardinality",
                "type" : "enum"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/edgeruleviolation\/cardinalityviolation(_:_:)",
                    "title" : "case cardinalityViolation(EdgeRule, EdgeDirection)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/edgeruleviolation\/edgenotallowed",
                    "title" : "case edgeNotAllowed",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/edgeruleviolation\/norulesatisfied",
                    "title" : "case noRuleSatisfied",
                    "type" : "case"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/edgeruleviolation\/description",
                    "title" : "var description: String",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/edgeruleviolation\/asdesignissue()",
                    "title" : "func asDesignIssue() -> DesignIssue",
                    "type" : "method"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/edgeruleviolation\/localizeddescription",
                        "title" : "var localizedDescription: String",
                        "type" : "property"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/edgeruleviolation\/error-implementations",
                    "title" : "Error Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/edgeruleviolation",
                "title" : "EdgeRuleViolation",
                "type" : "enum"
              },
              {
                "title" : "Constraints",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/constraintchecker\/init(_:)",
                    "title" : "init(Metamodel)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/constraintchecker\/metamodel",
                    "title" : "let metamodel: Metamodel",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/constraintchecker\/canconnect(type:from:to:in:)",
                    "title" : "func canConnect(type: ObjectType, from: ObjectID, to: ObjectID, in: some Frame) -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/constraintchecker\/check(_:)",
                    "title" : "func check(some Frame) throws(FrameValidationError)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/constraintchecker\/validate(edge:in:)",
                    "title" : "func validate(edge: EdgeObject, in: some Frame) throws(EdgeRuleViolation)",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/constraintchecker",
                "title" : "ConstraintChecker",
                "type" : "struct"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/constraint\/init(name:abstract:match:requirement:)",
                    "title" : "init(name: String, abstract: String?, match: any Predicate, requirement: any ConstraintRequirement)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/constraint\/abstract",
                    "title" : "let abstract: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/constraint\/match",
                    "title" : "let match: any Predicate",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/constraint\/name",
                    "title" : "let name: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/constraint\/requirement",
                    "title" : "let requirement: any ConstraintRequirement",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/constraint\/check(_:)",
                    "title" : "func check(some Frame) -> [ObjectID]",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/constraint",
                "title" : "Constraint",
                "type" : "class"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/designissue\/init(domain:severity:identifier:message:hint:details:)",
                    "title" : "init(domain: DesignIssue.Domain, severity: DesignIssue.Severity, identifier: String, message: String, hint: String?, details: [String : Variant])",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/designissue\/description",
                    "title" : "var description: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/designissue\/details",
                    "title" : "let details: [String : Variant]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/designissue\/domain-swift.property",
                    "title" : "let domain: DesignIssue.Domain",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/designissue\/hint",
                    "title" : "let hint: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/designissue\/identifier",
                    "title" : "let identifier: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/designissue\/message",
                    "title" : "let message: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/designissue\/severity-swift.property",
                    "title" : "let severity: DesignIssue.Severity",
                    "type" : "property"
                  },
                  {
                    "title" : "Enumerations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Enumeration Cases",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/designissue\/domain-swift.enum\/compilation",
                        "title" : "case compilation",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/designissue\/domain-swift.enum\/foreigninterface",
                        "title" : "case foreignInterface",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/designissue\/domain-swift.enum\/simulation",
                        "title" : "case simulation",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/designissue\/domain-swift.enum\/validation",
                        "title" : "case validation",
                        "type" : "case"
                      },
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/designissue\/domain-swift.enum\/description",
                        "title" : "var description: String",
                        "type" : "property"
                      },
                      {
                        "title" : "Default Implementations",
                        "type" : "groupMarker"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Operators",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/poieticcore\/designissue\/domain-swift.enum\/!=(_:_:)",
                            "title" : "static func != (Self, Self) -> Bool",
                            "type" : "op"
                          }
                        ],
                        "path" : "\/documentation\/poieticcore\/designissue\/domain-swift.enum\/equatable-implementations",
                        "title" : "Equatable Implementations",
                        "type" : "symbol"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/designissue\/domain-swift.enum",
                    "title" : "DesignIssue.Domain",
                    "type" : "enum"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Enumeration Cases",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/designissue\/severity-swift.enum\/error",
                        "title" : "case error",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/designissue\/severity-swift.enum\/fatal",
                        "title" : "case fatal",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/designissue\/severity-swift.enum\/warning",
                        "title" : "case warning",
                        "type" : "case"
                      },
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/designissue\/severity-swift.enum\/description",
                        "title" : "var description: String",
                        "type" : "property"
                      },
                      {
                        "title" : "Default Implementations",
                        "type" : "groupMarker"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Operators",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/poieticcore\/designissue\/severity-swift.enum\/!=(_:_:)",
                            "title" : "static func != (Self, Self) -> Bool",
                            "type" : "op"
                          }
                        ],
                        "path" : "\/documentation\/poieticcore\/designissue\/severity-swift.enum\/equatable-implementations",
                        "title" : "Equatable Implementations",
                        "type" : "symbol"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/designissue\/severity-swift.enum",
                    "title" : "DesignIssue.Severity",
                    "type" : "enum"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/designissue",
                "title" : "DesignIssue",
                "type" : "struct"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/designissuecollection\/init()",
                    "title" : "init()",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/designissuecollection\/designissues",
                    "title" : "var designIssues: [DesignIssue]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/designissuecollection\/isempty",
                    "title" : "var isEmpty: Bool",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/designissuecollection\/objectissues",
                    "title" : "var objectIssues: [ObjectID : [DesignIssue]]",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/designissuecollection\/append(_:)",
                    "title" : "func append(DesignIssue)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/designissuecollection\/append(_:for:)-1xd7n",
                    "title" : "func append(DesignIssue, for: ObjectID)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/designissuecollection\/append(_:for:)-3ohfi",
                    "title" : "func append([DesignIssue], for: ObjectID)",
                    "type" : "method"
                  },
                  {
                    "title" : "Subscripts",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/designissuecollection\/subscript(_:)",
                    "title" : "subscript(ObjectID) -> [DesignIssue]?",
                    "type" : "subscript"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/designissuecollection",
                "title" : "DesignIssueCollection",
                "type" : "struct"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/designissueconvertible\/asdesignissue()",
                    "title" : "func asDesignIssue() -> DesignIssue",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/designissueconvertible",
                "title" : "DesignIssueConvertible",
                "type" : "protocol"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objecttypeerror\/missingtraitattribute(_:_:)",
                    "title" : "case missingTraitAttribute(Attribute, String)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objecttypeerror\/typemismatch(_:_:)",
                    "title" : "case typeMismatch(Attribute, ValueType)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objecttypeerror\/unknowntype(_:)",
                    "title" : "case unknownType(String)",
                    "type" : "case"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objecttypeerror\/description",
                    "title" : "var description: String",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objecttypeerror\/asdesignissue()",
                    "title" : "func asDesignIssue() -> DesignIssue",
                    "type" : "method"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/objecttypeerror\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/objecttypeerror\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/objecttypeerror\/localizeddescription",
                        "title" : "var localizedDescription: String",
                        "type" : "property"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/objecttypeerror\/error-implementations",
                    "title" : "Error Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/objecttypeerror",
                "title" : "ObjectTypeError",
                "type" : "enum"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/rejectall\/init()",
                    "title" : "init()",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/rejectall\/check(frame:objects:)",
                    "title" : "func check(frame: some Frame, objects: [DesignObject]) -> [ObjectID]",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/rejectall",
                "title" : "RejectAll",
                "type" : "class"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/acceptall\/init()",
                    "title" : "init()",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/acceptall\/check(frame:objects:)",
                    "title" : "func check(frame: some Frame, objects: [DesignObject]) -> [ObjectID]",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/acceptall",
                "title" : "AcceptAll",
                "type" : "class"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/constraintviolation\/init(constraint:objects:)",
                    "title" : "init(constraint: Constraint, objects: [ObjectID])",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/constraintviolation\/constraint",
                    "title" : "let constraint: Constraint",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/constraintviolation\/debugdescription",
                    "title" : "var debugDescription: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/constraintviolation\/objects",
                    "title" : "let objects: [ObjectID]",
                    "type" : "property"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/constraintviolation\/localizeddescription",
                        "title" : "var localizedDescription: String",
                        "type" : "property"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/constraintviolation\/error-implementations",
                    "title" : "Error Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/constraintviolation",
                "title" : "ConstraintViolation",
                "type" : "struct"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/uniqueproperty\/init(_:)",
                    "title" : "init(String)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/uniqueproperty\/name",
                    "title" : "let name: String",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/uniqueproperty\/check(frame:objects:)",
                    "title" : "func check(frame: some Frame, objects: [DesignObject]) -> [ObjectID]",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/uniqueproperty",
                "title" : "UniqueProperty",
                "type" : "class"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/constraintrequirement\/check(frame:objects:)",
                    "title" : "func check(frame: some Frame, objects: [DesignObject]) -> [ObjectID]",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/constraintrequirement",
                "title" : "ConstraintRequirement",
                "type" : "protocol"
              },
              {
                "title" : "Common Components and Types",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/trait\/name-swift.type.property",
                "title" : "static let Name: Trait",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/trait\/documentation",
                "title" : "static let Documentation: Trait",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/trait\/keywords",
                "title" : "static let Keywords: Trait",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/trait\/note",
                "title" : "static let Note: Trait",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/trait\/designinfo",
                "title" : "static let DesignInfo: Trait",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/trait\/designinfo",
                "title" : "static let DesignInfo: Trait",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/objecttype\/designinfo",
                "title" : "static let DesignInfo: ObjectType",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/trait\/audiencelevel",
                "title" : "static let AudienceLevel: Trait",
                "type" : "property"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/audiencelevel\/_(_:_:)",
                    "title" : "static func < (AudienceLevel, AudienceLevel) -> Bool",
                    "type" : "op"
                  },
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/audiencelevel\/advanced",
                    "title" : "case advanced",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/audiencelevel\/any",
                    "title" : "case any",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/audiencelevel\/beginner",
                    "title" : "case beginner",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/audiencelevel\/expert",
                    "title" : "case expert",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/audiencelevel\/normal",
                    "title" : "case normal",
                    "type" : "case"
                  },
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/audiencelevel\/init(rawvalue:)-3xqfv",
                    "title" : "init(rawValue: Int)",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/audiencelevel\/init(rawvalue:)-7edc6",
                    "title" : "init?(rawValue: String)",
                    "type" : "init"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/audiencelevel\/'...(_:)-1afxd",
                        "title" : "static func ... (Self) -> PartialRangeFrom<Self>",
                        "type" : "op"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/audiencelevel\/'...(_:)-962m",
                        "title" : "static func ... (Self) -> PartialRangeThrough<Self>",
                        "type" : "op"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/audiencelevel\/'...(_:_:)",
                        "title" : "static func ... (Self, Self) -> ClosedRange<Self>",
                        "type" : "op"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/audiencelevel\/'.._(_:)",
                        "title" : "static func ..< (Self) -> PartialRangeUpTo<Self>",
                        "type" : "op"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/audiencelevel\/'.._(_:_:)",
                        "title" : "static func ..< (Self, Self) -> Range<Self>",
                        "type" : "op"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/audiencelevel\/_(_:_:)-2nwzr",
                        "title" : "static func > (Self, Self) -> Bool",
                        "type" : "op"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/audiencelevel\/_=(_:_:)-46fic",
                        "title" : "static func >= (Self, Self) -> Bool",
                        "type" : "op"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/audiencelevel\/_=(_:_:)-6nenj",
                        "title" : "static func <= (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/audiencelevel\/comparable-implementations",
                    "title" : "Comparable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/audiencelevel\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/audiencelevel\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/audiencelevel\/hashvalue",
                        "title" : "var hashValue: Int",
                        "type" : "property"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/audiencelevel\/hash(into:)",
                        "title" : "func hash(into: inout Hasher)",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/audiencelevel\/rawrepresentable-implementations",
                    "title" : "RawRepresentable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/audiencelevel",
                "title" : "AudienceLevel",
                "type" : "enum"
              },
              {
                "title" : "Other",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variable\/==(_:_:)",
                    "title" : "static func == (Variable, Variable) -> Bool",
                    "type" : "op"
                  },
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variable\/init(name:value:valuetype:abstract:)",
                    "title" : "init(name: String, value: Variant?, valueType: ValueType, abstract: String?)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variable\/abstract",
                    "title" : "let abstract: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variable\/initialvalue",
                    "title" : "let initialValue: Variant?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variable\/name",
                    "title" : "let name: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variable\/valuetype",
                    "title" : "let valueType: ValueType",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variable\/hash(into:)",
                    "title" : "func hash(into: inout Hasher)",
                    "type" : "method"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/variable\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/variable\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/variable",
                "title" : "Variable",
                "type" : "class"
              }
            ],
            "path" : "\/documentation\/poieticcore\/metamodelandtypes",
            "title" : "Metamodel and Types",
            "type" : "symbol"
          },
          {
            "children" : [
              {
                "title" : "Predicates",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "children" : [
                          {
                            "path" : "\/documentation\/poieticcore\/predicate\/and(_:)-4d8v8",
                            "title" : "func and(any Predicate) -> any Predicate",
                            "type" : "method"
                          }
                        ],
                        "title" : "Predicate Implementations",
                        "type" : "groupMarker"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/predicate\/and(_:)",
                    "title" : "func and(any Predicate) -> any Predicate",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/predicate\/match(_:in:)",
                    "title" : "func match(DesignObject, in: some Frame) -> Bool",
                    "type" : "method"
                  },
                  {
                    "children" : [
                      {
                        "children" : [
                          {
                            "path" : "\/documentation\/poieticcore\/predicate\/not()-6r1ul",
                            "title" : "func not() -> any Predicate",
                            "type" : "method"
                          }
                        ],
                        "title" : "Predicate Implementations",
                        "type" : "groupMarker"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/predicate\/not()",
                    "title" : "func not() -> any Predicate",
                    "type" : "method"
                  },
                  {
                    "children" : [
                      {
                        "children" : [
                          {
                            "path" : "\/documentation\/poieticcore\/predicate\/or(_:)-3r9tw",
                            "title" : "func or(any Predicate) -> any Predicate",
                            "type" : "method"
                          }
                        ],
                        "title" : "Predicate Implementations",
                        "type" : "groupMarker"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/predicate\/or(_:)",
                    "title" : "func or(any Predicate) -> any Predicate",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/predicate",
                "title" : "Predicate",
                "type" : "protocol"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/andpredicate\/init(_:)",
                    "title" : "init(any Predicate...)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/andpredicate\/description",
                    "title" : "var description: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/andpredicate\/predicates",
                    "title" : "let predicates: [any Predicate]",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/andpredicate\/match(_:in:)",
                    "title" : "func match(DesignObject, in: some Frame) -> Bool",
                    "type" : "method"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/andpredicate\/and(_:)",
                        "title" : "func and(any Predicate) -> any Predicate",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/andpredicate\/not()",
                        "title" : "func not() -> any Predicate",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/andpredicate\/or(_:)",
                        "title" : "func or(any Predicate) -> any Predicate",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/andpredicate\/predicate-implementations",
                    "title" : "Predicate Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/andpredicate",
                "title" : "AndPredicate",
                "type" : "struct"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/orpredicate\/init(_:)",
                    "title" : "init(any Predicate...)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/orpredicate\/description",
                    "title" : "var description: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/orpredicate\/predicates",
                    "title" : "let predicates: [any Predicate]",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/orpredicate\/match(_:in:)",
                    "title" : "func match(DesignObject, in: some Frame) -> Bool",
                    "type" : "method"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orpredicate\/and(_:)",
                        "title" : "func and(any Predicate) -> any Predicate",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orpredicate\/not()",
                        "title" : "func not() -> any Predicate",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orpredicate\/or(_:)",
                        "title" : "func or(any Predicate) -> any Predicate",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/orpredicate\/predicate-implementations",
                    "title" : "Predicate Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/orpredicate",
                "title" : "OrPredicate",
                "type" : "struct"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/edgepredicate\/init()",
                    "title" : "init()",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/edgepredicate\/init(_:origin:target:)-5lirk",
                    "title" : "init(ObjectType?, origin: ObjectType?, target: ObjectType?)",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/edgepredicate\/init(_:origin:target:)-67v5",
                    "title" : "init((any Predicate)?, origin: (any Predicate)?, target: (any Predicate)?)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/edgepredicate\/description",
                    "title" : "var description: String",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/edgepredicate\/match(_:in:)",
                    "title" : "func match(DesignObject, in: some Frame) -> Bool",
                    "type" : "method"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/edgepredicate\/and(_:)",
                        "title" : "func and(any Predicate) -> any Predicate",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/edgepredicate\/not()",
                        "title" : "func not() -> any Predicate",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/edgepredicate\/or(_:)",
                        "title" : "func or(any Predicate) -> any Predicate",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/edgepredicate\/predicate-implementations",
                    "title" : "Predicate Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/edgepredicate",
                "title" : "EdgePredicate",
                "type" : "struct"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/anypredicate\/init()",
                    "title" : "init()",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/anypredicate\/description",
                    "title" : "var description: String",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/anypredicate\/match(_:in:)",
                    "title" : "func match(DesignObject, in: some Frame) -> Bool",
                    "type" : "method"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/anypredicate\/and(_:)",
                        "title" : "func and(any Predicate) -> any Predicate",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/anypredicate\/not()",
                        "title" : "func not() -> any Predicate",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/anypredicate\/or(_:)",
                        "title" : "func or(any Predicate) -> any Predicate",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/anypredicate\/predicate-implementations",
                    "title" : "Predicate Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/anypredicate",
                "title" : "AnyPredicate",
                "type" : "struct"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/istypepredicate\/init(_:)",
                    "title" : "init(ObjectType)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/istypepredicate\/description",
                    "title" : "var description: String",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/istypepredicate\/match(_:in:)",
                    "title" : "func match(DesignObject, in: some Frame) -> Bool",
                    "type" : "method"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/istypepredicate\/and(_:)",
                        "title" : "func and(any Predicate) -> any Predicate",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/istypepredicate\/not()",
                        "title" : "func not() -> any Predicate",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/istypepredicate\/or(_:)",
                        "title" : "func or(any Predicate) -> any Predicate",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/istypepredicate\/predicate-implementations",
                    "title" : "Predicate Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/istypepredicate",
                "title" : "IsTypePredicate",
                "type" : "struct"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/hastraitpredicate\/init(_:)",
                    "title" : "init(Trait)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/hastraitpredicate\/description",
                    "title" : "var description: String",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/hastraitpredicate\/match(_:in:)",
                    "title" : "func match(DesignObject, in: some Frame) -> Bool",
                    "type" : "method"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/hastraitpredicate\/and(_:)",
                        "title" : "func and(any Predicate) -> any Predicate",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/hastraitpredicate\/not()",
                        "title" : "func not() -> any Predicate",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/hastraitpredicate\/or(_:)",
                        "title" : "func or(any Predicate) -> any Predicate",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/hastraitpredicate\/predicate-implementations",
                    "title" : "Predicate Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/hastraitpredicate",
                "title" : "HasTraitPredicate",
                "type" : "struct"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/negationpredicate\/init(_:)",
                    "title" : "init(any Predicate)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/negationpredicate\/description",
                    "title" : "var description: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/negationpredicate\/predicate",
                    "title" : "let predicate: any Predicate",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/negationpredicate\/match(_:in:)",
                    "title" : "func match(DesignObject, in: some Frame) -> Bool",
                    "type" : "method"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/negationpredicate\/and(_:)",
                        "title" : "func and(any Predicate) -> any Predicate",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/negationpredicate\/not()",
                        "title" : "func not() -> any Predicate",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/negationpredicate\/or(_:)",
                        "title" : "func or(any Predicate) -> any Predicate",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/negationpredicate\/predicate-implementations",
                    "title" : "Predicate Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/negationpredicate",
                "title" : "NegationPredicate",
                "type" : "struct"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/hascomponentpredicate\/init(_:)",
                    "title" : "init(any Component.Type)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/hascomponentpredicate\/description",
                    "title" : "var description: String",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/hascomponentpredicate\/match(_:in:)",
                    "title" : "func match(DesignObject, in: some Frame) -> Bool",
                    "type" : "method"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/hascomponentpredicate\/and(_:)",
                        "title" : "func and(any Predicate) -> any Predicate",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/hascomponentpredicate\/not()",
                        "title" : "func not() -> any Predicate",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/hascomponentpredicate\/or(_:)",
                        "title" : "func or(any Predicate) -> any Predicate",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/hascomponentpredicate\/predicate-implementations",
                    "title" : "Predicate Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/hascomponentpredicate",
                "title" : "HasComponentPredicate",
                "type" : "struct"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/allsatisfy\/init(_:)",
                    "title" : "init(any Predicate)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/allsatisfy\/predicate",
                    "title" : "let predicate: any Predicate",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/allsatisfy\/check(frame:objects:)",
                    "title" : "func check(frame: some Frame, objects: [DesignObject]) -> [ObjectID]",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/allsatisfy",
                "title" : "AllSatisfy",
                "type" : "class"
              }
            ],
            "path" : "\/documentation\/poieticcore\/predicates",
            "title" : "Predicates and Constraints",
            "type" : "symbol"
          },
          {
            "title" : "Persistence, Import and Export",
            "type" : "groupMarker"
          },
          {
            "children" : [
              {
                "title" : "Raw Entities",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/rawdesign\/init(from:)",
                    "title" : "init(from: any Decoder) throws",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/rawdesign\/init(metamodelname:metamodelversion:snapshots:frames:userreferences:userlists:systemreferences:systemlists:)",
                    "title" : "init(metamodelName: String?, metamodelVersion: SemanticVersion?, snapshots: [RawSnapshot], frames: [RawFrame], userReferences: [RawNamedReference], userLists: [RawNamedList], systemReferences: [RawNamedReference], systemLists: [RawNamedList])",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/rawdesign\/frames",
                    "title" : "var frames: [RawFrame]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/rawdesign\/metamodelname",
                    "title" : "var metamodelName: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/rawdesign\/metamodelversion",
                    "title" : "var metamodelVersion: SemanticVersion?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/rawdesign\/snapshots",
                    "title" : "var snapshots: [RawSnapshot]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/rawdesign\/systemlists",
                    "title" : "var systemLists: [RawNamedList]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/rawdesign\/systemreferences",
                    "title" : "var systemReferences: [RawNamedReference]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/rawdesign\/userlists",
                    "title" : "var userLists: [RawNamedList]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/rawdesign\/userreferences",
                    "title" : "var userReferences: [RawNamedReference]",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/rawdesign\/encode(to:)",
                    "title" : "func encode(to: any Encoder) throws",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/rawdesign",
                "title" : "RawDesign",
                "type" : "class"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/rawframe\/init(from:)",
                    "title" : "init(from: any Decoder) throws",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/rawframe\/init(id:snapshots:)",
                    "title" : "init(id: RawObjectID?, snapshots: [RawObjectID])",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/rawframe\/id",
                    "title" : "var id: RawObjectID?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/rawframe\/snapshots",
                    "title" : "var snapshots: [RawObjectID]",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/rawframe",
                "title" : "RawFrame",
                "type" : "class"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/rawsnapshot\/init(_:)",
                    "title" : "init(DesignObject)",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/rawsnapshot\/init(from:)",
                    "title" : "init(from: any Decoder) throws",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/rawsnapshot\/init(typename:snapshotid:id:structure:parent:attributes:)",
                    "title" : "init(typeName: String?, snapshotID: RawObjectID?, id: RawObjectID?, structure: RawStructure, parent: RawObjectID?, attributes: [String : Variant])",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/rawsnapshot\/attributes",
                    "title" : "var attributes: [String : Variant]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/rawsnapshot\/id",
                    "title" : "var id: RawObjectID?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/rawsnapshot\/parent",
                    "title" : "var parent: RawObjectID?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/rawsnapshot\/snapshotid",
                    "title" : "var snapshotID: RawObjectID?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/rawsnapshot\/structure",
                    "title" : "var structure: RawStructure",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/rawsnapshot\/typename",
                    "title" : "var typeName: String?",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/rawsnapshot\/encode(to:)",
                    "title" : "func encode(to: any Encoder) throws",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/rawsnapshot",
                "title" : "RawSnapshot",
                "type" : "class"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/rawstructure\/init(_:)",
                    "title" : "init(Structure)",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/rawstructure\/init(_:references:)",
                    "title" : "init(String?, references: [RawObjectID])",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/rawstructure\/init(origin:target:)",
                    "title" : "init(origin: RawObjectID, target: RawObjectID)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/rawstructure\/references",
                    "title" : "var references: [RawObjectID]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/rawstructure\/type",
                    "title" : "var type: String?",
                    "type" : "property"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/rawstructure\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/rawstructure\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/rawstructure",
                "title" : "RawStructure",
                "type" : "struct"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/rawnamedlist\/init(_:itemtype:ids:)",
                    "title" : "init(String, itemType: String, ids: [RawObjectID])",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/rawnamedlist\/init(from:)",
                    "title" : "init(from: any Decoder) throws",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/rawnamedlist\/ids",
                    "title" : "let ids: [RawObjectID]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/rawnamedlist\/itemtype",
                    "title" : "let itemType: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/rawnamedlist\/name",
                    "title" : "let name: String",
                    "type" : "property"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/rawnamedlist\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/rawnamedlist\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/rawnamedlist",
                "title" : "RawNamedList",
                "type" : "struct"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/rawnamedreference\/init(_:type:id:)",
                    "title" : "init(String, type: String, id: RawObjectID)",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/rawnamedreference\/init(from:)",
                    "title" : "init(from: any Decoder) throws",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/rawnamedreference\/id",
                    "title" : "let id: RawObjectID",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/rawnamedreference\/name",
                    "title" : "let name: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/rawnamedreference\/type",
                    "title" : "let type: String",
                    "type" : "property"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/rawnamedreference\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/rawnamedreference\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/rawnamedreference",
                "title" : "RawNamedReference",
                "type" : "struct"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/rawobjectid\/id(_:)",
                    "title" : "case id(ObjectID)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/rawobjectid\/int(_:)",
                    "title" : "case int(Int64)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/rawobjectid\/string(_:)",
                    "title" : "case string(String)",
                    "type" : "case"
                  },
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/rawobjectid\/init(from:)",
                    "title" : "init(from: any Decoder) throws",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/rawobjectid\/description",
                    "title" : "var description: String",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/rawobjectid\/encode(to:)",
                    "title" : "func encode(to: any Encoder) throws",
                    "type" : "method"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/rawobjectid\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/rawobjectid\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/rawobjectid",
                "title" : "RawObjectID",
                "type" : "enum"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/semanticversion\/_(_:_:)",
                    "title" : "static func < (SemanticVersion, SemanticVersion) -> Bool",
                    "type" : "op"
                  },
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/semanticversion\/init(_:)",
                    "title" : "init?(String)",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/semanticversion\/init(_:_:_:)",
                    "title" : "init(Int, Int, Int)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/semanticversion\/description",
                    "title" : "var description: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/semanticversion\/major",
                    "title" : "let major: Int",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/semanticversion\/minor",
                    "title" : "let minor: Int",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/semanticversion\/patch",
                    "title" : "let patch: Int",
                    "type" : "property"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/semanticversion\/'...(_:)-14jtm",
                        "title" : "static func ... (Self) -> PartialRangeFrom<Self>",
                        "type" : "op"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/semanticversion\/'...(_:)-9yicv",
                        "title" : "static func ... (Self) -> PartialRangeThrough<Self>",
                        "type" : "op"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/semanticversion\/'...(_:_:)",
                        "title" : "static func ... (Self, Self) -> ClosedRange<Self>",
                        "type" : "op"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/semanticversion\/'.._(_:)",
                        "title" : "static func ..< (Self) -> PartialRangeUpTo<Self>",
                        "type" : "op"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/semanticversion\/'.._(_:_:)",
                        "title" : "static func ..< (Self, Self) -> Range<Self>",
                        "type" : "op"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/semanticversion\/_(_:_:)-6ciyl",
                        "title" : "static func > (Self, Self) -> Bool",
                        "type" : "op"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/semanticversion\/_=(_:_:)-8j66f",
                        "title" : "static func >= (Self, Self) -> Bool",
                        "type" : "op"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/semanticversion\/_=(_:_:)-8tjl9",
                        "title" : "static func <= (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/semanticversion\/comparable-implementations",
                    "title" : "Comparable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/semanticversion\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/semanticversion\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/semanticversion",
                "title" : "SemanticVersion",
                "type" : "struct"
              },
              {
                "title" : "Reading and Loading",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/jsondesignreader\/init(variantcoding:)",
                    "title" : "init(variantCoding: Variant.CodingType)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/jsondesignreader\/variantcoding",
                    "title" : "let variantCoding: Variant.CodingType",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/jsondesignreader\/read(data:)",
                    "title" : "func read(data: Data) throws(RawDesignReaderError) -> RawDesign",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/jsondesignreader\/read(data:version:)",
                    "title" : "func read(data: Data, version: String) throws(RawDesignReaderError) -> RawDesign",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/jsondesignreader\/read(fileaturl:)",
                    "title" : "func read(fileAtURL: URL) throws(RawDesignReaderError) -> RawDesign",
                    "type" : "method"
                  },
                  {
                    "title" : "Type Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/jsondesignreader\/currentformatversion",
                    "title" : "static let CurrentFormatVersion: SemanticVersion",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/jsondesignreader",
                "title" : "JSONDesignReader",
                "type" : "class"
              },
              {
                "children" : [
                  {
                    "title" : "Structures",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/designloader\/options-swift.struct\/init()",
                        "title" : "init()",
                        "type" : "init"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/designloader\/options-swift.struct\/init(rawvalue:)",
                        "title" : "init(rawValue: Int)",
                        "type" : "init"
                      },
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/designloader\/options-swift.struct\/rawvalue-swift.property",
                        "title" : "var rawValue: Int",
                        "type" : "property"
                      },
                      {
                        "title" : "Type Aliases",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/designloader\/options-swift.struct\/rawvalue-swift.typealias",
                        "title" : "DesignLoader.Options.RawValue",
                        "type" : "typealias"
                      },
                      {
                        "title" : "Type Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/designloader\/options-swift.struct\/useidasnameattribute",
                        "title" : "static let useIDAsNameAttribute: DesignLoader.Options",
                        "type" : "property"
                      },
                      {
                        "title" : "Default Implementations",
                        "type" : "groupMarker"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Operators",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/poieticcore\/designloader\/options-swift.struct\/!=(_:_:)",
                            "title" : "static func != (Self, Self) -> Bool",
                            "type" : "op"
                          }
                        ],
                        "path" : "\/documentation\/poieticcore\/designloader\/options-swift.struct\/equatable-implementations",
                        "title" : "Equatable Implementations",
                        "type" : "symbol"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Initializers",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/poieticcore\/designloader\/options-swift.struct\/init()-2b04l",
                            "title" : "init()",
                            "type" : "init"
                          },
                          {
                            "title" : "Instance Methods",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/poieticcore\/designloader\/options-swift.struct\/contains(_:)",
                            "title" : "func contains(Self) -> Bool",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/poieticcore\/designloader\/options-swift.struct\/formintersection(_:)",
                            "title" : "func formIntersection(Self)",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/poieticcore\/designloader\/options-swift.struct\/formsymmetricdifference(_:)",
                            "title" : "func formSymmetricDifference(Self)",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/poieticcore\/designloader\/options-swift.struct\/formunion(_:)",
                            "title" : "func formUnion(Self)",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/poieticcore\/designloader\/options-swift.struct\/insert(_:)",
                            "title" : "func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/poieticcore\/designloader\/options-swift.struct\/intersection(_:)",
                            "title" : "func intersection(Self) -> Self",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/poieticcore\/designloader\/options-swift.struct\/remove(_:)",
                            "title" : "func remove(Self.Element) -> Self.Element?",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/poieticcore\/designloader\/options-swift.struct\/symmetricdifference(_:)",
                            "title" : "func symmetricDifference(Self) -> Self",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/poieticcore\/designloader\/options-swift.struct\/union(_:)",
                            "title" : "func union(Self) -> Self",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/poieticcore\/designloader\/options-swift.struct\/update(with:)",
                            "title" : "func update(with: Self.Element) -> Self.Element?",
                            "type" : "method"
                          }
                        ],
                        "path" : "\/documentation\/poieticcore\/designloader\/options-swift.struct\/optionset-implementations",
                        "title" : "OptionSet Implementations",
                        "type" : "symbol"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Initializers",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/poieticcore\/designloader\/options-swift.struct\/init(_:)",
                            "title" : "init<S>(S)",
                            "type" : "init"
                          },
                          {
                            "path" : "\/documentation\/poieticcore\/designloader\/options-swift.struct\/init(arrayliteral:)",
                            "title" : "init(arrayLiteral: Self.Element...)",
                            "type" : "init"
                          },
                          {
                            "title" : "Instance Properties",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/poieticcore\/designloader\/options-swift.struct\/isempty",
                            "title" : "var isEmpty: Bool",
                            "type" : "property"
                          },
                          {
                            "title" : "Instance Methods",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/poieticcore\/designloader\/options-swift.struct\/isdisjoint(with:)",
                            "title" : "func isDisjoint(with: Self) -> Bool",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/poieticcore\/designloader\/options-swift.struct\/isstrictsubset(of:)",
                            "title" : "func isStrictSubset(of: Self) -> Bool",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/poieticcore\/designloader\/options-swift.struct\/isstrictsuperset(of:)",
                            "title" : "func isStrictSuperset(of: Self) -> Bool",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/poieticcore\/designloader\/options-swift.struct\/issubset(of:)",
                            "title" : "func isSubset(of: Self) -> Bool",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/poieticcore\/designloader\/options-swift.struct\/issuperset(of:)",
                            "title" : "func isSuperset(of: Self) -> Bool",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/poieticcore\/designloader\/options-swift.struct\/subtract(_:)",
                            "title" : "func subtract(Self)",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/poieticcore\/designloader\/options-swift.struct\/subtracting(_:)",
                            "title" : "func subtracting(Self) -> Self",
                            "type" : "method"
                          }
                        ],
                        "path" : "\/documentation\/poieticcore\/designloader\/options-swift.struct\/setalgebra-implementations",
                        "title" : "SetAlgebra Implementations",
                        "type" : "symbol"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/designloader\/options-swift.struct",
                    "title" : "DesignLoader.Options",
                    "type" : "struct"
                  },
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/designloader\/init(metamodel:options:compatibilityversion:)",
                    "title" : "init(metamodel: Metamodel, options: DesignLoader.Options, compatibilityVersion: SemanticVersion?)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/designloader\/metamodel",
                    "title" : "let metamodel: Metamodel",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/designloader\/options-swift.property",
                    "title" : "let options: DesignLoader.Options",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/designloader\/create(_:id:snapshotid:reservation:)",
                    "title" : "func create(RawSnapshot, id: ObjectID, snapshotID: ObjectID, reservation: borrowing IdentityReservation) throws(RawSnapshotError) -> DesignObject",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/designloader\/create(snapshots:reservation:)",
                    "title" : "func create(snapshots: [RawSnapshot], reservation: borrowing IdentityReservation) throws(DesignLoaderError) -> SnapshotStorage",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/designloader\/createidentities(snapshots:with:)",
                    "title" : "func createIdentities(snapshots: [RawSnapshot], with: inout IdentityReservation) throws(DesignLoaderError)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/designloader\/load(_:)",
                    "title" : "func load(RawDesign) throws(DesignLoaderError) -> Design",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/designloader\/load(_:into:)-1o6qf",
                    "title" : "func load([RawSnapshot], into: TransientFrame) throws(DesignLoaderError)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/designloader\/load(_:into:)-6m9va",
                    "title" : "func load(RawDesign, into: TransientFrame) throws(DesignLoaderError)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/designloader\/reserveidentities(frames:with:)",
                    "title" : "func reserveIdentities(frames: [RawFrame], with: inout IdentityReservation) throws(DesignLoaderError)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/designloader\/reserveidentities(snapshots:with:)",
                    "title" : "func reserveIdentities(snapshots: [RawSnapshot], with: inout IdentityReservation) throws(DesignLoaderError)",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/designloader",
                "title" : "DesignLoader",
                "type" : "class"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/designloadererror\/brokenstructuralintegrity(_:)",
                    "title" : "case brokenStructuralIntegrity(StructuralIntegrityError)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/designloadererror\/duplicateframe(_:)",
                    "title" : "case duplicateFrame(ObjectID)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/designloadererror\/duplicatesnapshot(_:)",
                    "title" : "case duplicateSnapshot(ObjectID)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/designloadererror\/frameerror(_:_:)",
                    "title" : "case frameError(Int, RawFrameError)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/designloadererror\/missingcurrentframe",
                    "title" : "case missingCurrentFrame",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/designloadererror\/snapshoterror(_:_:)",
                    "title" : "case snapshotError(Int, RawSnapshotError)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/designloadererror\/unknownframeid(_:)",
                    "title" : "case unknownFrameID(RawObjectID)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/designloadererror\/unknownnamedreference(_:_:)",
                    "title" : "case unknownNamedReference(String, RawObjectID)",
                    "type" : "case"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/designloadererror\/description",
                    "title" : "var description: String",
                    "type" : "property"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/designloadererror\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/designloadererror\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/designloadererror\/localizeddescription",
                        "title" : "var localizedDescription: String",
                        "type" : "property"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/designloadererror\/error-implementations",
                    "title" : "Error Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/designloadererror",
                "title" : "DesignLoaderError",
                "type" : "enum"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/rawframeerror\/identityerror(_:)",
                    "title" : "case identityError(RawIdentityError)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/rawframeerror\/unknownsnapshotid(_:)",
                    "title" : "case unknownSnapshotID(RawObjectID)",
                    "type" : "case"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/rawframeerror\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/rawframeerror\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/rawframeerror\/localizeddescription",
                        "title" : "var localizedDescription: String",
                        "type" : "property"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/rawframeerror\/error-implementations",
                    "title" : "Error Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/rawframeerror",
                "title" : "RawFrameError",
                "type" : "enum"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/rawsnapshoterror\/duplicateid(_:)",
                    "title" : "case duplicateID(RawObjectID)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/rawsnapshoterror\/identityerror(_:)",
                    "title" : "case identityError(RawIdentityError)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/rawsnapshoterror\/invalidobjectid(_:)",
                    "title" : "case invalidObjectID(RawObjectID)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/rawsnapshoterror\/invalidstructuraltype",
                    "title" : "case invalidStructuralType",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/rawsnapshoterror\/missingobjecttype",
                    "title" : "case missingObjectType",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/rawsnapshoterror\/structuraltypemismatch(_:)",
                    "title" : "case structuralTypeMismatch(StructuralType)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/rawsnapshoterror\/unknownobjectid(_:)",
                    "title" : "case unknownObjectID(RawObjectID)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/rawsnapshoterror\/unknownobjecttype(_:)",
                    "title" : "case unknownObjectType(String)",
                    "type" : "case"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/rawsnapshoterror\/description",
                    "title" : "var description: String",
                    "type" : "property"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/rawsnapshoterror\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/rawsnapshoterror\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/rawsnapshoterror\/localizeddescription",
                        "title" : "var localizedDescription: String",
                        "type" : "property"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/rawsnapshoterror\/error-implementations",
                    "title" : "Error Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/rawsnapshoterror",
                "title" : "RawSnapshotError",
                "type" : "enum"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/rawidentityerror\/duplicateid(_:)",
                    "title" : "case duplicateID(RawObjectID)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/rawidentityerror\/typemismatch(_:)",
                    "title" : "case typeMismatch(RawObjectID)",
                    "type" : "case"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/rawidentityerror\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/rawidentityerror\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/rawidentityerror\/localizeddescription",
                        "title" : "var localizedDescription: String",
                        "type" : "property"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/rawidentityerror\/error-implementations",
                    "title" : "Error Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/rawidentityerror",
                "title" : "RawIdentityError",
                "type" : "enum"
              },
              {
                "children" : [
                  {
                    "title" : "Structures",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/rawdesignreadererror\/context\/==(_:_:)",
                        "title" : "static func == (RawDesignReaderError.Context, RawDesignReaderError.Context) -> Bool",
                        "type" : "op"
                      },
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/rawdesignreadererror\/context\/init(_:)",
                        "title" : "init(DecodingError.Context)",
                        "type" : "init"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/rawdesignreadererror\/context\/init(path:underlyingerror:)",
                        "title" : "init(path: [RawDesignReaderError.PathItem], underlyingError: (any Error)?)",
                        "type" : "init"
                      },
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/rawdesignreadererror\/context\/debugdescription",
                        "title" : "var debugDescription: String",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/rawdesignreadererror\/context\/path",
                        "title" : "let path: [RawDesignReaderError.PathItem]",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/rawdesignreadererror\/context\/underlyingerror",
                        "title" : "let underlyingError: (any Error)?",
                        "type" : "property"
                      },
                      {
                        "title" : "Default Implementations",
                        "type" : "groupMarker"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Operators",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/poieticcore\/rawdesignreadererror\/context\/!=(_:_:)",
                            "title" : "static func != (Self, Self) -> Bool",
                            "type" : "op"
                          }
                        ],
                        "path" : "\/documentation\/poieticcore\/rawdesignreadererror\/context\/equatable-implementations",
                        "title" : "Equatable Implementations",
                        "type" : "symbol"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/rawdesignreadererror\/context",
                    "title" : "RawDesignReaderError.Context",
                    "type" : "struct"
                  },
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/rawdesignreadererror\/cannotreaddata",
                    "title" : "case canNotReadData",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/rawdesignreadererror\/datacorrupted(_:)",
                    "title" : "case dataCorrupted(RawDesignReaderError.Context)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/rawdesignreadererror\/propertynotfound(_:_:)",
                    "title" : "case propertyNotFound(String, [String])",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/rawdesignreadererror\/typemismatch(_:_:)",
                    "title" : "case typeMismatch(String, [String])",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/rawdesignreadererror\/unknowndecodingerror(_:)",
                    "title" : "case unknownDecodingError(String)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/rawdesignreadererror\/unknownformatversion(_:)",
                    "title" : "case unknownFormatVersion(String)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/rawdesignreadererror\/valuenotfound(_:_:)",
                    "title" : "case valueNotFound(String, [String])",
                    "type" : "case"
                  },
                  {
                    "title" : "Enumerations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Enumeration Cases",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/rawdesignreadererror\/pathitem\/int(_:)",
                        "title" : "case int(Int)",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/rawdesignreadererror\/pathitem\/string(_:)",
                        "title" : "case string(String)",
                        "type" : "case"
                      },
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/rawdesignreadererror\/pathitem\/debugdescription",
                        "title" : "var debugDescription: String",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/rawdesignreadererror\/pathitem\/description",
                        "title" : "var description: String",
                        "type" : "property"
                      },
                      {
                        "title" : "Default Implementations",
                        "type" : "groupMarker"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Operators",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/poieticcore\/rawdesignreadererror\/pathitem\/!=(_:_:)",
                            "title" : "static func != (Self, Self) -> Bool",
                            "type" : "op"
                          }
                        ],
                        "path" : "\/documentation\/poieticcore\/rawdesignreadererror\/pathitem\/equatable-implementations",
                        "title" : "Equatable Implementations",
                        "type" : "symbol"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/rawdesignreadererror\/pathitem",
                    "title" : "RawDesignReaderError.PathItem",
                    "type" : "enum"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/rawdesignreadererror\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/rawdesignreadererror\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/rawdesignreadererror\/localizeddescription",
                        "title" : "var localizedDescription: String",
                        "type" : "property"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/rawdesignreadererror\/error-implementations",
                    "title" : "Error Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/rawdesignreadererror",
                "title" : "RawDesignReaderError",
                "type" : "enum"
              },
              {
                "title" : "Extracting and Writing",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/designextractor\/init()",
                    "title" : "init()",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/designextractor\/extract(_:)-4r6pm",
                    "title" : "func extract(DesignFrame) -> RawFrame",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/designextractor\/extract(_:)-52nno",
                    "title" : "func extract(DesignObject) -> RawSnapshot",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/designextractor\/extract(_:)-5ej5v",
                    "title" : "func extract(Design) -> RawDesign",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/designextractor\/extractpruning(snapshots:frame:)",
                    "title" : "func extractPruning(snapshots: [ObjectID], frame: DesignFrame) -> [RawSnapshot]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/designextractor\/extractstub(_:)",
                    "title" : "func extractStub(Design) -> RawDesign",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/designextractor",
                "title" : "DesignExtractor",
                "type" : "class"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/jsondesignwriter\/init()",
                    "title" : "init()",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/jsondesignwriter\/write(_:)",
                    "title" : "func write(RawDesign) -> Data",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/jsondesignwriter\/write(_:tourl:)",
                    "title" : "func write(RawDesign, toURL: URL) throws(RawDesignWriterError)",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/jsondesignwriter",
                "title" : "JSONDesignWriter",
                "type" : "class"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/rawdesignwritererror\/unabletowrite(_:)",
                    "title" : "case unableToWrite(URL)",
                    "type" : "case"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/rawdesignwritererror\/localizeddescription",
                        "title" : "var localizedDescription: String",
                        "type" : "property"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/rawdesignwritererror\/error-implementations",
                    "title" : "Error Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/rawdesignwritererror",
                "title" : "RawDesignWriterError",
                "type" : "enum"
              },
              {
                "title" : "Foreign Value",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variantcodingerror\/invalidpointvalue",
                    "title" : "case invalidPointValue",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variantcodingerror\/invalidvaluetypecode(_:)",
                    "title" : "case invalidValueTypeCode(String)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variantcodingerror\/invalidvariantvalue",
                    "title" : "case invalidVariantValue",
                    "type" : "case"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/variantcodingerror\/localizeddescription",
                        "title" : "var localizedDescription: String",
                        "type" : "property"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/variantcodingerror\/error-implementations",
                    "title" : "Error Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/variantcodingerror",
                "title" : "VariantCodingError",
                "type" : "enum"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignvalueerror\/invalidvalue",
                    "title" : "case invalidValue",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignvalueerror\/notconvertibletovariant",
                    "title" : "case notConvertibleToVariant",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignvalueerror\/typemismatch(_:)",
                    "title" : "case typeMismatch(String)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/foreignvalueerror\/valuenotfound",
                    "title" : "case valueNotFound",
                    "type" : "case"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/foreignvalueerror\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/foreignvalueerror\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/foreignvalueerror\/localizeddescription",
                        "title" : "var localizedDescription: String",
                        "type" : "property"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/foreignvalueerror\/error-implementations",
                    "title" : "Error Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/foreignvalueerror",
                "title" : "ForeignValueError",
                "type" : "enum"
              },
              {
                "title" : "CSV Reading and Writing",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/csvformatter\/init(options:)",
                    "title" : "init(options: CSVOptions)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/csvformatter\/options",
                    "title" : "let options: CSVOptions",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/csvformatter\/format(_:)",
                    "title" : "func format([String]) -> String",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/csvformatter\/quote(_:)",
                    "title" : "func quote(String) -> String",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/csvformatter",
                "title" : "CSVFormatter",
                "type" : "class"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/csvoptions\/init(fielddelimiter:recorddelimiter:quotecharacter:)",
                    "title" : "init(fieldDelimiter: Character, recordDelimiter: Character, quoteCharacter: Character)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/csvoptions\/fielddelimiter",
                    "title" : "let fieldDelimiter: Character",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/csvoptions\/quotecharacter",
                    "title" : "let quoteCharacter: Character",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/csvoptions\/recorddelimiter",
                    "title" : "let recordDelimiter: Character",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/csvoptions",
                "title" : "CSVOptions",
                "type" : "class"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/csvreader\/init(_:options:)",
                    "title" : "init(String, options: CSVOptions)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/csvreader\/atend",
                    "title" : "var atEnd: Bool",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/csvreader\/options",
                    "title" : "var options: CSVOptions",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/csvreader\/string",
                    "title" : "var string: String",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/csvreader\/next()",
                    "title" : "func next() -> [String]?",
                    "type" : "method"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvreader\/lazy",
                        "title" : "var lazy: LazySequence<Self>",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvreader\/publisher",
                        "title" : "var publisher: Publishers.Sequence<Self, Never>",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvreader\/underestimatedcount",
                        "title" : "var underestimatedCount: Int",
                        "type" : "property"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvreader\/allsatisfy(_:)",
                        "title" : "func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvreader\/compactmap(_:)",
                        "title" : "func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvreader\/compare(_:_:)",
                        "title" : "func compare<Comparator>(Comparator.Compared, Comparator.Compared) -> ComparisonResult",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvreader\/contains(_:)",
                        "title" : "func contains(Self.Element) -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvreader\/contains(where:)",
                        "title" : "func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvreader\/count(where:)",
                        "title" : "func count<E>(where: (Self.Element) throws(E) -> Bool) throws(E) -> Int",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvreader\/drop(while:)",
                        "title" : "func drop(while: (Self.Element) throws -> Bool) rethrows -> DropWhileSequence<Self>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvreader\/dropfirst(_:)",
                        "title" : "func dropFirst(Int) -> DropFirstSequence<Self>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvreader\/droplast(_:)",
                        "title" : "func dropLast(Int) -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvreader\/elementsequal(_:)",
                        "title" : "func elementsEqual<OtherSequence>(OtherSequence) -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvreader\/elementsequal(_:by:)",
                        "title" : "func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvreader\/enumerated()",
                        "title" : "func enumerated() -> EnumeratedSequence<Self>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvreader\/filter(_:)",
                        "title" : "func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvreader\/first(where:)",
                        "title" : "func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?",
                        "type" : "method"
                      },
                      {
                        "deprecated" : true,
                        "path" : "\/documentation\/poieticcore\/csvreader\/flatmap(_:)-418id",
                        "title" : "func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvreader\/flatmap(_:)-69gp4",
                        "title" : "func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvreader\/foreach(_:)",
                        "title" : "func forEach((Self.Element) throws -> Void) rethrows",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvreader\/formatted(_:)",
                        "title" : "func formatted<S>(S) -> S.FormatOutput",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvreader\/joined()",
                        "title" : "func joined() -> FlattenSequence<Self>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvreader\/joined(separator:)",
                        "title" : "func joined<Separator>(separator: Separator) -> JoinedSequence<Self>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvreader\/lexicographicallyprecedes(_:by:)",
                        "title" : "func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvreader\/makeiterator()",
                        "title" : "func makeIterator() -> Self",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvreader\/map(_:)",
                        "title" : "func map<T, E>((Self.Element) throws(E) -> T) throws(E) -> [T]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvreader\/max(by:)",
                        "title" : "func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvreader\/min(by:)",
                        "title" : "func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvreader\/prefix(_:)",
                        "title" : "func prefix(Int) -> PrefixSequence<Self>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvreader\/prefix(while:)",
                        "title" : "func prefix(while: (Self.Element) throws -> Bool) rethrows -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvreader\/reduce(_:_:)",
                        "title" : "func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvreader\/reduce(into:_:)",
                        "title" : "func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvreader\/reversed()",
                        "title" : "func reversed() -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvreader\/shuffled()",
                        "title" : "func shuffled() -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvreader\/shuffled(using:)",
                        "title" : "func shuffled<T>(using: inout T) -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvreader\/sorted(by:)",
                        "title" : "func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvreader\/sorted(using:)-1pwux",
                        "title" : "func sorted<Comparator>(using: Comparator) -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvreader\/sorted(using:)-6hpxr",
                        "title" : "func sorted<S, Comparator>(using: S) -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvreader\/split(maxsplits:omittingemptysubsequences:whereseparator:)",
                        "title" : "func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [ArraySlice<Self.Element>]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvreader\/split(separator:maxsplits:omittingemptysubsequences:)",
                        "title" : "func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [ArraySlice<Self.Element>]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvreader\/starts(with:)",
                        "title" : "func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvreader\/starts(with:by:)",
                        "title" : "func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvreader\/suffix(_:)",
                        "title" : "func suffix(Int) -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/csvreader\/withcontiguousstorageifavailable(_:)",
                        "title" : "func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/csvreader\/sequence-implementations",
                    "title" : "Sequence Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/csvreader",
                "title" : "CSVReader",
                "type" : "class"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/csvwriter\/init(_:formatter:)",
                    "title" : "init(FileDescriptor, formatter: CSVFormatter) throws",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/csvwriter\/init(path:formatter:)",
                    "title" : "convenience init(path: String, formatter: CSVFormatter) throws",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/csvwriter\/close()",
                    "title" : "func close() throws",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/csvwriter\/write(row:)",
                    "title" : "func write(row: [String]) throws",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/csvwriter",
                "title" : "CSVWriter",
                "type" : "class"
              },
              {
                "title" : "JSON",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/jsonvalue\/array(_:)",
                    "title" : "case array([JSONValue])",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/jsonvalue\/bool(_:)",
                    "title" : "case bool(Bool)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/jsonvalue\/float(_:)",
                    "title" : "case float(Double)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/jsonvalue\/int(_:)",
                    "title" : "case int(Int)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/jsonvalue\/null",
                    "title" : "case null",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/jsonvalue\/object(_:)",
                    "title" : "case object([String : JSONValue])",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/jsonvalue\/string(_:)",
                    "title" : "case string(String)",
                    "type" : "case"
                  },
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/jsonvalue\/init(data:)",
                    "title" : "init(data: Data) throws(JSONError)",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/jsonvalue\/init(from:)",
                    "title" : "init(from: any Decoder) throws",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/jsonvalue\/init(parsing:)",
                    "title" : "init(parsing: String) throws(JSONError)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/jsonvalue\/arrayvalue",
                    "title" : "var arrayValue: [JSONValue]?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/jsonvalue\/boolvalue",
                    "title" : "var boolValue: Bool?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/jsonvalue\/doublevalue",
                    "title" : "var doubleValue: Double?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/jsonvalue\/intvalue",
                    "title" : "var intValue: Int?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/jsonvalue\/numericvalue",
                    "title" : "var numericValue: Double?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/jsonvalue\/objectvalue",
                    "title" : "var objectValue: [String : JSONValue]?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/jsonvalue\/stringvalue",
                    "title" : "var stringValue: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/jsonvalue\/type",
                    "title" : "var type: JSONType",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/jsonvalue\/asanyvalue()",
                    "title" : "func asAnyValue() -> Any?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/jsonvalue\/data(formatting:userinfo:)",
                    "title" : "func data(formatting: JSONEncoder.OutputFormatting, userInfo: [CodingUserInfoKey : any Sendable]?) throws -> Data",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/jsonvalue\/encode(to:)",
                    "title" : "func encode(to: any Encoder) throws",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/jsonvalue\/exactdouble()",
                    "title" : "func exactDouble() -> Double?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/jsonvalue\/exactint()",
                    "title" : "func exactInt() -> Int?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/jsonvalue\/string(formatting:userinfo:)",
                    "title" : "func string(formatting: JSONEncoder.OutputFormatting, userInfo: [CodingUserInfoKey : any Sendable]?) throws -> String?",
                    "type" : "method"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/jsonvalue\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/jsonvalue\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/jsonvalue",
                "title" : "JSONValue",
                "type" : "enum"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/jsontype\/array",
                    "title" : "case array",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/jsontype\/bool",
                    "title" : "case bool",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/jsontype\/float",
                    "title" : "case float",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/jsontype\/int",
                    "title" : "case int",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/jsontype\/null",
                    "title" : "case null",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/jsontype\/object",
                    "title" : "case object",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/jsontype\/string",
                    "title" : "case string",
                    "type" : "case"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/jsontype\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/jsontype\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/jsontype",
                "title" : "JSONType",
                "type" : "enum"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/jsonerror\/datacorrupted",
                    "title" : "case dataCorrupted",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/jsonerror\/propertynotfound(_:)",
                    "title" : "case propertyNotFound(String)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/jsonerror\/typemismatch(_:_:)",
                    "title" : "case typeMismatch(JSONType, String?)",
                    "type" : "case"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/jsonerror\/description",
                    "title" : "var description: String",
                    "type" : "property"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/jsonerror\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/jsonerror\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/jsonerror\/localizeddescription",
                        "title" : "var localizedDescription: String",
                        "type" : "property"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/jsonerror\/error-implementations",
                    "title" : "Error Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/jsonerror",
                "title" : "JSONError",
                "type" : "enum"
              }
            ],
            "path" : "\/documentation\/poieticcore\/foreigninterfaces",
            "title" : "Foreign Interfaces",
            "type" : "symbol"
          },
          {
            "children" : [
              {
                "title" : "Store",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/designstore\/init(data:url:)",
                    "title" : "init(data: Data?, url: URL?)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/designstore\/data",
                    "title" : "let data: Data?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/designstore\/url",
                    "title" : "let url: URL?",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/designstore\/load(currentversion:metamodel:)",
                    "title" : "func load(currentVersion: Data, metamodel: Metamodel) throws(DesignStoreError) -> Design",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/designstore\/load(metamodel:)",
                    "title" : "func load(metamodel: Metamodel) throws(DesignStoreError) -> Design",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/designstore\/save(design:)",
                    "title" : "func save(design: Design) throws(DesignStoreError)",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/designstore",
                "title" : "DesignStore",
                "type" : "class"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/designstoreerror\/cannotopenstore(_:)",
                    "title" : "case cannotOpenStore(URL)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/designstoreerror\/datacorrupted",
                    "title" : "case dataCorrupted",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/designstoreerror\/loadingerror(_:)",
                    "title" : "case loadingError(DesignLoaderError)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/designstoreerror\/nostoreurl",
                    "title" : "case noStoreURL",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/designstoreerror\/readingerror(_:)",
                    "title" : "case readingError(RawDesignReaderError)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/designstoreerror\/unabletowrite(_:)",
                    "title" : "case unableToWrite(URL)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/designstoreerror\/unsupportedformatversion(_:)",
                    "title" : "case unsupportedFormatVersion(String)",
                    "type" : "case"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/designstoreerror\/description",
                    "title" : "var description: String",
                    "type" : "property"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/designstoreerror\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/designstoreerror\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/designstoreerror\/localizeddescription",
                        "title" : "var localizedDescription: String",
                        "type" : "property"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/designstoreerror\/error-implementations",
                    "title" : "Error Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/designstoreerror",
                "title" : "DesignStoreError",
                "type" : "enum"
              }
            ],
            "path" : "\/documentation\/poieticcore\/persistence",
            "title" : "Persistence",
            "type" : "symbol"
          },
          {
            "title" : "Others",
            "type" : "groupMarker"
          },
          {
            "children" : [
              {
                "title" : "Graph, Nodes and Edges",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Associated Types",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/graphprotocol\/edge",
                    "title" : "Edge",
                    "type" : "associatedtype"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/graphprotocol\/edgeid",
                    "title" : "EdgeID",
                    "type" : "associatedtype"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/graphprotocol\/node",
                    "title" : "Node",
                    "type" : "associatedtype"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/graphprotocol\/nodeid",
                    "title" : "NodeID",
                    "type" : "associatedtype"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "children" : [
                          {
                            "path" : "\/documentation\/poieticcore\/graphprotocol\/edgeids-9598d",
                            "title" : "var edgeIDs: [ObjectID]",
                            "type" : "property"
                          }
                        ],
                        "title" : "GraphProtocol Implementations",
                        "type" : "groupMarker"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/graphprotocol\/edgeids",
                    "title" : "var edgeIDs: [Self.EdgeID]",
                    "type" : "property"
                  },
                  {
                    "children" : [
                      {
                        "children" : [
                          {
                            "path" : "\/documentation\/poieticcore\/graphprotocol\/edges-16hah",
                            "title" : "var edges: [EdgeObject]",
                            "type" : "property"
                          }
                        ],
                        "title" : "GraphProtocol Implementations",
                        "type" : "groupMarker"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/graphprotocol\/edges",
                    "title" : "var edges: [Self.Edge]",
                    "type" : "property"
                  },
                  {
                    "children" : [
                      {
                        "children" : [
                          {
                            "path" : "\/documentation\/poieticcore\/graphprotocol\/nodeids-8d30f",
                            "title" : "var nodeIDs: [ObjectID]",
                            "type" : "property"
                          }
                        ],
                        "title" : "GraphProtocol Implementations",
                        "type" : "groupMarker"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/graphprotocol\/nodeids",
                    "title" : "var nodeIDs: [Self.NodeID]",
                    "type" : "property"
                  },
                  {
                    "children" : [
                      {
                        "children" : [
                          {
                            "path" : "\/documentation\/poieticcore\/graphprotocol\/nodes-8qpcj",
                            "title" : "var nodes: [DesignObject]",
                            "type" : "property"
                          }
                        ],
                        "title" : "GraphProtocol Implementations",
                        "type" : "groupMarker"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/graphprotocol\/nodes",
                    "title" : "var nodes: [Self.Node]",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "children" : [
                          {
                            "path" : "\/documentation\/poieticcore\/graphprotocol\/contains(edge:)-7qk6r",
                            "title" : "func contains(edge: ObjectID) -> Bool",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/poieticcore\/graphprotocol\/contains(edge:)-22qc6",
                            "title" : "func contains(edge: Self.EdgeID) -> Bool",
                            "type" : "method"
                          }
                        ],
                        "title" : "GraphProtocol Implementations",
                        "type" : "groupMarker"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/graphprotocol\/contains(edge:)",
                    "title" : "func contains(edge: Self.EdgeID) -> Bool",
                    "type" : "method"
                  },
                  {
                    "children" : [
                      {
                        "children" : [
                          {
                            "path" : "\/documentation\/poieticcore\/graphprotocol\/contains(node:)-jncq",
                            "title" : "func contains(node: ObjectID) -> Bool",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/poieticcore\/graphprotocol\/contains(node:)-63291",
                            "title" : "func contains(node: Self.NodeID) -> Bool",
                            "type" : "method"
                          }
                        ],
                        "title" : "GraphProtocol Implementations",
                        "type" : "groupMarker"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/graphprotocol\/contains(node:)",
                    "title" : "func contains(node: Self.NodeID) -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/graphprotocol\/cycles()",
                    "title" : "func cycles() -> [Self.Edge]",
                    "type" : "method"
                  },
                  {
                    "children" : [
                      {
                        "children" : [
                          {
                            "path" : "\/documentation\/poieticcore\/graphprotocol\/edge(_:)-4yy7h",
                            "title" : "func edge(ObjectID) -> Self.Edge",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/poieticcore\/graphprotocol\/edge(_:)-2md5",
                            "title" : "func edge(Self.EdgeID) -> Self.Edge",
                            "type" : "method"
                          }
                        ],
                        "title" : "GraphProtocol Implementations",
                        "type" : "groupMarker"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/graphprotocol\/edge(_:)",
                    "title" : "func edge(Self.EdgeID) -> Self.Edge",
                    "type" : "method"
                  },
                  {
                    "children" : [
                      {
                        "children" : [
                          {
                            "path" : "\/documentation\/poieticcore\/graphprotocol\/incoming(_:)-gsqj",
                            "title" : "func incoming(Self.NodeID) -> [Self.Edge]",
                            "type" : "method"
                          }
                        ],
                        "title" : "GraphProtocol Implementations",
                        "type" : "groupMarker"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/graphprotocol\/incoming(_:)",
                    "title" : "func incoming(Self.NodeID) -> [Self.Edge]",
                    "type" : "method"
                  },
                  {
                    "children" : [
                      {
                        "children" : [
                          {
                            "path" : "\/documentation\/poieticcore\/graphprotocol\/node(_:)-6sc7k",
                            "title" : "func node(ObjectID) -> Self.Node",
                            "type" : "method"
                          },
                          {
                            "path" : "\/documentation\/poieticcore\/graphprotocol\/node(_:)-9hxk3",
                            "title" : "func node(Self.NodeID) -> Self.Node",
                            "type" : "method"
                          }
                        ],
                        "title" : "GraphProtocol Implementations",
                        "type" : "groupMarker"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/graphprotocol\/node(_:)",
                    "title" : "func node(Self.NodeID) -> Self.Node",
                    "type" : "method"
                  },
                  {
                    "children" : [
                      {
                        "children" : [
                          {
                            "path" : "\/documentation\/poieticcore\/graphprotocol\/outgoing(_:)-8ri7n",
                            "title" : "func outgoing(Self.NodeID) -> [Self.Edge]",
                            "type" : "method"
                          }
                        ],
                        "title" : "GraphProtocol Implementations",
                        "type" : "groupMarker"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/graphprotocol\/outgoing(_:)",
                    "title" : "func outgoing(Self.NodeID) -> [Self.Edge]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/graphprotocol\/topologicalsort()",
                    "title" : "func topologicalSort() -> [Self.NodeID]?",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/graphprotocol",
                "title" : "GraphProtocol",
                "type" : "protocol"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/graph\/init(nodes:edges:)",
                    "title" : "init(nodes: [Node], edges: [Edge])",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/graph\/edgeids",
                    "title" : "var edgeIDs: [Graph<Node, Edge>.EdgeID]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/graph\/edges",
                    "title" : "var edges: [Edge]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/graph\/nodeids",
                    "title" : "var nodeIDs: [Node.ID]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/graph\/nodes",
                    "title" : "var nodes: [Node]",
                    "type" : "property"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/graph\/cycles()",
                        "title" : "func cycles() -> [Self.Edge]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/graph\/incoming(_:)",
                        "title" : "func incoming(Self.NodeID) -> [Self.Edge]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/graph\/outgoing(_:)",
                        "title" : "func outgoing(Self.NodeID) -> [Self.Edge]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/graph\/topologicalsort()",
                        "title" : "func topologicalSort() -> [Self.NodeID]?",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/graph\/graphprotocol-implementations",
                    "title" : "GraphProtocol Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/graph",
                "title" : "Graph",
                "type" : "struct"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/edgeobject\/init(_:in:)",
                    "title" : "init?(DesignObject, in: some Frame)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/edgeobject\/id",
                    "title" : "var id: ObjectID",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/edgeobject\/object",
                    "title" : "let object: DesignObject",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/edgeobject\/origin",
                    "title" : "var origin: ObjectID",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/edgeobject\/originobject",
                    "title" : "let originObject: DesignObject",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/edgeobject\/target",
                    "title" : "var target: ObjectID",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/edgeobject\/targetobject",
                    "title" : "let targetObject: DesignObject",
                    "type" : "property"
                  },
                  {
                    "title" : "Type Aliases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/edgeobject\/nodeid",
                    "title" : "EdgeObject.NodeID",
                    "type" : "typealias"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/edgeobject",
                "title" : "EdgeObject",
                "type" : "struct"
              },
              {
                "children" : [
                  {
                    "title" : "Associated Types",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/edgeprotocol\/nodeid",
                    "title" : "NodeID",
                    "type" : "associatedtype"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/edgeprotocol\/origin",
                    "title" : "var origin: Self.NodeID",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/edgeprotocol\/target",
                    "title" : "var target: Self.NodeID",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/edgeprotocol",
                "title" : "EdgeProtocol",
                "type" : "protocol"
              },
              {
                "title" : "Neighbourhoods",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/edgedirection\/incoming",
                    "title" : "case incoming",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/edgedirection\/outgoing",
                    "title" : "case outgoing",
                    "type" : "case"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/edgedirection\/description",
                    "title" : "var description: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/edgedirection\/reversed",
                    "title" : "var reversed: EdgeDirection",
                    "type" : "property"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/edgedirection\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/edgedirection\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/edgedirection",
                "title" : "EdgeDirection",
                "type" : "enum"
              }
            ],
            "path" : "\/documentation\/poieticcore\/graphs",
            "title" : "Graph",
            "type" : "symbol"
          },
          {
            "children" : [
              {
                "title" : "Arithmetic Expression",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/arithmeticexpression\/binary(_:_:_:)",
                    "title" : "case binary(ArithmeticExpression<V, F>.FunctionReference, ArithmeticExpression<V, F>, ArithmeticExpression<V, F>)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/arithmeticexpression\/function(_:_:)",
                    "title" : "case function(ArithmeticExpression<V, F>.FunctionReference, [ArithmeticExpression<V, F>])",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/arithmeticexpression\/unary(_:_:)",
                    "title" : "case unary(ArithmeticExpression<V, F>.FunctionReference, ArithmeticExpression<V, F>)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/arithmeticexpression\/value(_:)",
                    "title" : "case value(ArithmeticExpression<V, F>.LiteralValue)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/arithmeticexpression\/variable(_:)",
                    "title" : "case variable(ArithmeticExpression<V, F>.VariableReference)",
                    "type" : "case"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/arithmeticexpression\/allvariables",
                    "title" : "var allVariables: [ArithmeticExpression<V, F>.VariableReference]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/arithmeticexpression\/children",
                    "title" : "var children: [ArithmeticExpression<V, F>]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/arithmeticexpression\/description",
                    "title" : "var description: String",
                    "type" : "property"
                  },
                  {
                    "title" : "Type Aliases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/arithmeticexpression\/functionreference",
                    "title" : "ArithmeticExpression.FunctionReference",
                    "type" : "typealias"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/arithmeticexpression\/literalvalue",
                    "title" : "ArithmeticExpression.LiteralValue",
                    "type" : "typealias"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/arithmeticexpression\/variablereference",
                    "title" : "ArithmeticExpression.VariableReference",
                    "type" : "typealias"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/arithmeticexpression\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/arithmeticexpression\/==(_:_:)",
                        "title" : "static func == (ArithmeticExpression<V, F>, ArithmeticExpression<V, F>) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/arithmeticexpression\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/arithmeticexpression",
                "title" : "ArithmeticExpression",
                "type" : "enum"
              },
              {
                "path" : "\/documentation\/poieticcore\/unboundexpression",
                "title" : "UnboundExpression",
                "type" : "typealias"
              },
              {
                "title" : "Functions",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/function\/init(booleanvariadic:body:)",
                    "title" : "convenience init(booleanVariadic: String, body: ([Bool]) -> Bool)",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/function\/init(comparison:body:)",
                    "title" : "convenience init(comparison: String, body: (Variant, Variant) throws(FunctionError) -> Bool)",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/function\/init(name:signature:body:)",
                    "title" : "init(name: String, signature: Signature, body: Function.Body)",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/function\/init(numericbinary:leftname:rightname:body:)",
                    "title" : "convenience init(numericBinary: String, leftName: String, rightName: String, body: (Double, Double) -> Double)",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/function\/init(numericunary:argumentname:body:)",
                    "title" : "convenience init(numericUnary: String, argumentName: String, body: (Double) -> Double)",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/function\/init(numericvariadic:body:)",
                    "title" : "convenience init(numericVariadic: String, body: ([Double]) -> Double)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/function\/apply",
                    "title" : "let apply: Function.Body",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/function\/description",
                    "title" : "var description: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/function\/name",
                    "title" : "let name: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/function\/signature",
                    "title" : "let signature: Signature",
                    "type" : "property"
                  },
                  {
                    "title" : "Type Aliases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/function\/body",
                    "title" : "Function.Body",
                    "type" : "typealias"
                  },
                  {
                    "title" : "Type Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/function\/booleanand",
                    "title" : "static let BooleanAnd: Function",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/function\/booleanfunctions",
                    "title" : "static let BooleanFunctions: [Function]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/function\/booleannot",
                    "title" : "static let BooleanNot: Function",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/function\/booleanor",
                    "title" : "static let BooleanOr: Function",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/function\/comparisonoperators",
                    "title" : "static let ComparisonOperators: [Function]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/function\/greaterorequal",
                    "title" : "static let GreaterOrEqual: Function",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/function\/greaterthan",
                    "title" : "static let GreaterThan: Function",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/function\/iffunction",
                    "title" : "static let IfFunction: Function",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/function\/isequal",
                    "title" : "static let IsEqual: Function",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/function\/isnotequal",
                    "title" : "static let IsNotEqual: Function",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/function\/lessorequal",
                    "title" : "static let LessOrEqual: Function",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/function\/lessthan",
                    "title" : "static let LessThan: Function",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/function",
                "title" : "Function",
                "type" : "class"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/signature\/init(_:variadic:returns:)",
                    "title" : "init([FunctionArgument], variadic: FunctionArgument?, returns: ValueType)",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/signature\/init(numeric:)",
                    "title" : "convenience init(numeric: [String])",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/signature\/init(numericvariadic:)",
                    "title" : "convenience init(numericVariadic: String)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/signature\/description",
                    "title" : "var description: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/signature\/isvariadic",
                    "title" : "var isVariadic: Bool",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/signature\/minimalargumentcount",
                    "title" : "var minimalArgumentCount: Int",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/signature\/positional",
                    "title" : "let positional: [FunctionArgument]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/signature\/returntype",
                    "title" : "let returnType: ValueType",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/signature\/variadic",
                    "title" : "let variadic: FunctionArgument?",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/signature\/validate(_:)",
                    "title" : "func validate([ValueType]) -> Signature.ValidationResult",
                    "type" : "method"
                  },
                  {
                    "title" : "Type Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/signature\/numericunary",
                    "title" : "static let NumericUnary: Signature",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/signature\/numericvariadic",
                    "title" : "static let NumericVariadic: Signature",
                    "type" : "property"
                  },
                  {
                    "title" : "Enumerations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Enumeration Cases",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/signature\/validationresult\/invalidnumberofarguments",
                        "title" : "case invalidNumberOfArguments",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/signature\/validationresult\/ok",
                        "title" : "case ok",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/signature\/validationresult\/typemismatch(_:)",
                        "title" : "case typeMismatch([Int])",
                        "type" : "case"
                      },
                      {
                        "title" : "Default Implementations",
                        "type" : "groupMarker"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Operators",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/poieticcore\/signature\/validationresult\/!=(_:_:)",
                            "title" : "static func != (Self, Self) -> Bool",
                            "type" : "op"
                          }
                        ],
                        "path" : "\/documentation\/poieticcore\/signature\/validationresult\/equatable-implementations",
                        "title" : "Equatable Implementations",
                        "type" : "symbol"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/signature\/validationresult",
                    "title" : "Signature.ValidationResult",
                    "type" : "enum"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/signature",
                "title" : "Signature",
                "type" : "class"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/functionargument\/init(_:type:isconstant:)",
                    "title" : "init(String, type: VariableType, isConstant: Bool)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/functionargument\/isconstant",
                    "title" : "let isConstant: Bool",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/functionargument\/name",
                    "title" : "let name: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/functionargument\/type",
                    "title" : "let type: VariableType",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/functionargument",
                "title" : "FunctionArgument",
                "type" : "struct"
              },
              {
                "title" : "Parsing",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/expressionparser\/init(lexer:)",
                    "title" : "init(lexer: ExpressionLexer)",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/expressionparser\/init(string:)",
                    "title" : "convenience init(string: String)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/expressionparser\/parse()",
                    "title" : "func parse() throws(ExpressionSyntaxError) -> UnboundExpression",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/expressionparser",
                "title" : "ExpressionParser",
                "type" : "class"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/textlocation\/init(line:column:index:)",
                    "title" : "init(line: Int, column: Int, index: String.Index)",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/textlocation\/init(string:index:)",
                    "title" : "init(string: String, index: String.Index)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/textlocation\/column",
                    "title" : "var column: Int",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/textlocation\/description",
                    "title" : "var description: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/textlocation\/index",
                    "title" : "var index: String.Index",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/textlocation\/line",
                    "title" : "var line: Int",
                    "type" : "property"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/textlocation\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/textlocation\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/textlocation",
                "title" : "TextLocation",
                "type" : "struct"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/expressionlexer\/init(string:)",
                    "title" : "init(string: String)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/expressionlexer\/atend",
                    "title" : "var atEnd: Bool",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/expressionlexer\/source",
                    "title" : "let source: String",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/expressionlexer",
                "title" : "ExpressionLexer",
                "type" : "struct"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/expressiontoken\/init(type:source:range:)",
                    "title" : "init(type: ExpressionToken.TokenType, source: String, range: Range<String.Index>)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/expressiontoken\/range",
                    "title" : "let range: Range<String.Index>",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/expressiontoken\/source",
                    "title" : "let source: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/expressiontoken\/text",
                    "title" : "var text: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/expressiontoken\/textlocation",
                    "title" : "var textLocation: TextLocation",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/expressiontoken\/type",
                    "title" : "let type: ExpressionToken.TokenType",
                    "type" : "property"
                  },
                  {
                    "title" : "Enumerations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Enumeration Cases",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/expressiontoken\/tokentype\/comma",
                        "title" : "case comma",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/expressiontoken\/tokentype\/empty",
                        "title" : "case empty",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/expressiontoken\/tokentype\/error(_:)",
                        "title" : "case error(ExpressionSyntaxError)",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/expressiontoken\/tokentype\/float",
                        "title" : "case float",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/expressiontoken\/tokentype\/identifier",
                        "title" : "case identifier",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/expressiontoken\/tokentype\/int",
                        "title" : "case int",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/expressiontoken\/tokentype\/leftparen",
                        "title" : "case leftParen",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/expressiontoken\/tokentype\/operator",
                        "title" : "case `operator`",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/expressiontoken\/tokentype\/rightparen",
                        "title" : "case rightParen",
                        "type" : "case"
                      },
                      {
                        "title" : "Default Implementations",
                        "type" : "groupMarker"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Operators",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/poieticcore\/expressiontoken\/tokentype\/!=(_:_:)",
                            "title" : "static func != (Self, Self) -> Bool",
                            "type" : "op"
                          }
                        ],
                        "path" : "\/documentation\/poieticcore\/expressiontoken\/tokentype\/equatable-implementations",
                        "title" : "Equatable Implementations",
                        "type" : "symbol"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/expressiontoken\/tokentype",
                    "title" : "ExpressionToken.TokenType",
                    "type" : "enum"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/expressiontoken",
                "title" : "ExpressionToken",
                "type" : "struct"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/expressionsyntaxerror\/expressionexpected",
                    "title" : "case expressionExpected",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/expressionsyntaxerror\/invalidcharacterinnumber",
                    "title" : "case invalidCharacterInNumber",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/expressionsyntaxerror\/missingrightparenthesis",
                    "title" : "case missingRightParenthesis",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/expressionsyntaxerror\/numberexpected",
                    "title" : "case numberExpected",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/expressionsyntaxerror\/unexpectedcharacter",
                    "title" : "case unexpectedCharacter",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/expressionsyntaxerror\/unexpectedtoken",
                    "title" : "case unexpectedToken",
                    "type" : "case"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/expressionsyntaxerror\/description",
                    "title" : "var description: String",
                    "type" : "property"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/expressionsyntaxerror\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/expressionsyntaxerror\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/expressionsyntaxerror\/localizeddescription",
                        "title" : "var localizedDescription: String",
                        "type" : "property"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/expressionsyntaxerror\/error-implementations",
                    "title" : "Error Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/expressionsyntaxerror",
                "title" : "ExpressionSyntaxError",
                "type" : "enum"
              },
              {
                "title" : "Abstract Syntax Tree",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/expressionast\/binaryoperator(operator:left:right:)",
                    "title" : "case binaryOperator(operator: ExpressionToken, left: ExpressionAST, right: ExpressionAST)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/expressionast\/doubleliteral(_:)",
                    "title" : "case doubleLiteral(ExpressionToken)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/expressionast\/functionargument(argument:comma:)",
                    "title" : "case functionArgument(argument: ExpressionAST, comma: ExpressionToken?)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/expressionast\/functioncall(name:arguments:openparen:closeparen:)",
                    "title" : "case functionCall(name: ExpressionToken, arguments: [ExpressionAST], openParen: ExpressionToken, closeParen: ExpressionToken)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/expressionast\/intliteral(_:)",
                    "title" : "case intLiteral(ExpressionToken)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/expressionast\/parenthesis(expression:openparen:closeparen:)",
                    "title" : "case parenthesis(expression: ExpressionAST, openParen: ExpressionToken, closeParen: ExpressionToken)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/expressionast\/unaryoperator(operator:operand:)",
                    "title" : "case unaryOperator(operator: ExpressionToken, operand: ExpressionAST)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/expressionast\/variable(_:)",
                    "title" : "case variable(ExpressionToken)",
                    "type" : "case"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/expressionast\/fulltext",
                    "title" : "var fullText: String",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/expressionast\/toexpression()",
                    "title" : "func toExpression() -> UnboundExpression",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/expressionast",
                "title" : "ExpressionAST",
                "type" : "enum"
              }
            ],
            "path" : "\/documentation\/poieticcore\/formulas",
            "title" : "Formulas",
            "type" : "symbol"
          },
          {
            "children" : [
              {
                "title" : "Types",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/runtimecontext\/init(frame:)",
                    "title" : "init(frame: any Frame)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/runtimecontext\/frame",
                    "title" : "let frame: any Frame",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/runtimecontext\/hasissues",
                    "title" : "var hasIssues: Bool",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/runtimecontext\/issues",
                    "title" : "var issues: [ObjectID : [any Error]]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/runtimecontext\/objectcomponents",
                    "title" : "var objectComponents: [ObjectID : ComponentSet]",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/runtimecontext\/appendissue(_:for:)",
                    "title" : "func appendIssue(any Error, for: ObjectID)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/runtimecontext\/component(for:)",
                    "title" : "func component<T>(for: ObjectID) -> T?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/runtimecontext\/setcomponent(_:for:)",
                    "title" : "func setComponent<T>(T, for: ObjectID)",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/runtimecontext",
                "title" : "RuntimeContext",
                "type" : "class"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/runtimesystem\/update(_:)",
                    "title" : "func update(RuntimeContext)",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/runtimesystem",
                "title" : "RuntimeSystem",
                "type" : "protocol"
              },
              {
                "path" : "\/documentation\/poieticcore\/component",
                "title" : "Component",
                "type" : "protocol"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/componentset\/init(_:)",
                    "title" : "init([any Component])",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/componentset\/count",
                    "title" : "var count: Int",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/componentset\/has(_:)",
                    "title" : "func has(any Component.Type) -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/componentset\/remove(_:)",
                    "title" : "func remove(any Component.Type)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/componentset\/removeall()",
                    "title" : "func removeAll()",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/componentset\/set(_:)-5rqbo",
                    "title" : "func set(any Component)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/componentset\/set(_:)-7o58e",
                    "title" : "func set([any Component])",
                    "type" : "method"
                  },
                  {
                    "title" : "Subscripts",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/componentset\/subscript(_:)-5d8h6",
                    "title" : "subscript<T>(T.Type) -> T?",
                    "type" : "subscript"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/componentset\/subscript(_:)-7cqju",
                    "title" : "subscript(any Component.Type) -> (any Component)?",
                    "type" : "subscript"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/endindex",
                        "title" : "var endIndex: ComponentSet.Index",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/first",
                        "title" : "var first: Self.Element?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/indices",
                        "title" : "var indices: DefaultIndices<Self>",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/isempty",
                        "title" : "var isEmpty: Bool",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/startindex",
                        "title" : "var startIndex: ComponentSet.Index",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/underestimatedcount",
                        "title" : "var underestimatedCount: Int",
                        "type" : "property"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/distance(from:to:)",
                        "title" : "func distance(from: Self.Index, to: Self.Index) -> Int",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/drop(while:)",
                        "title" : "func drop(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/dropfirst(_:)",
                        "title" : "func dropFirst(Int) -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/droplast(_:)",
                        "title" : "func dropLast(Int) -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/firstindex(where:)",
                        "title" : "func firstIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/formindex(_:offsetby:)",
                        "title" : "func formIndex(inout Self.Index, offsetBy: Int)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/formindex(_:offsetby:limitedby:)",
                        "title" : "func formIndex(inout Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/formindex(after:)",
                        "title" : "func formIndex(after: inout Self.Index)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/index(_:offsetby:)",
                        "title" : "func index(Self.Index, offsetBy: Int) -> Self.Index",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/index(_:offsetby:limitedby:)",
                        "title" : "func index(Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Self.Index?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/index(after:)",
                        "title" : "func index(after: ComponentSet.Index) -> ComponentSet.Index",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/indices(where:)",
                        "title" : "func indices(where: (Self.Element) throws -> Bool) rethrows -> RangeSet<Self.Index>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/makeiterator()",
                        "title" : "func makeIterator() -> IndexingIterator<Self>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/map(_:)-72p9i",
                        "title" : "func map<T, E>((Self.Element) throws(E) -> T) throws(E) -> [T]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/prefix(_:)",
                        "title" : "func prefix(Int) -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/prefix(through:)",
                        "title" : "func prefix(through: Self.Index) -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/prefix(upto:)",
                        "title" : "func prefix(upTo: Self.Index) -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/prefix(while:)",
                        "title" : "func prefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/randomelement()",
                        "title" : "func randomElement() -> Self.Element?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/randomelement(using:)",
                        "title" : "func randomElement<T>(using: inout T) -> Self.Element?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/removingsubranges(_:)",
                        "title" : "func removingSubranges(RangeSet<Self.Index>) -> DiscontiguousSlice<Self>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/split(maxsplits:omittingemptysubsequences:whereseparator:)",
                        "title" : "func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [Self.SubSequence]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/suffix(_:)",
                        "title" : "func suffix(Int) -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/suffix(from:)",
                        "title" : "func suffix(from: Self.Index) -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/trimmingprefix(while:)",
                        "title" : "func trimmingPrefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "title" : "Subscripts",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/subscript(_:)-4rn2g",
                        "title" : "subscript<R>(R) -> Self.SubSequence",
                        "type" : "subscript"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/subscript(_:)-62pt4",
                        "title" : "subscript(Range<Self.Index>) -> Slice<Self>",
                        "type" : "subscript"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/subscript(_:)-6ytl5",
                        "title" : "subscript(RangeSet<Self.Index>) -> DiscontiguousSlice<Self>",
                        "type" : "subscript"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/subscript(_:)-9nfo4",
                        "title" : "subscript((UnboundedRange_) -> ()) -> Self.SubSequence",
                        "type" : "subscript"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/subscript(_:)-9xnhm",
                        "title" : "subscript(ComponentSet.Index) -> any Component",
                        "type" : "subscript"
                      },
                      {
                        "title" : "Type Aliases",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/index",
                        "title" : "ComponentSet.Index",
                        "type" : "typealias"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/componentset\/collection-implementations",
                    "title" : "Collection Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/init(arrayliteral:)",
                        "title" : "init(arrayLiteral: any ComponentSet.ArrayLiteralElement...)",
                        "type" : "init"
                      },
                      {
                        "title" : "Type Aliases",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/arrayliteralelement",
                        "title" : "ComponentSet.ArrayLiteralElement",
                        "type" : "typealias"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/componentset\/expressiblebyarrayliteral-implementations",
                    "title" : "ExpressibleByArrayLiteral Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/lazy",
                        "title" : "var lazy: LazySequence<Self>",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/publisher",
                        "title" : "var publisher: Publishers.Sequence<Self, Never>",
                        "type" : "property"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/allsatisfy(_:)",
                        "title" : "func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/compactmap(_:)",
                        "title" : "func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/compare(_:_:)",
                        "title" : "func compare<Comparator>(Comparator.Compared, Comparator.Compared) -> ComparisonResult",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/contains(where:)",
                        "title" : "func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/count(where:)",
                        "title" : "func count<E>(where: (Self.Element) throws(E) -> Bool) throws(E) -> Int",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/elementsequal(_:by:)",
                        "title" : "func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/enumerated()",
                        "title" : "func enumerated() -> EnumeratedSequence<Self>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/filter(_:)",
                        "title" : "func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/first(where:)",
                        "title" : "func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/flatmap(_:)-4lcj",
                        "title" : "func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]",
                        "type" : "method"
                      },
                      {
                        "deprecated" : true,
                        "path" : "\/documentation\/poieticcore\/componentset\/flatmap(_:)-5cxck",
                        "title" : "func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/foreach(_:)",
                        "title" : "func forEach((Self.Element) throws -> Void) rethrows",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/formatted(_:)",
                        "title" : "func formatted<S>(S) -> S.FormatOutput",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/lexicographicallyprecedes(_:by:)",
                        "title" : "func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/map(_:)-286dx",
                        "title" : "func map<T, E>((Self.Element) throws(E) -> T) throws(E) -> [T]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/max(by:)",
                        "title" : "func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/min(by:)",
                        "title" : "func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/reduce(_:_:)",
                        "title" : "func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/reduce(into:_:)",
                        "title" : "func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/reversed()",
                        "title" : "func reversed() -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/shuffled()",
                        "title" : "func shuffled() -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/shuffled(using:)",
                        "title" : "func shuffled<T>(using: inout T) -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/sorted(by:)",
                        "title" : "func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/sorted(using:)-14mv4",
                        "title" : "func sorted<Comparator>(using: Comparator) -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/sorted(using:)-8ong7",
                        "title" : "func sorted<S, Comparator>(using: S) -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/starts(with:by:)",
                        "title" : "func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/componentset\/withcontiguousstorageifavailable(_:)",
                        "title" : "func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/componentset\/sequence-implementations",
                    "title" : "Sequence Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/componentset",
                "title" : "ComponentSet",
                "type" : "struct"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/issuelistcomponent\/init(errors:)",
                    "title" : "init(errors: [any Error])",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/issuelistcomponent\/errors",
                    "title" : "var errors: [any Error]",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/issuelistcomponent\/append(_:)",
                    "title" : "func append(any Error)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/issuelistcomponent\/removeall()",
                    "title" : "func removeAll()",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/issuelistcomponent",
                "title" : "IssueListComponent",
                "type" : "struct"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/orderedset\/init()",
                    "title" : "init()",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/orderedset\/init(_:)",
                    "title" : "init([OrderedSet<T>.Item])",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/orderedset\/isempty",
                    "title" : "var isEmpty: Bool",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/orderedset\/add(_:)",
                    "title" : "func add(OrderedSet<T>.Item)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/orderedset\/contains(_:)",
                    "title" : "func contains(OrderedSet<T>.Item) -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/orderedset\/remove(_:)",
                    "title" : "func remove(OrderedSet<T>.Item)",
                    "type" : "method"
                  },
                  {
                    "title" : "Type Aliases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/orderedset\/index",
                    "title" : "OrderedSet.Index",
                    "type" : "typealias"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/orderedset\/item",
                    "title" : "OrderedSet.Item",
                    "type" : "typealias"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/count",
                        "title" : "var count: Int",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/endindex",
                        "title" : "var endIndex: OrderedSet<T>.Index",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/first",
                        "title" : "var first: Self.Element?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/indices",
                        "title" : "var indices: DefaultIndices<Self>",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/startindex",
                        "title" : "var startIndex: OrderedSet<T>.Index",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/underestimatedcount",
                        "title" : "var underestimatedCount: Int",
                        "type" : "property"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/distance(from:to:)",
                        "title" : "func distance(from: Self.Index, to: Self.Index) -> Int",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/drop(while:)",
                        "title" : "func drop(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/dropfirst(_:)",
                        "title" : "func dropFirst(Int) -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/droplast(_:)",
                        "title" : "func dropLast(Int) -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/firstindex(of:)",
                        "title" : "func firstIndex(of: Self.Element) -> Self.Index?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/firstindex(where:)",
                        "title" : "func firstIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/firstrange(of:)",
                        "title" : "func firstRange<C>(of: C) -> Range<Self.Index>?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/formindex(_:offsetby:)",
                        "title" : "func formIndex(inout Self.Index, offsetBy: Int)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/formindex(_:offsetby:limitedby:)",
                        "title" : "func formIndex(inout Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/formindex(after:)",
                        "title" : "func formIndex(after: inout Self.Index)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/index(_:offsetby:)",
                        "title" : "func index(Self.Index, offsetBy: Int) -> Self.Index",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/index(_:offsetby:limitedby:)",
                        "title" : "func index(Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Self.Index?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/index(after:)",
                        "title" : "func index(after: OrderedSet<T>.Index) -> OrderedSet<T>.Index",
                        "type" : "method"
                      },
                      {
                        "deprecated" : true,
                        "path" : "\/documentation\/poieticcore\/orderedset\/index(of:)",
                        "title" : "func index(of: Self.Element) -> Self.Index?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/indices(of:)",
                        "title" : "func indices(of: Self.Element) -> RangeSet<Self.Index>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/indices(where:)",
                        "title" : "func indices(where: (Self.Element) throws -> Bool) rethrows -> RangeSet<Self.Index>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/makeiterator()",
                        "title" : "func makeIterator() -> IndexingIterator<Self>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/map(_:)-157y7",
                        "title" : "func map<T, E>((Self.Element) throws(E) -> T) throws(E) -> [T]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/prefix(_:)",
                        "title" : "func prefix(Int) -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/prefix(through:)",
                        "title" : "func prefix(through: Self.Index) -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/prefix(upto:)",
                        "title" : "func prefix(upTo: Self.Index) -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/prefix(while:)",
                        "title" : "func prefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/randomelement()",
                        "title" : "func randomElement() -> Self.Element?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/randomelement(using:)",
                        "title" : "func randomElement<T>(using: inout T) -> Self.Element?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/ranges(of:)",
                        "title" : "func ranges<C>(of: C) -> [Range<Self.Index>]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/removingsubranges(_:)",
                        "title" : "func removingSubranges(RangeSet<Self.Index>) -> DiscontiguousSlice<Self>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/split(maxsplits:omittingemptysubsequences:whereseparator:)",
                        "title" : "func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [Self.SubSequence]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/split(separator:maxsplits:omittingemptysubsequences:)",
                        "title" : "func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [Self.SubSequence]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/suffix(_:)",
                        "title" : "func suffix(Int) -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/suffix(from:)",
                        "title" : "func suffix(from: Self.Index) -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/trimmingprefix(_:)",
                        "title" : "func trimmingPrefix<Prefix>(Prefix) -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/trimmingprefix(while:)",
                        "title" : "func trimmingPrefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "title" : "Subscripts",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/subscript(_:)",
                        "title" : "subscript(OrderedSet<T>.Index) -> OrderedSet<T>.Item",
                        "type" : "subscript"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/orderedset\/collection-implementations",
                    "title" : "Collection Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/orderedset\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/init(arrayliteral:)",
                        "title" : "init(arrayLiteral: T...)",
                        "type" : "init"
                      },
                      {
                        "title" : "Type Aliases",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/arrayliteralelement",
                        "title" : "OrderedSet.ArrayLiteralElement",
                        "type" : "typealias"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/orderedset\/expressiblebyarrayliteral-implementations",
                    "title" : "ExpressibleByArrayLiteral Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/lazy",
                        "title" : "var lazy: LazySequence<Self>",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/publisher",
                        "title" : "var publisher: Publishers.Sequence<Self, Never>",
                        "type" : "property"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/allsatisfy(_:)",
                        "title" : "func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/compactmap(_:)",
                        "title" : "func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/compare(_:_:)",
                        "title" : "func compare<Comparator>(Comparator.Compared, Comparator.Compared) -> ComparisonResult",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/contains(where:)",
                        "title" : "func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/count(where:)",
                        "title" : "func count<E>(where: (Self.Element) throws(E) -> Bool) throws(E) -> Int",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/elementsequal(_:)",
                        "title" : "func elementsEqual<OtherSequence>(OtherSequence) -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/elementsequal(_:by:)",
                        "title" : "func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/enumerated()",
                        "title" : "func enumerated() -> EnumeratedSequence<Self>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/filter(_:)",
                        "title" : "func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/first(where:)",
                        "title" : "func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/flatmap(_:)-5l690",
                        "title" : "func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]",
                        "type" : "method"
                      },
                      {
                        "deprecated" : true,
                        "path" : "\/documentation\/poieticcore\/orderedset\/flatmap(_:)-8dgje",
                        "title" : "func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/foreach(_:)",
                        "title" : "func forEach((Self.Element) throws -> Void) rethrows",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/formatted()",
                        "title" : "func formatted() -> String",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/formatted(_:)",
                        "title" : "func formatted<S>(S) -> S.FormatOutput",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/joined()",
                        "title" : "func joined() -> FlattenSequence<Self>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/joined(separator:)-2mfau",
                        "title" : "func joined<Separator>(separator: Separator) -> JoinedSequence<Self>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/joined(separator:)-4u7hg",
                        "title" : "func joined(separator: String) -> String",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/lexicographicallyprecedes(_:)",
                        "title" : "func lexicographicallyPrecedes<OtherSequence>(OtherSequence) -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/lexicographicallyprecedes(_:by:)",
                        "title" : "func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/map(_:)-zujt",
                        "title" : "func map<T, E>((Self.Element) throws(E) -> T) throws(E) -> [T]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/max()",
                        "title" : "func max() -> Self.Element?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/max(by:)",
                        "title" : "func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/min()",
                        "title" : "func min() -> Self.Element?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/min(by:)",
                        "title" : "func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/reduce(_:_:)",
                        "title" : "func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/reduce(into:_:)",
                        "title" : "func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/reversed()",
                        "title" : "func reversed() -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/shuffled()",
                        "title" : "func shuffled() -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/shuffled(using:)",
                        "title" : "func shuffled<T>(using: inout T) -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/sorted()",
                        "title" : "func sorted() -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/sorted(by:)",
                        "title" : "func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/sorted(using:)-218pn",
                        "title" : "func sorted<Comparator>(using: Comparator) -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/sorted(using:)-7tm2s",
                        "title" : "func sorted<S, Comparator>(using: S) -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/starts(with:)",
                        "title" : "func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/starts(with:by:)",
                        "title" : "func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/orderedset\/withcontiguousstorageifavailable(_:)",
                        "title" : "func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/orderedset\/sequence-implementations",
                    "title" : "Sequence Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/orderedset",
                "title" : "OrderedSet",
                "type" : "struct"
              }
            ],
            "path" : "\/documentation\/poieticcore\/runtime",
            "title" : "Runtime",
            "type" : "symbol"
          },
          {
            "title" : "Classes",
            "type" : "groupMarker"
          },
          {
            "children" : [
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/identitymanager\/contains(_:)",
                "title" : "func contains(ObjectID) -> Bool",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/identitymanager\/createandreserve(type:)",
                "title" : "func createAndReserve(type: IdentityType) -> ObjectID",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/identitymanager\/isreserved(_:)",
                "title" : "func isReserved(ObjectID) -> Bool",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/identitymanager\/isused(_:)",
                "title" : "func isUsed(ObjectID) -> Bool",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/identitymanager\/release(_:)",
                "title" : "func release(ObjectID) -> Bool",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/identitymanager\/releasereservations(_:)",
                "title" : "func releaseReservations([ObjectID])",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/identitymanager\/reserve(_:type:)",
                "title" : "func reserve(ObjectID, type: IdentityType) -> Bool",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/identitymanager\/reserveifneeded(_:type:)",
                "title" : "func reserveIfNeeded(ObjectID, type: IdentityType) -> Bool",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/identitymanager\/type(_:)",
                "title" : "func type(ObjectID) -> IdentityType?",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/identitymanager\/use(_:type:)",
                "title" : "func use(ObjectID, type: IdentityType) -> Bool",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/identitymanager\/usereservations(_:)",
                "title" : "func useReservations([ObjectID])",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/poieticcore\/identitymanager",
            "title" : "IdentityManager",
            "type" : "class"
          },
          {
            "title" : "Structures",
            "type" : "groupMarker"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/designlibraryinfo\/init(from:)",
                "title" : "init(from: any Decoder) throws",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/poieticcore\/designlibraryinfo\/init(items:)",
                "title" : "init(items: [DesignLibraryItem])",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/designlibraryinfo\/formatversion",
                "title" : "let formatVersion: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/designlibraryinfo\/items",
                "title" : "let items: [DesignLibraryItem]",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/poieticcore\/designlibraryinfo",
            "title" : "DesignLibraryInfo",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/designlibraryitem\/init(from:)",
                "title" : "init(from: any Decoder) throws",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/poieticcore\/designlibraryitem\/init(url:name:title:)",
                "title" : "init(url: URL, name: String, title: String)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/designlibraryitem\/name",
                "title" : "let name: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/designlibraryitem\/title",
                "title" : "let title: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/designlibraryitem\/url",
                "title" : "let url: URL",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/poieticcore\/designlibraryitem",
            "title" : "DesignLibraryItem",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Structures",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/generationalarray\/index\/==(_:_:)",
                    "title" : "static func == (GenerationalArray<Element>.Index, GenerationalArray<Element>.Index) -> Bool",
                    "type" : "op"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/generationalarray\/index\/_(_:_:)",
                    "title" : "static func < (GenerationalArray<Element>.Index, GenerationalArray<Element>.Index) -> Bool",
                    "type" : "op"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/generationalarray\/index\/'...(_:)-7pvdx",
                        "title" : "static func ... (Self) -> PartialRangeThrough<Self>",
                        "type" : "op"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/generationalarray\/index\/'...(_:)-9afj9",
                        "title" : "static func ... (Self) -> PartialRangeFrom<Self>",
                        "type" : "op"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/generationalarray\/index\/'...(_:_:)",
                        "title" : "static func ... (Self, Self) -> ClosedRange<Self>",
                        "type" : "op"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/generationalarray\/index\/'.._(_:)",
                        "title" : "static func ..< (Self) -> PartialRangeUpTo<Self>",
                        "type" : "op"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/generationalarray\/index\/'.._(_:_:)",
                        "title" : "static func ..< (Self, Self) -> Range<Self>",
                        "type" : "op"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/generationalarray\/index\/_(_:_:)-7bisg",
                        "title" : "static func > (Self, Self) -> Bool",
                        "type" : "op"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/generationalarray\/index\/_=(_:_:)-6tv9q",
                        "title" : "static func >= (Self, Self) -> Bool",
                        "type" : "op"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/generationalarray\/index\/_=(_:_:)-9d6ja",
                        "title" : "static func <= (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/generationalarray\/index\/comparable-implementations",
                    "title" : "Comparable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticcore\/generationalarray\/index\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/poieticcore\/generationalarray\/index\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/generationalarray\/index",
                "title" : "GenerationalArray.Index",
                "type" : "struct"
              },
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/generationalarray\/init()",
                "title" : "init()",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/poieticcore\/generationalarray\/init(_:)",
                "title" : "init<C>(C)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/generationalarray\/count",
                "title" : "var count: Int",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/generationalarray\/isempty",
                "title" : "var isEmpty: Bool",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/generationalarray\/append(_:)",
                "title" : "func append(Element) -> GenerationalArray<Element>.Index",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/generationalarray\/isvalid(_:)",
                "title" : "func isValid(GenerationalArray<Element>.Index) -> Bool",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/generationalarray\/remove(at:)",
                "title" : "func remove(at: GenerationalArray<Element>.Index) -> Bool",
                "type" : "method"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/generationalarray\/endindex",
                    "title" : "var endIndex: GenerationalArray<Element>.Index",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/generationalarray\/first",
                    "title" : "var first: Self.Element?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/generationalarray\/indices",
                    "title" : "var indices: DefaultIndices<Self>",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/generationalarray\/startindex",
                    "title" : "var startIndex: GenerationalArray<Element>.Index",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/generationalarray\/underestimatedcount",
                    "title" : "var underestimatedCount: Int",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/generationalarray\/contains(_:)-206yh",
                    "title" : "func contains<C>(C) -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/generationalarray\/distance(from:to:)",
                    "title" : "func distance(from: Self.Index, to: Self.Index) -> Int",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/generationalarray\/drop(while:)",
                    "title" : "func drop(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/generationalarray\/dropfirst(_:)",
                    "title" : "func dropFirst(Int) -> Self.SubSequence",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/generationalarray\/droplast(_:)",
                    "title" : "func dropLast(Int) -> Self.SubSequence",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/generationalarray\/firstindex(of:)",
                    "title" : "func firstIndex(of: Self.Element) -> Self.Index?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/generationalarray\/firstindex(where:)",
                    "title" : "func firstIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/generationalarray\/firstrange(of:)",
                    "title" : "func firstRange<C>(of: C) -> Range<Self.Index>?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/generationalarray\/formindex(_:offsetby:)",
                    "title" : "func formIndex(inout Self.Index, offsetBy: Int)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/generationalarray\/formindex(_:offsetby:limitedby:)",
                    "title" : "func formIndex(inout Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/generationalarray\/formindex(after:)",
                    "title" : "func formIndex(after: inout Self.Index)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/generationalarray\/index(_:offsetby:)",
                    "title" : "func index(Self.Index, offsetBy: Int) -> Self.Index",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/generationalarray\/index(_:offsetby:limitedby:)",
                    "title" : "func index(Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Self.Index?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/generationalarray\/index(after:)",
                    "title" : "func index(after: GenerationalArray<Element>.Index) -> GenerationalArray<Element>.Index",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/poieticcore\/generationalarray\/index(of:)",
                    "title" : "func index(of: Self.Element) -> Self.Index?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/generationalarray\/indices(of:)",
                    "title" : "func indices(of: Self.Element) -> RangeSet<Self.Index>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/generationalarray\/indices(where:)",
                    "title" : "func indices(where: (Self.Element) throws -> Bool) rethrows -> RangeSet<Self.Index>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/generationalarray\/makeiterator()",
                    "title" : "func makeIterator() -> IndexingIterator<Self>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/generationalarray\/map(_:)-8oodn",
                    "title" : "func map<T, E>((Self.Element) throws(E) -> T) throws(E) -> [T]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/generationalarray\/prefix(_:)",
                    "title" : "func prefix(Int) -> Self.SubSequence",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/generationalarray\/prefix(through:)",
                    "title" : "func prefix(through: Self.Index) -> Self.SubSequence",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/generationalarray\/prefix(upto:)",
                    "title" : "func prefix(upTo: Self.Index) -> Self.SubSequence",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/generationalarray\/prefix(while:)",
                    "title" : "func prefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/generationalarray\/randomelement()",
                    "title" : "func randomElement() -> Self.Element?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/generationalarray\/randomelement(using:)",
                    "title" : "func randomElement<T>(using: inout T) -> Self.Element?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/generationalarray\/ranges(of:)",
                    "title" : "func ranges<C>(of: C) -> [Range<Self.Index>]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/generationalarray\/removingsubranges(_:)",
                    "title" : "func removingSubranges(RangeSet<Self.Index>) -> DiscontiguousSlice<Self>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/generationalarray\/split(maxsplits:omittingemptysubsequences:whereseparator:)",
                    "title" : "func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [Self.SubSequence]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/generationalarray\/split(separator:maxsplits:omittingemptysubsequences:)-23ory",
                    "title" : "func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [Self.SubSequence]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/generationalarray\/split(separator:maxsplits:omittingemptysubsequences:)-8f2xc",
                    "title" : "func split<C>(separator: C, maxSplits: Int, omittingEmptySubsequences: Bool) -> [Self.SubSequence]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/generationalarray\/suffix(_:)",
                    "title" : "func suffix(Int) -> Self.SubSequence",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/generationalarray\/suffix(from:)",
                    "title" : "func suffix(from: Self.Index) -> Self.SubSequence",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/generationalarray\/trimmingprefix(_:)",
                    "title" : "func trimmingPrefix<Prefix>(Prefix) -> Self.SubSequence",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/generationalarray\/trimmingprefix(while:)",
                    "title" : "func trimmingPrefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence",
                    "type" : "method"
                  },
                  {
                    "title" : "Subscripts",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/generationalarray\/subscript(_:)",
                    "title" : "subscript(GenerationalArray<Element>.Index) -> Element",
                    "type" : "subscript"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/generationalarray\/collection-implementations",
                "title" : "Collection Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/generationalarray\/init(arrayliteral:)",
                    "title" : "init(arrayLiteral: GenerationalArray<Element>.ArrayLiteralElement...)",
                    "type" : "init"
                  },
                  {
                    "title" : "Type Aliases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/generationalarray\/arrayliteralelement",
                    "title" : "GenerationalArray.ArrayLiteralElement",
                    "type" : "typealias"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/generationalarray\/expressiblebyarrayliteral-implementations",
                "title" : "ExpressibleByArrayLiteral Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/generationalarray\/movesubranges(_:to:)",
                    "title" : "func moveSubranges(RangeSet<Self.Index>, to: Self.Index) -> Range<Self.Index>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/generationalarray\/partition(by:)",
                    "title" : "func partition(by: (Self.Element) throws -> Bool) rethrows -> Self.Index",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/generationalarray\/swapat(_:_:)",
                    "title" : "func swapAt(Self.Index, Self.Index)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/generationalarray\/withcontiguousmutablestorageifavailable(_:)",
                    "title" : "func withContiguousMutableStorageIfAvailable<R>((inout UnsafeMutableBufferPointer<Self.Element>) throws -> R) rethrows -> R?",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/generationalarray\/mutablecollection-implementations",
                "title" : "MutableCollection Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/generationalarray\/lazy",
                    "title" : "var lazy: LazySequence<Self>",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/generationalarray\/publisher",
                    "title" : "var publisher: Publishers.Sequence<Self, Never>",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/generationalarray\/allsatisfy(_:)",
                    "title" : "func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/generationalarray\/compactmap(_:)",
                    "title" : "func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/generationalarray\/compare(_:_:)",
                    "title" : "func compare<Comparator>(Comparator.Compared, Comparator.Compared) -> ComparisonResult",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/generationalarray\/contains(_:)-71rxj",
                    "title" : "func contains(Self.Element) -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/generationalarray\/contains(where:)",
                    "title" : "func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/generationalarray\/count(where:)",
                    "title" : "func count<E>(where: (Self.Element) throws(E) -> Bool) throws(E) -> Int",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/generationalarray\/elementsequal(_:)",
                    "title" : "func elementsEqual<OtherSequence>(OtherSequence) -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/generationalarray\/elementsequal(_:by:)",
                    "title" : "func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/generationalarray\/enumerated()",
                    "title" : "func enumerated() -> EnumeratedSequence<Self>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/generationalarray\/filter(_:)",
                    "title" : "func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/generationalarray\/first(where:)",
                    "title" : "func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/generationalarray\/flatmap(_:)-5cr28",
                    "title" : "func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/poieticcore\/generationalarray\/flatmap(_:)-8z8pk",
                    "title" : "func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/generationalarray\/foreach(_:)",
                    "title" : "func forEach((Self.Element) throws -> Void) rethrows",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/generationalarray\/formatted()",
                    "title" : "func formatted() -> String",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/generationalarray\/formatted(_:)",
                    "title" : "func formatted<S>(S) -> S.FormatOutput",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/generationalarray\/joined()",
                    "title" : "func joined() -> FlattenSequence<Self>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/generationalarray\/joined(separator:)-6u5o8",
                    "title" : "func joined(separator: String) -> String",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/generationalarray\/joined(separator:)-9yuta",
                    "title" : "func joined<Separator>(separator: Separator) -> JoinedSequence<Self>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/generationalarray\/lexicographicallyprecedes(_:)",
                    "title" : "func lexicographicallyPrecedes<OtherSequence>(OtherSequence) -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/generationalarray\/lexicographicallyprecedes(_:by:)",
                    "title" : "func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/generationalarray\/map(_:)-6cobl",
                    "title" : "func map<T, E>((Self.Element) throws(E) -> T) throws(E) -> [T]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/generationalarray\/max()",
                    "title" : "func max() -> Self.Element?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/generationalarray\/max(by:)",
                    "title" : "func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/generationalarray\/min()",
                    "title" : "func min() -> Self.Element?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/generationalarray\/min(by:)",
                    "title" : "func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/generationalarray\/reduce(_:_:)",
                    "title" : "func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/generationalarray\/reduce(into:_:)",
                    "title" : "func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/generationalarray\/reversed()",
                    "title" : "func reversed() -> [Self.Element]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/generationalarray\/shuffled()",
                    "title" : "func shuffled() -> [Self.Element]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/generationalarray\/shuffled(using:)",
                    "title" : "func shuffled<T>(using: inout T) -> [Self.Element]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/generationalarray\/sorted()",
                    "title" : "func sorted() -> [Self.Element]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/generationalarray\/sorted(by:)",
                    "title" : "func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/generationalarray\/sorted(using:)-2u03y",
                    "title" : "func sorted<Comparator>(using: Comparator) -> [Self.Element]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/generationalarray\/sorted(using:)-5697b",
                    "title" : "func sorted<S, Comparator>(using: S) -> [Self.Element]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/generationalarray\/split(separator:maxsplits:omittingemptysubsequences:)-4ptvk",
                    "title" : "func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [ArraySlice<Self.Element>]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/generationalarray\/starts(with:)",
                    "title" : "func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/generationalarray\/starts(with:by:)",
                    "title" : "func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/generationalarray\/withcontiguousstorageifavailable(_:)",
                    "title" : "func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/generationalarray\/sequence-implementations",
                "title" : "Sequence Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/poieticcore\/generationalarray",
            "title" : "GenerationalArray",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/identityreservation\/design",
                "title" : "let design: Design",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/identityreservation\/contains(_:)",
                "title" : "func contains(ObjectID) -> Bool",
                "type" : "method"
              },
              {
                "title" : "Subscripts",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/identityreservation\/subscript(_:)",
                "title" : "subscript(RawObjectID) -> (id: ObjectID, type: IdentityType)?",
                "type" : "subscript"
              }
            ],
            "path" : "\/documentation\/poieticcore\/identityreservation",
            "title" : "IdentityReservation",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/objecttypeerrorcollection\/init(_:)",
                "title" : "init([ObjectTypeError])",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/objecttypeerrorcollection\/errors",
                "title" : "let errors: [ObjectTypeError]",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/objecttypeerrorcollection\/localizeddescription",
                    "title" : "var localizedDescription: String",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/objecttypeerrorcollection\/error-implementations",
                "title" : "Error Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/poieticcore\/objecttypeerrorcollection",
            "title" : "ObjectTypeErrorCollection",
            "type" : "struct"
          },
          {
            "title" : "Variables",
            "type" : "groupMarker"
          },
          {
            "path" : "\/documentation\/poieticcore\/reservedattributenames",
            "title" : "let ReservedAttributeNames: [String]",
            "type" : "var"
          },
          {
            "title" : "Type Aliases",
            "type" : "groupMarker"
          },
          {
            "path" : "\/documentation\/poieticcore\/attributekey",
            "title" : "AttributeKey",
            "type" : "typealias"
          },
          {
            "title" : "Enumerations",
            "type" : "groupMarker"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/functionerror\/invalidargument(_:_:)",
                "title" : "case invalidArgument(Int, ValueError)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/poieticcore\/functionerror\/invalidnumberofarguments(_:)",
                "title" : "case invalidNumberOfArguments(Int)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/poieticcore\/functionerror\/notcomparabletypes(_:_:)",
                "title" : "case notComparableTypes(ValueType, ValueType)",
                "type" : "case"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/functionerror\/localizeddescription",
                    "title" : "var localizedDescription: String",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/functionerror\/error-implementations",
                "title" : "Error Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/poieticcore\/functionerror",
            "title" : "FunctionError",
            "type" : "enum"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/identitytype\/frame",
                "title" : "case frame",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/poieticcore\/identitytype\/object",
                "title" : "case object",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/poieticcore\/identitytype\/snapshot",
                "title" : "case snapshot",
                "type" : "case"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/identitytype\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/identitytype\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/poieticcore\/identitytype",
            "title" : "IdentityType",
            "type" : "enum"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/variabletype\/any",
                "title" : "case any",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/poieticcore\/variabletype\/concrete(_:)",
                "title" : "case concrete(ValueType)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/poieticcore\/variabletype\/union(_:)",
                "title" : "case union([ValueType])",
                "type" : "case"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/variabletype\/description",
                "title" : "var description: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/variabletype\/isarray",
                "title" : "var isArray: Bool",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/variabletype\/isconvertible(to:)",
                "title" : "func isConvertible(to: VariableType) -> Bool",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticcore\/variabletype\/matches(_:)",
                "title" : "func matches(ValueType) -> Bool",
                "type" : "method"
              },
              {
                "title" : "Type Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticcore\/variabletype\/bool",
                "title" : "static let bool: VariableType",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/variabletype\/bools",
                "title" : "static let bools: VariableType",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/variabletype\/double",
                "title" : "static let double: VariableType",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/variabletype\/doubles",
                "title" : "static let doubles: VariableType",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/variabletype\/int",
                "title" : "static let int: VariableType",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/variabletype\/ints",
                "title" : "static let ints: VariableType",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/variabletype\/numeric",
                "title" : "static let numeric: VariableType",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/variabletype\/objectreference",
                "title" : "static let objectReference: VariableType",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/variabletype\/point",
                "title" : "static let point: VariableType",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/variabletype\/points",
                "title" : "static let points: VariableType",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/variabletype\/string",
                "title" : "static let string: VariableType",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticcore\/variabletype\/strings",
                "title" : "static let strings: VariableType",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/variabletype\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/variabletype\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/poieticcore\/variabletype",
            "title" : "VariableType",
            "type" : "enum"
          },
          {
            "title" : "Extended Modules",
            "type" : "groupMarker"
          },
          {
            "children" : [
              {
                "title" : "Extended Structures",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticcore\/swift\/simd2\/length",
                    "title" : "var length: Double",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/poieticcore\/swift\/simd2",
                "title" : "SIMD2",
                "type" : "extension"
              }
            ],
            "path" : "\/documentation\/poieticcore\/swift",
            "title" : "Swift",
            "type" : "extension"
          }
        ],
        "path" : "\/documentation\/poieticcore",
        "title" : "PoieticCore",
        "type" : "module"
      }
    ]
  },
  "schemaVersion" : {
    "major" : 0,
    "minor" : 1,
    "patch" : 2
  }
}